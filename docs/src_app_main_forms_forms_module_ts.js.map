{"version":3,"sources":["./node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","./node_modules/ngx-mask/__ivy_ngcc__/fesm2015/ngx-mask.js","./src/app/main/forms/form-elements/checkbox/checkbox.component.ts","./src/app/main/forms/form-elements/checkbox/checkbox.component.html","./src/app/main/forms/form-elements/checkbox/checkbox.module.ts","./src/app/main/forms/form-elements/checkbox/checkbox.snippetcode.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component.html","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.service.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.component.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.component.html","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.module.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.snippetcode.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component.html","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.module.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.service.ts","./src/app/main/forms/form-elements/file-uploader/file-uploader.component.ts","./src/app/main/forms/form-elements/file-uploader/file-uploader.component.html","./src/app/main/forms/form-elements/file-uploader/file-uploader.module.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.component.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.component.html","./src/app/main/forms/form-elements/flatpickr/flatpickr.module.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.snippetcode.ts","./src/app/main/forms/form-elements/form-elements.module.ts","./src/app/main/forms/form-elements/input-groups/input-groups.component.ts","./src/app/main/forms/form-elements/input-groups/input-groups.component.html","./src/app/main/forms/form-elements/input-groups/input-groups.module.ts","./src/app/main/forms/form-elements/input-groups/input-groups.snippetcode.ts","./src/app/main/forms/form-elements/input-mask/input-mask.component.ts","./src/app/main/forms/form-elements/input-mask/input-mask.component.html","./src/app/main/forms/form-elements/input-mask/input-mask.module.ts","./src/app/main/forms/form-elements/input-mask/input-mask.snippetcode.ts","./src/app/main/forms/form-elements/input/input.component.ts","./src/app/main/forms/form-elements/input/input.component.html","./src/app/main/forms/form-elements/input/input.module.ts","./src/app/main/forms/form-elements/input/input.snippetcode.ts","./src/app/main/forms/form-elements/number-input/number-input.component.ts","./src/app/main/forms/form-elements/number-input/number-input.component.html","./src/app/main/forms/form-elements/number-input/number-input.module.ts","./src/app/main/forms/form-elements/number-input/number-input.snippetcode.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.component.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.component.html","./src/app/main/forms/form-elements/quill-editor/quill-editor.module.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.snippetcode.ts","./src/app/main/forms/form-elements/radio/radio.component.ts","./src/app/main/forms/form-elements/radio/radio.component.html","./src/app/main/forms/form-elements/radio/radio.module.ts","./src/app/main/forms/form-elements/radio/radio.snippetcode.ts","./src/app/main/forms/form-elements/select/data.service.ts","./src/app/main/forms/form-elements/select/select.component.html","./src/app/main/forms/form-elements/select/select.component.ts","./src/app/main/forms/form-elements/select/select.module.ts","./src/app/main/forms/form-elements/switch/switch.component.ts","./src/app/main/forms/form-elements/switch/switch.component.html","./src/app/main/forms/form-elements/switch/switch.module.ts","./src/app/main/forms/form-elements/switch/switch.snippetcode.ts","./src/app/main/forms/form-elements/textarea/textarea.component.ts","./src/app/main/forms/form-elements/textarea/textarea.component.html","./src/app/main/forms/form-elements/textarea/textarea.module.ts","./src/app/main/forms/form-elements/textarea/textarea.snippetcode.ts","./src/app/main/forms/form-layout/form-layout.component.ts","./src/app/main/forms/form-layout/form-layout.component.html","./src/app/main/forms/form-layout/form-layout.module.ts","./src/app/main/forms/form-layout/form-layout.snippetcode.ts","./src/app/main/forms/form-repeater/form-repeater.animation.ts","./src/app/main/forms/form-repeater/form-repeater.component.ts","./src/app/main/forms/form-repeater/form-repeater.component.html","./src/app/main/forms/form-repeater/form-repeater.module.ts","./src/app/main/forms/form-repeater/form-repeater.snippetcode.ts","./src/app/main/forms/form-validation/_helpers/must-match.validator.ts","./src/app/main/forms/form-validation/form-validation.component.ts","./src/app/main/forms/form-validation/form-validation.component.html","./src/app/main/forms/form-validation/form-validation.module.ts","./src/app/main/forms/form-validation/form-validation.snippetcode.ts","./src/app/main/forms/form-wizard/form-wizard.component.ts","./src/app/main/forms/form-wizard/form-wizard.component.html","./src/app/main/forms/form-wizard/form-wizard.module.ts","./src/app/main/forms/forms.module.ts"],"names":["isElement","node","nodeName","prop","attr","find","FileLikeObject","fileOrInput","rawFile","isInput","fakePathOrObject","value","postfix","method","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","object","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","alias","itemAlias","uploadItem","e","_onCompleteItem","_onErrorItem","cancelItem","removeFromQueue","form","response","status","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","removeAfterUpload","remove","_nextIndex","FileType","mimeClass","mime_psd","indexOf","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","split","length","extension","undefined","isFile","File","Headers","FileUploaderOptions","FileUploader","queue","autoUpload","isHTML5","filters","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","EventEmitter","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","files","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","cancel","splice","transport","_prepareToUploading","_xhr","_form","abort","items","getNotUploadedItems","upload","sort","item1","item2","fileItems","getMimeClass","_onError","onErrorItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","parsedHeaders","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","queueLimit","every","call","parsed","val","line","trim","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onBuildForm","onBuildItemForm","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onCancel","onCancelItem","FileSelectDirective","element","onFileSelected","nativeElement","attributes","multiple","getOptions","getFilters","addToQueue","isEmptyAfterSelection","ɵfac","FileSelectDirective_Factory","t","ɵngcc0","ɵdir","selectors","hostBindings","FileSelectDirective_HostBindings","rf","ctx","FileSelectDirective_change_HostBindingHandler","onChange","inputs","outputs","ctorParameters","ElementRef","propDecorators","Input","Output","HostListener","args","ngDevMode","Directive","selector","FileDropDirective","fileOver","onFileDrop","transfer","_getTransfer","_preventAndStop","_haveFiles","dropEffect","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","FileDropDirective_Factory","FileDropDirective_HostBindings","FileDropDirective_drop_HostBindingHandler","$event","onDrop","FileDropDirective_dragover_HostBindingHandler","onDragOver","FileDropDirective_dragleave_HostBindingHandler","onDragLeave","FileUploadModule","FileUploadModule_Factory","ɵmod","ɵinj","imports","CommonModule","NgModule","declarations","exports","ngJitMode","config","InjectionToken","NEW_CONFIG","INITIAL_CONFIG","initialConfig","suffix","prefix","thousandSeparator","decimalMarker","clearIfNotMatch","showTemplate","showMaskTyped","placeHolderCharacter","dropSpecialCharacters","hiddenInput","shownMaskExpression","separatorLimit","allowNegativeNumbers","validation","specialCharacters","leadZeroDateTime","patterns","pattern","RegExp","optional","X","symbol","A","S","d","m","M","H","h","s","timeMasks","withoutValidation","MaskApplierService","_config","maskExpression","actualValue","_formatWithSeparators","str","thousandSeparatorChar","decimalChar","precision","x","decimals","res","rgx","test","substr","percentage","Number","getPrecision","Infinity","checkAndRemoveSuffix","inputValue","_a","_b","_c","includes","checkInputPrecision","precisionRegEx","_charToRegExpExpression","precisionMatch","diff","substring","endsWith","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","maskAndPattern","mask","customPattern","applyMask","position","justPasted","backspaced","cb","cursor","multi","backspaceShift","shift","stepBack","inputArray","toString","ipError","arr","cpfCnpjError","startsWith","_stripToDecimal","base","thousandSeperatorCharEscaped","decimalMarkerEscaped","invalidChars","invalidCharRegexp","strForSep","commaShift","shiftStep","add","clear","inputSymbol","_checkSymbolMask","_shiftStep","daysCount","monthsCount","withoutDays","day1monthInput","day2monthInput","day1monthPaste","day2monthPaste","_findSpecialChar","newPosition","has","actualShift","onlySpecial","char","maskSymbol","idx","join","charsToEscape","inputLength","MaskApplierService_Factory","ɵprov","token","factory","decorators","Inject","Injectable","MaskService","document","_elementRef","_renderer","isNumberValue","maskIsShown","selStart","selEnd","writingValue","maskChanged","_","showMaskInInput","formControlResult","getSymbol","newInputValue","actualResult","shiftTypedSymbols","Boolean","getActualValue","hideInput","resLen","prefNmask","countSkipedSymbol","_numberSkipedSymbols","regex","exec","formElement","activeElement","clearIfNotMatchFn","curr","compare","symbolToReplace","currSymbol","replaceSymbol","inputVal","Error","_checkForIp","_checkForCpfCnpj","formElementProperty","Promise","resolve","setProperty","chars","_removeMask","_removeSuffix","_removePrefix","concat","cpf","cnpj","_toNumber","_checkSymbols","num","isNaN","specialCharactersForRemove","_regExpForRemove","separatorPrecision","_retrieveSeparatorPrecision","separatorValue","_retrieveSeparatorValue","_checkPrecision","maskExpretion","matcher","separatorExpression","toFixed","MaskService_Factory","DOCUMENT","Renderer2","MaskDirective","_maskService","_maskValue","_position","_maskExpressionArray","_justPasted","onTouch","changes","currentValue","previousValue","firstChange","a","b","c","_applyMask","_createValidationError","_validateTime","counterOfOpt","opt","checkSpecialCharAmount","el","target","_inputValue","_setMask","selectionStart","caretShift","applyValueChanges","_code","_backspaceShift","positionToApply","_getActualInputLength","setSelectionRange","posStart","posEnd","selectionEnd","keyCode","focus","nextValue","code","suffixCheckOnPressDelete","cursorStart","readOnly","ctrlKey","metaKey","__awaiter","setDisabledState","disable","String","isDisabled","maskExp","reduce","accum","currval","_start","_end","repeatNumber","replaceWith","_repeatPatternSymbols","rowMaskLen","requiredMask","removeMask","MaskDirective_Factory","MaskDirective_HostBindings","MaskDirective_paste_HostBindingHandler","onPaste","MaskDirective_input_HostBindingHandler","onInput","MaskDirective_blur_HostBindingHandler","onBlur","MaskDirective_click_HostBindingHandler","onFocus","MaskDirective_keydown_HostBindingHandler","onKeyDown","features","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","providers","MaskPipe","applyMaskWithPattern","MaskPipe_Factory","ɵpipe","pure","Pipe","NgxMaskModule","configValue","ngModule","useValue","useFactory","_configFactory","deps","NgxMaskModule_Factory","initConfig","Function","commonjsGlobal","globalThis","window","global","self","KeyboardEvent","_eventType","_init"],"mappings":"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","file":"src_app_main_forms_forms_module_ts.js","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵfac = function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); };\nFileUploadModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n//# sourceMappingURL=ng2-file-upload.js.map","import { InjectionToken, Injectable, Inject, ElementRef, Renderer2, Directive, forwardRef, Input, HostListener, Pipe, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nconst config = new InjectionToken('config');\nconst NEW_CONFIG = new InjectionToken('NEW_CONFIG');\nconst INITIAL_CONFIG = new InjectionToken('INITIAL_CONFIG');\nconst initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: '.',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    allowNegativeNumbers: false,\n    validation: true,\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    leadZeroDateTime: false,\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\nconst timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\nconst withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\nclass MaskApplierService {\n    constructor(_config) {\n        this._config = _config;\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (str, thousandSeparatorChar, decimalChar, precision) => {\n            const x = str.split(decimalChar);\n            const decimals = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n            let res = x[0];\n            const separatorLimit = this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                if (res[0] === '-') {\n                    res = `-${res.slice(1, res.length).slice(0, separatorLimit.length)}`;\n                }\n                else {\n                    res = res.slice(0, separatorLimit.length);\n                }\n            }\n            const rgx = /(\\d+)(\\d{3})/;\n            while (thousandSeparatorChar && rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substr(0, precision + 1);\n        };\n        this.percentage = (str) => {\n            return Number(str) >= 0 && Number(str) <= 100;\n        };\n        this.getPrecision = (maskExpression) => {\n            const x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        };\n        this.checkAndRemoveSuffix = (inputValue) => {\n            var _a, _b, _c;\n            for (let i = ((_a = this.suffix) === null || _a === void 0 ? void 0 : _a.length) - 1; i >= 0; i--) {\n                const substr = this.suffix.substr(i, (_b = this.suffix) === null || _b === void 0 ? void 0 : _b.length);\n                if (inputValue.includes(substr) &&\n                    (i - 1 < 0 || !inputValue.includes(this.suffix.substr(i - 1, (_c = this.suffix) === null || _c === void 0 ? void 0 : _c.length)))) {\n                    return inputValue.replace(substr, '');\n                }\n            }\n            return inputValue;\n        };\n        this.checkInputPrecision = (inputValue, precision, decimalMarker) => {\n            if (precision < Infinity) {\n                const precisionRegEx = new RegExp(this._charToRegExpExpression(decimalMarker) + `\\\\d{${precision}}.*$`);\n                const precisionMatch = inputValue.match(precisionRegEx);\n                if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                    const diff = precisionMatch[0].length - 1 - precision;\n                    inputValue = inputValue.substring(0, inputValue.length - diff);\n                }\n                if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        };\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n        this.allowNegativeNumbers = this._config.allowNegativeNumbers;\n        this.leadZeroDateTime = this._config.leadZeroDateTime;\n    }\n    applyMaskWithPattern(inputValue, maskAndPattern) {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, cb = () => { }) {\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        let cursor = 0;\n        let result = '';\n        let multi = false;\n        let backspaceShift = false;\n        let shift = 1;\n        let stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && (inputValue === null || inputValue === void 0 ? void 0 : inputValue.length) > 0) {\n            inputValue = this.checkAndRemoveSuffix(inputValue);\n        }\n        const inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            this.ipError = !!(inputArray.filter((i) => i === '.').length < 3 && inputArray.length < 7);\n            maskExpression = '099.099.099.099';\n        }\n        const arr = [];\n        for (let i = 0; i < inputValue.length; i++) {\n            if (inputValue[i].match('\\\\d')) {\n                arr.push(inputValue[i]);\n            }\n        }\n        if (maskExpression === 'CPF_CNPJ') {\n            this.cpfCnpjError = !!(arr.length !== 11 && arr.length !== 14);\n            if (arr.length > 11) {\n                maskExpression = '00.000.000/0000-00';\n            }\n            else {\n                maskExpression = '000.000.000-00';\n            }\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/.]/)) {\n                inputValue = this._stripToDecimal(inputValue);\n                const precision = this.getPrecision(maskExpression);\n                inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            }\n            if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                const base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\[\\]:\";<>.?\\/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            inputValue =\n                inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== this.decimalMarker && !backspaced\n                    ? inputValue.slice(1, inputValue.length)\n                    : inputValue;\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            const thousandSeperatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            const decimalMarkerEscaped = this._charToRegExpExpression(this.decimalMarker);\n            const invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\\\\.\";<>?\\\\/'\n                .replace(thousandSeperatorCharEscaped, '')\n                .replace(decimalMarkerEscaped, '');\n            const invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const precision = this.getPrecision(maskExpression);\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            const strForSep = inputValue.replace(new RegExp(thousandSeperatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            const commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            const shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                let _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // tslint:disable-next-line\n            let i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i]) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    const daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if ((Number(inputSymbol) > 3 && this.leadZeroDateTime) ||\n                            Number(inputValue.slice(cursor, cursor + 2)) > daysCount ||\n                            inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        const monthsCount = 12;\n                        // mask without day\n                        const withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        const day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount &&\n                                inputValue[cursor] !== '/') ||\n                                inputValue[cursor] === '/' ||\n                                (inputValue[cursor - 3] === '/' &&\n                                    Number(inputValue.slice(cursor - 2, cursor)) > monthsCount &&\n                                    inputValue[cursor - 1] !== '/') ||\n                                inputValue[cursor - 1] === '/');\n                        // 10<day<31 && month<12 for input\n                        const day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount || inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        const day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            !inputValue.slice(cursor - 2, cursor).includes('/') &&\n                            Number(inputValue.slice(cursor - 2, cursor)) > monthsCount;\n                        // 10<day<31 && month<12 for paste whole data\n                        const day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if ((Number(inputSymbol) > 1 && this.leadZeroDateTime) ||\n                            withoutDays ||\n                            day1monthInput ||\n                            day2monthInput ||\n                            day1monthPaste ||\n                            day2monthPaste) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    this._shiftStep(maskExpression, cursor, inputArray.length);\n                    i--;\n                }\n                else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n                    if (!!inputArray[cursor] &&\n                        maskExpression !== '099.099.099.099' &&\n                        maskExpression !== '000.000.000-00' &&\n                        maskExpression !== '00.000.000/0000-00') {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped &&\n                    this.maskSpecialCharacters.indexOf(inputSymbol) < 0 &&\n                    inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        let newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        let actualShift = justPasted ? cursor : this._shift.has(position) ? shift : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        let onlySpecial = false;\n        if (backspaced) {\n            onlySpecial = inputArray.every((char) => this.maskSpecialCharacters.includes(char));\n        }\n        let res = `${this.prefix}${onlySpecial ? '' : result}${this.suffix}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    _findSpecialChar(inputSymbol) {\n        return this.maskSpecialCharacters.find((val) => val === inputSymbol);\n    }\n    _checkSymbolMask(inputSymbol, maskSymbol) {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol));\n    }\n    _stripToDecimal(str) {\n        return str\n            .split('')\n            .filter((i, idx) => {\n            return (i.match('^-?\\\\d') ||\n                i.match('\\\\s') ||\n                i === '.' ||\n                i === ',' ||\n                (i === '-' && idx === 0 && this.allowNegativeNumbers));\n        })\n            .join('');\n    }\n    _charToRegExpExpression(char) {\n        if (char) {\n            const charsToEscape = '[\\\\^$.|?*+()';\n            return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? '\\\\' + char : char;\n        }\n        return char;\n    }\n    _shiftStep(maskExpression, cursor, inputLength) {\n        const shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputLength : cursor;\n        this._shift.add(shiftStep + this.prefix.length || 0);\n    }\n}\nMaskApplierService.ɵfac = function MaskApplierService_Factory(t) { return new (t || MaskApplierService)(ɵngcc0.ɵɵinject(config)); };\nMaskApplierService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MaskApplierService, factory: MaskApplierService.ɵfac });\nMaskApplierService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskApplierService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }]; }, null); })();\n\nclass MaskService extends MaskApplierService {\n    constructor(document, _config, _elementRef, _renderer) {\n        super(_config);\n        this.document = document;\n        this._config = _config;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.maskExpression = '';\n        this.isNumberValue = false;\n        this.placeHolderCharacter = '_';\n        this.maskIsShown = '';\n        this.selStart = null;\n        this.selEnd = null;\n        /**\n         * Whether we are currently in writeValue function, in this case when applying the mask we don't want to trigger onChange function,\n         * since writeValue should be a one way only process of writing the DOM value based on the Angular model value.\n         */\n        this.writingValue = false;\n        this.maskChanged = false;\n        this.onChange = (_) => { };\n    }\n    // tslint:disable-next-line:cyclomatic-complexity\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, cb = () => { }) {\n        if (!maskExpression) {\n            return inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (this.maskExpression === 'CPF_CNPJ' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        const getSymbol = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\n        let newInputValue = '';\n        if (this.hiddenInput && !this.writingValue) {\n            let actualResult = this.actualValue.split('');\n            // tslint:disable no-unused-expression\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            // tslint:enable no-unused-expression\n            newInputValue =\n                this.actualValue.length && actualResult.length <= inputValue.length\n                    ? this.shiftTypedSymbols(actualResult.join(''))\n                    : inputValue;\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        const result = super.applyMask(newInputValue, maskExpression, position, justPasted, backspaced, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item) => item !== this.decimalMarker);\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\n            }\n            return result;\n        }\n        const resLen = result.length;\n        const prefNmask = this.prefix + this.maskIsShown;\n        if (this.maskExpression.includes('H')) {\n            const countSkipedSymbol = this._numberSkipedSymbols(result);\n            return result + prefNmask.slice(resLen + countSkipedSymbol);\n        }\n        else if (this.maskExpression === 'IP' || this.maskExpression === 'CPF_CNPJ') {\n            return result + prefNmask;\n        }\n        return result + prefNmask.slice(resLen);\n    }\n    // get the number of characters that were shifted\n    _numberSkipedSymbols(value) {\n        const regex = /(^|\\D)(\\d\\D)/g;\n        let match = regex.exec(value);\n        let countSkipedSymbol = 0;\n        while (match != null) {\n            countSkipedSymbol += 1;\n            match = regex.exec(value);\n        }\n        return countSkipedSymbol;\n    }\n    applyValueChanges(position = 0, justPasted, backspaced, cb = () => { }) {\n        const formElement = this._elementRef.nativeElement;\n        formElement.value = this.applyMask(formElement.value, this.maskExpression, position, justPasted, backspaced, cb);\n        if (formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n    hideInput(inputValue, maskExpression) {\n        return inputValue\n            .split('')\n            .map((curr, index) => {\n            if (this.maskAvailablePatterns &&\n                this.maskAvailablePatterns[maskExpression[index]] &&\n                this.maskAvailablePatterns[maskExpression[index]].symbol) {\n                return this.maskAvailablePatterns[maskExpression[index]].symbol;\n            }\n            return curr;\n        })\n            .join('');\n    }\n    // this function is not necessary, it checks result against maskExpression\n    getActualValue(res) {\n        const compare = res\n            .split('')\n            .filter((symbol, i) => this._checkSymbolMask(symbol, this.maskExpression[i]) ||\n            (this.maskSpecialCharacters.includes(this.maskExpression[i]) && symbol === this.maskExpression[i]));\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    }\n    shiftTypedSymbols(inputValue) {\n        let symbolToReplace = '';\n        const newInputValue = (inputValue &&\n            inputValue.split('').map((currSymbol, index) => {\n                if (this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\n                    inputValue[index + 1] !== this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    const replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            })) ||\n            [];\n        return newInputValue.join('');\n    }\n    showMaskInInput(inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                if (this.maskExpression === 'IP') {\n                    return this._checkForIp(inputVal);\n                }\n                if (this.maskExpression === 'CPF_CNPJ') {\n                    return this._checkForCpfCnpj(inputVal);\n                }\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    }\n    clearIfNotMatchFn() {\n        const formElement = this._elementRef.nativeElement;\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(formElement.value, this.maskExpression);\n        }\n    }\n    set formElementProperty([name, value]) {\n        Promise.resolve().then(() => this._renderer.setProperty(this._elementRef.nativeElement, name, value));\n    }\n    checkSpecialCharAmount(mask) {\n        const chars = mask.split('').filter((item) => this._findSpecialChar(item));\n        return chars.length;\n    }\n    removeMask(inputValue) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.maskSpecialCharacters.concat('_').concat(this.placeHolderCharacter));\n    }\n    _checkForIp(inputVal) {\n        if (inputVal === '#') {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    }\n    _checkForCpfCnpj(inputVal) {\n        const cpf = `${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        const cnpj = `${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `/${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        if (inputVal === '#') {\n            return cpf;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return cpf.slice(arr.length, cpf.length);\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return cpf.slice(arr.length + 1, cpf.length);\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return cpf.slice(arr.length + 2, cpf.length);\n        }\n        if (arr.length > 9 && arr.length < 11) {\n            return cpf.slice(arr.length + 3, cpf.length);\n        }\n        if (arr.length === 11) {\n            return '';\n        }\n        if (arr.length === 12) {\n            if (inputVal.length === 17) {\n                return cnpj.slice(16, cnpj.length);\n            }\n            return cnpj.slice(15, cnpj.length);\n        }\n        if (arr.length > 12 && arr.length <= 14) {\n            return cnpj.slice(arr.length + 4, cnpj.length);\n        }\n        return '';\n    }\n    /**\n     * Propogates the input value back to the Angular model by triggering the onChange function. It won't do this if writingValue\n     * is true. If that is true it means we are currently in the writeValue function, which is supposed to only update the actual\n     * DOM element based on the Angular model value. It should be a one way process, i.e. writeValue should not be modifying the Angular\n     * model value too. Therefore, we don't trigger onChange in this scenario.\n     * @param inputValue the current form input value\n     */\n    formControlResult(inputValue) {\n        if (this.writingValue || this.maskChanged) {\n            this.maskChanged = false;\n            return;\n        }\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._toNumber(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._toNumber(this._checkSymbols(inputValue)));\n        }\n        else {\n            this.onChange(this._removeSuffix(inputValue));\n        }\n    }\n    _toNumber(value) {\n        if (!this.isNumberValue || value === '') {\n            return value;\n        }\n        const num = Number(value);\n        return Number.isNaN(num) ? value : num;\n    }\n    _removeMask(value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n    _removePrefix(value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n    _removeSuffix(value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    }\n    _retrieveSeparatorValue(result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n    }\n    _regExpForRemove(specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((item) => `\\\\${item}`).join('|'), 'gi');\n    }\n    _checkSymbols(result) {\n        if (result === '') {\n            return result;\n        }\n        const separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        let separatorValue = this._retrieveSeparatorValue(result);\n        if (this.decimalMarker !== '.') {\n            separatorValue = separatorValue.replace(this.decimalMarker, '.');\n        }\n        if (!this.isNumberValue) {\n            return separatorValue;\n        }\n        if (separatorPrecision) {\n            if (result === this.decimalMarker) {\n                return null;\n            }\n            return this._checkPrecision(this.maskExpression, separatorValue);\n        }\n        else {\n            return Number(separatorValue);\n        }\n    }\n    // TODO should think about helpers or separting decimal precision to own property\n    _retrieveSeparatorPrecision(maskExpretion) {\n        const matcher = maskExpretion.match(new RegExp(`^separator\\\\.([^d]*)`));\n        return matcher ? Number(matcher[1]) : null;\n    }\n    _checkPrecision(separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    }\n}\nMaskService.ɵfac = function MaskService_Factory(t) { return new (t || MaskService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(config), ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(ɵngcc0.Renderer2)); };\nMaskService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MaskService, factory: MaskService.ɵfac });\nMaskService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();\n\n// tslint:disable deprecation\n// tslint:disable no-input-rename\nclass MaskDirective {\n    constructor(document, _maskService, _config) {\n        this.document = document;\n        this._maskService = _maskService;\n        this._config = _config;\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this.allowNegativeNumbers = null;\n        this.leadZeroDateTime = null;\n        this._maskValue = '';\n        this._position = null;\n        this._maskExpressionArray = [];\n        this._justPasted = false;\n        this.onChange = (_) => { };\n        this.onTouch = () => { };\n    }\n    ngOnChanges(changes) {\n        const { maskExpression, specialCharacters, patterns, prefix, suffix, thousandSeparator, decimalMarker, dropSpecialCharacters, hiddenInput, showMaskTyped, placeHolderCharacter, shownMaskExpression, showTemplate, clearIfNotMatch, validation, separatorLimit, allowNegativeNumbers, leadZeroDateTime, } = changes;\n        if (maskExpression) {\n            if (maskExpression.currentValue !== maskExpression.previousValue && !maskExpression.firstChange) {\n                this._maskService.maskChanged = true;\n            }\n            this._maskValue = maskExpression.currentValue || '';\n            if (maskExpression.currentValue && maskExpression.currentValue.split('||').length > 1) {\n                this._maskExpressionArray = maskExpression.currentValue.split('||').sort((a, b) => {\n                    return a.length - b.length;\n                });\n                this._maskValue = this._maskExpressionArray[0];\n                this.maskExpression = this._maskExpressionArray[0];\n                this._maskService.maskExpression = this._maskExpressionArray[0];\n            }\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.maskSpecialCharacters = specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        if (allowNegativeNumbers) {\n            this._maskService.allowNegativeNumbers = allowNegativeNumbers.currentValue;\n            if (this._maskService.allowNegativeNumbers) {\n                this._maskService.maskSpecialCharacters = this._maskService.maskSpecialCharacters.filter((c) => c !== '-');\n            }\n        }\n        if (leadZeroDateTime) {\n            this._maskService.leadZeroDateTime = leadZeroDateTime.currentValue;\n        }\n        this._applyMask();\n    }\n    // tslint:disable-next-line: cyclomatic-complexity\n    validate({ value }) {\n        if (!this._maskService.validation || !this._maskValue) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskService.cpfCnpjError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt = 0;\n            for (const key in this._maskService.maskAvailablePatterns) {\n                if (this._maskService.maskAvailablePatterns[key].optional &&\n                    this._maskService.maskAvailablePatterns[key].optional === true) {\n                    if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\n                        const opt = this._maskValue\n                            .split('')\n                            .filter((i) => i === key)\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this._maskValue.indexOf(key) !== -1 && value.toString().length >= this._maskValue.indexOf(key)) {\n                        return null;\n                    }\n                    if (counterOfOpt === this._maskValue.length) {\n                        return null;\n                    }\n                }\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length === this._maskValue.length + Number(this._maskValue.split('{')[1].split('}')[0]) - 4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return this._createValidationError(value);\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                const length = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length) {\n                    return this._createValidationError(value);\n                }\n            }\n        }\n        return null;\n    }\n    onPaste() {\n        this._justPasted = true;\n    }\n    onInput(e) {\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        const position = el.selectionStart === 1\n            ? el.selectionStart + this._maskService.prefix.length\n            : el.selectionStart;\n        let caretShift = 0;\n        let backspaceShift = false;\n        this._maskService.applyValueChanges(position, this._justPasted, this._code === 'Backspace' || this._code === 'Delete', (shift, _backspaceShift) => {\n            this._justPasted = false;\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        });\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        let positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        if (positionToApply > this._getActualInputLength()) {\n            positionToApply = this._getActualInputLength();\n        }\n        if (positionToApply < 0) {\n            positionToApply = 0;\n        }\n        el.setSelectionRange(positionToApply, positionToApply);\n        this._position = null;\n    }\n    onBlur() {\n        if (this._maskValue) {\n            this._maskService.clearIfNotMatchFn();\n        }\n        this.onTouch();\n    }\n    onFocus(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        const el = e.target;\n        const posStart = 0;\n        const posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            e.keyCode !== 38) {\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        }\n        const nextValue = !el.value || el.value === this._maskService.prefix\n            ? this._maskService.prefix + this._maskService.maskIsShown\n            : el.value;\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if ((el.selectionStart || el.selectionEnd) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n        /** select only inserted text */\n        if (el.selectionEnd > this._getActualInputLength()) {\n            el.selectionEnd = this._getActualInputLength();\n        }\n    }\n    // tslint:disable-next-line: cyclomatic-complexity\n    onKeyDown(e) {\n        var _a;\n        if (!this._maskValue) {\n            return;\n        }\n        this._code = e.code ? e.code : e.key;\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && el.selectionStart !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = ((_a = this.specialCharacters) === null || _a === void 0 ? void 0 : _a.length)\n                    ? this.specialCharacters\n                    : this._config.specialCharacters;\n                if (this.prefix.length > 1 && el.selectionStart <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, this.prefix.length);\n                }\n                else {\n                    if (this._inputValue.length !== el.selectionStart && el.selectionStart !== 1) {\n                        while (this.specialCharacters.includes(this._inputValue[el.selectionStart - 1].toString()) &&\n                            ((this.prefix.length >= 1 && el.selectionStart > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n                        }\n                    }\n                    this.suffixCheckOnPressDelete(e.keyCode, el);\n                }\n            }\n            this.suffixCheckOnPressDelete(e.keyCode, el);\n            if (this._maskService.prefix.length &&\n                el.selectionStart <= this._maskService.prefix.length &&\n                el.selectionEnd <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            const cursorStart = el.selectionStart;\n            // this.onFocus(e);\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < el.selectionStart) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        else if ((e.keyCode === 65 && e.ctrlKey === true) || // Ctrl+ A\n            (e.keyCode === 65 && e.metaKey === true) // Cmd + A (Mac)\n        ) {\n            el.setSelectionRange(0, this._getActualInputLength());\n            e.preventDefault();\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    }\n    /** It writes the value in the input */\n    writeValue(inputValue) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof inputValue === 'object' && inputValue !== null && 'value' in inputValue) {\n                if ('disable' in inputValue) {\n                    this.setDisabledState(Boolean(inputValue.disable));\n                }\n                inputValue = inputValue.value;\n            }\n            if (inputValue === undefined) {\n                inputValue = '';\n            }\n            if (typeof inputValue === 'number') {\n                inputValue = String(inputValue);\n                inputValue = this.decimalMarker !== '.' ? inputValue.replace('.', this.decimalMarker) : inputValue;\n                this._maskService.isNumberValue = true;\n            }\n            this._inputValue = inputValue;\n            this._setMask();\n            if ((inputValue && this._maskService.maskExpression) ||\n                (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))) {\n                // Let the service we know we are writing value so that triggering onChange function wont happen during applyMask\n                this._maskService.writingValue = true;\n                this._maskService.formElementProperty = [\n                    'value',\n                    this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n                ];\n                // Let the service know we've finished writing value\n                this._maskService.writingValue = false;\n            }\n            else {\n                this._maskService.formElementProperty = ['value', inputValue];\n            }\n            this._inputValue = inputValue;\n        });\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n    }\n    suffixCheckOnPressDelete(keyCode, el) {\n        if (keyCode === 46 && this.suffix.length > 0) {\n            if (this._inputValue.length - this.suffix.length <= el.selectionStart) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n        }\n        if (keyCode === 8) {\n            if (this.suffix.length > 1 && this._inputValue.length - this.suffix.length < el.selectionStart) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n            if (this.suffix.length === 1 && this._inputValue.length === el.selectionStart) {\n                el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n            }\n        }\n    }\n    /** It disables the input element */\n    setDisabledState(isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n    _repeatPatternSymbols(maskExp) {\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp.split('').reduce((accum, currval, index) => {\n                this._start = currval === '{' ? index : this._start;\n                if (currval !== '}') {\n                    return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                }\n                this._end = index;\n                const repeatNumber = Number(maskExp.slice(this._start + 1, this._end));\n                const replaceWith = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                return accum + replaceWith;\n            }, '')) ||\n            maskExp);\n    }\n    // tslint:disable-next-line:no-any\n    _applyMask() {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    }\n    _validateTime(value) {\n        const rowMaskLen = this._maskValue.split('').filter((s) => s !== ':').length;\n        if (!value) {\n            return null; // Don't validate empty values to allow for optional form control\n        }\n        if ((+value[value.length - 1] === 0 && value.length < rowMaskLen) || value.length <= rowMaskLen - 2) {\n            return this._createValidationError(value);\n        }\n        return null;\n    }\n    _getActualInputLength() {\n        return (this._maskService.actualValue.length || this._maskService.actualValue.length + this._maskService.prefix.length);\n    }\n    _createValidationError(actualValue) {\n        return {\n            mask: {\n                requiredMask: this._maskValue,\n                actualValue,\n            },\n        };\n    }\n    _setMask() {\n        if (this._maskExpressionArray.length > 0) {\n            this._maskExpressionArray.some((mask) => {\n                var _a, _b;\n                const test = ((_a = this._maskService.removeMask(this._inputValue)) === null || _a === void 0 ? void 0 : _a.length) <= ((_b = this._maskService.removeMask(mask)) === null || _b === void 0 ? void 0 : _b.length);\n                if (this._inputValue && test) {\n                    this._maskValue = mask;\n                    this.maskExpression = mask;\n                    this._maskService.maskExpression = mask;\n                    return test;\n                }\n                else {\n                    this._maskValue = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                    this.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                    this._maskService.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                }\n            });\n        }\n    }\n}\nMaskDirective.ɵfac = function MaskDirective_Factory(t) { return new (t || MaskDirective)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(MaskService), ɵngcc0.ɵɵdirectiveInject(config)); };\nMaskDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaskDirective, selectors: [[\"input\", \"mask\", \"\"], [\"textarea\", \"mask\", \"\"]], hostBindings: function MaskDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"paste\", function MaskDirective_paste_HostBindingHandler() { return ctx.onPaste(); })(\"input\", function MaskDirective_input_HostBindingHandler($event) { return ctx.onInput($event); })(\"blur\", function MaskDirective_blur_HostBindingHandler() { return ctx.onBlur(); })(\"click\", function MaskDirective_click_HostBindingHandler($event) { return ctx.onFocus($event); })(\"keydown\", function MaskDirective_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, inputs: { maskExpression: [\"mask\", \"maskExpression\"], specialCharacters: \"specialCharacters\", patterns: \"patterns\", prefix: \"prefix\", suffix: \"suffix\", thousandSeparator: \"thousandSeparator\", decimalMarker: \"decimalMarker\", dropSpecialCharacters: \"dropSpecialCharacters\", hiddenInput: \"hiddenInput\", showMaskTyped: \"showMaskTyped\", placeHolderCharacter: \"placeHolderCharacter\", shownMaskExpression: \"shownMaskExpression\", showTemplate: \"showTemplate\", clearIfNotMatch: \"clearIfNotMatch\", validation: \"validation\", separatorLimit: \"separatorLimit\", allowNegativeNumbers: \"allowNegativeNumbers\", leadZeroDateTime: \"leadZeroDateTime\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MaskDirective),\n                multi: true\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: forwardRef(() => MaskDirective),\n                multi: true\n            },\n            MaskService,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaskDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: MaskService },\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n];\nMaskDirective.propDecorators = {\n    maskExpression: [{ type: Input, args: ['mask',] }],\n    specialCharacters: [{ type: Input }],\n    patterns: [{ type: Input }],\n    prefix: [{ type: Input }],\n    suffix: [{ type: Input }],\n    thousandSeparator: [{ type: Input }],\n    decimalMarker: [{ type: Input }],\n    dropSpecialCharacters: [{ type: Input }],\n    hiddenInput: [{ type: Input }],\n    showMaskTyped: [{ type: Input }],\n    placeHolderCharacter: [{ type: Input }],\n    shownMaskExpression: [{ type: Input }],\n    showTemplate: [{ type: Input }],\n    clearIfNotMatch: [{ type: Input }],\n    validation: [{ type: Input }],\n    separatorLimit: [{ type: Input }],\n    allowNegativeNumbers: [{ type: Input }],\n    leadZeroDateTime: [{ type: Input }],\n    onPaste: [{ type: HostListener, args: ['paste',] }],\n    onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    onFocus: [{ type: HostListener, args: ['click', ['$event'],] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'input[mask], textarea[mask]',\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => MaskDirective),\n                        multi: true\n                    },\n                    {\n                        provide: NG_VALIDATORS,\n                        useExisting: forwardRef(() => MaskDirective),\n                        multi: true\n                    },\n                    MaskService,\n                ]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MaskService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }]; }, { maskExpression: [{\n            type: Input,\n            args: ['mask']\n        }], specialCharacters: [{\n            type: Input\n        }], patterns: [{\n            type: Input\n        }], prefix: [{\n            type: Input\n        }], suffix: [{\n            type: Input\n        }], thousandSeparator: [{\n            type: Input\n        }], decimalMarker: [{\n            type: Input\n        }], dropSpecialCharacters: [{\n            type: Input\n        }], hiddenInput: [{\n            type: Input\n        }], showMaskTyped: [{\n            type: Input\n        }], placeHolderCharacter: [{\n            type: Input\n        }], shownMaskExpression: [{\n            type: Input\n        }], showTemplate: [{\n            type: Input\n        }], clearIfNotMatch: [{\n            type: Input\n        }], validation: [{\n            type: Input\n        }], separatorLimit: [{\n            type: Input\n        }], allowNegativeNumbers: [{\n            type: Input\n        }], leadZeroDateTime: [{\n            type: Input\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], onFocus: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    // tslint:disable-next-line: cyclomatic-complexity\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }] }); })();\n\nclass MaskPipe {\n    constructor(_maskService) {\n        this._maskService = _maskService;\n    }\n    transform(value, mask, thousandSeparator = null) {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator;\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(`${value}`, mask);\n        }\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\n    }\n}\nMaskPipe.ɵfac = function MaskPipe_Factory(t) { return new (t || MaskPipe)(ɵngcc0.ɵɵdirectiveInject(MaskApplierService, 16)); };\nMaskPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"mask\", type: MaskPipe, pure: true });\nMaskPipe.ctorParameters = () => [\n    { type: MaskApplierService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'mask',\n                pure: true\n            }]\n    }], function () { return [{ type: MaskApplierService }]; }, null); })();\n\nclass NgxMaskModule {\n    static forRoot(configValue) {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    }\n}\nNgxMaskModule.ɵfac = function NgxMaskModule_Factory(t) { return new (t || NgxMaskModule)(); };\nNgxMaskModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxMaskModule });\nNgxMaskModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMaskModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MaskDirective, MaskPipe],\n                declarations: [MaskDirective, MaskPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMaskModule, { declarations: [MaskDirective, MaskPipe], exports: [MaskDirective, MaskPipe] }); })();\n/**\n * @internal\n */\nfunction _configFactory(initConfig, configValue) {\n    return configValue instanceof Function ? Object.assign(Object.assign({}, initConfig), configValue()) : Object.assign(Object.assign({}, initConfig), configValue);\n}\n\nconst commonjsGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : typeof self !== 'undefined'\n                ? self\n                : {};\n(function () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        commonjsGlobal.KeyboardEvent = function (_eventType, _init) { };\n    }\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_CONFIG, MaskApplierService, MaskDirective, MaskPipe, MaskService, NEW_CONFIG, NgxMaskModule, _configFactory, config, initialConfig, timeMasks, withoutValidation };\n\n//# sourceMappingURL=ngx-mask.js.map","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/checkbox/checkbox.snippetcode';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html'\n})\nexport class CheckboxComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeCustom = snippet.snippetCodeCustom;\n  public _snippetCodeCustomColor = snippet.snippetCodeCustomColor;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Checkbox',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Checkbox',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- Content-Header Component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!--  Checkbox Basic Start -->\n    <section id=\"checkbox-basic\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic Checkboxes</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"checked\" checked />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox1\">Checked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"unchecked\" />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox2\">Unchecked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"inlineCheckbox3\"\n                    value=\"checked-disabled\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox3\">Checked disabled</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"inlineCheckbox4\"\n                    value=\"unchecked-disabled\"\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Basic Ends -->\n\n    <!-- Checkbox Custom Start -->\n    <section id=\"checkbox-custom\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustom\">\n            <h4 class=\"card-title\">Custom Checkboxes</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Add <code>.custom-control .custom-checkbox</code> as a single wrapper &amp; add\n                <code>.custom-control-label</code> for better output.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked />\n                  <label class=\"custom-control-label\" for=\"customCheck1\">Checked</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n                  <label class=\"custom-control-label\" for=\"customCheck2\">Unchecked</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" checked disabled />\n                  <label class=\"custom-control-label\" for=\"customCheck3\">Checked disabled</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" disabled />\n                  <label class=\"custom-control-label\" for=\"customCheck4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Custom Ends -->\n\n    <!--  Checkbox Color Start -->\n    <section id=\"checkbox-color\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomColor\">\n            <h4 class=\"card-title\">Color</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                To change the color of the checkBox use the <code>.custom-control-&#123;value&#125;</code> for primary,\n                secondary, success, danger, info, warning.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck1\">Primary</label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck2\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck2\">Secondary</label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck3\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck3\">Success</label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck5\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck5\">Danger</label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck4\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck4\">Warning</label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck6\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck6\">Info</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Color Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { CheckboxComponent } from 'app/main/forms/form-elements/checkbox/checkbox.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/checkbox',\n    component: CheckboxComponent,\n    data: { animation: 'checkbox' }\n  }\n];\n\n@NgModule({\n  declarations: [CheckboxComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class CheckboxModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"checked\" checked />\n    <label class=\"form-check-label\" for=\"inlineCheckbox1\">Checked</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"unchecked\" />\n    <label class=\"form-check-label\" for=\"inlineCheckbox2\">Unchecked</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"inlineCheckbox3\"\n      value=\"checked-disabled\"\n      checked\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineCheckbox3\">Checked disabled</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"inlineCheckbox4\"\n      value=\"unchecked-disabled\"\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineCheckbox4\">Unchecked disabled</label>\n  </div>\n`\n};\nexport const snippetCodeCustom: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked />\n    <label class=\"custom-control-label\" for=\"customCheck1\">Checked</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n    <label class=\"custom-control-label\" for=\"customCheck2\">Unchecked</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" checked disabled />\n    <label class=\"custom-control-label\" for=\"customCheck3\">Checked disabled</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" disabled />\n    <label class=\"custom-control-label\" for=\"customCheck4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeCustomColor: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-control-primary custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck1\">Primary</label>\n  </div>\n\n  <div class=\"custom-control custom-control-secondary custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck2\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck2\">Secondary</label>\n  </div>\n\n  <div class=\"custom-control custom-control-success custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck3\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck3\">Success</label>\n  </div>\n\n  <div class=\"custom-control custom-control-danger custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck5\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck5\">Danger</label>\n  </div>\n\n  <div class=\"custom-control custom-control-warning custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck4\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck4\">Warning</label>\n  </div>\n\n  <div class=\"custom-control custom-control-info custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck6\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck6\">Info</label>\n  </div>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbDateStruct, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  I18n,\n  CustomDatepickerI18n\n} from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.service';\n\n@Component({\n  selector: 'date-picker-i18n',\n  templateUrl: './date-picker-i18n.component.html',\n  providers: [I18n, { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }] // define custom NgbDatepickerI18n provider\n})\nexport class DatePickerI18nComponent implements OnInit {\n  public i18nDPdata: NgbDateStruct;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n      <input\n        class=\"form-control\"\n        placeholder=\"yyyy-mm-dd\"\n        name=\"i18n Date Picker\"\n        [(ngModel)]=\"i18nDPdata\"\n        ngbDatepicker\n        #i18nDP=\"ngbDatepicker\"\n      />\n\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary feather icon-calendar\"\n          (click)=\"i18nDP.toggle()\"\n          type=\"button\"\n          rippleEffect\n        ></button>\n      </div>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { DatePickerI18nComponent } from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component';\n\n@NgModule({\n  declarations: [DatePickerI18nComponent],\n  imports: [CommonModule, CoreCommonModule, NgbModule, FormsModule],\n  exports: [DatePickerI18nComponent]\n})\nexport class DatePickerI18nModule {}\n","import { Injectable } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n  fr: {\n    weekdays: ['Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa', 'Di'],\n    months: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aou', 'Sep', 'Oct', 'Nov', 'Déc']\n  }\n};\n\n@Injectable()\nexport class I18n {\n  language = 'fr';\n}\n\n// Define custom service providing the months and weekdays translations\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n  constructor(private _i18n: I18n) {\n    super();\n  }\n\n  getWeekdayShortName(weekday: number): string {\n    return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n  }\n  getMonthShortName(month: number): string {\n    return I18N_VALUES[this._i18n.language].months[month - 1];\n  }\n  getMonthFullName(month: number): string {\n    return this.getMonthShortName(month);\n  }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${date.day}-${date.month}-${date.year}`;\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nimport * as snippet from 'app/main/forms/form-elements/date-time-picker/date-time-picker.snippetcode';\n\n@Component({\n  selector: 'app-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  styleUrls: ['./date-time-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DateTimePickerComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasicDP = snippet.snippetCodeBasicDP;\n  public _snippetCodeDisabledDP = snippet.snippetCodeDisabledDP;\n  public _snippetCodeMinMaxDP = snippet.snippetCodeMinMaxDP;\n  public _snippetCodeCustomFooterDP = snippet.snippetCodeCustomFooterDP;\n  public _snippetCodeI18n = snippet.snippetCodeI18n;\n  public _snippetCodeCustomDay = snippet.snippetCodeCustomDay;\n  public _snippetCodeRangeSelectionDP = snippet.snippetCodeRangeSelectionDP;\n  public _snippetCodeBasicTP = snippet.snippetCodeBasicTP;\n  public _snippetCodeMeridianTP = snippet.snippetCodeMeridianTP;\n  public _snippetCodeCustomTP = snippet.snippetCodeCustomTP;\n  public _snippetCodeSpinnerTP = snippet.snippetCodeSpinnerTP;\n  public _snippetCodeCustomValidationTP = snippet.snippetCodeCustomValidationTP;\n  public _snippetCodei18nTP = snippet.snippetCodei18nTP;\n\n  // Basic Date Picker\n  public basicDPdata: NgbDateStruct;\n\n  // Disabled Date Picker\n  public disabled = true;\n\n  // Min-Max Date Picker\n  public MinMaxDPdata: NgbDateStruct;\n\n  // Custom Footer Date Picker\n  public customFooterDPdata: NgbDateStruct;\n\n  // Custom Day Date Picker\n  public CustomDayDPdata: NgbDateStruct;\n  public today = this.calendar.getToday();\n\n  // Range selection Date Picker\n  public hoveredDate: NgbDate | null = null;\n  public fromDate: NgbDate | null;\n  public toDate: NgbDate | null;\n\n  // Basic Time Picker\n  public basicTP = { hour: 13, minute: 30 };\n\n  // Meridian Time Picker\n  public meridianTPdata = { hour: 13, minute: 30 };\n  public meridianTP = true;\n\n  // Custom Time Picker\n  public customTPtime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  public customTPseconds = true;\n\n  // Spinner Time Picker\n  public spinnerTPtime = { hour: 13, minute: 30 };\n  public spinnerTP = true;\n\n  // Custom Validation Time Picker\n  public customValidationTP = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n\n  /**\n   * Constructor\n   *\n   * @param {NgbCalendar} calendar\n   * @param {NgbDateParserFormatter} formatter\n   */\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\n    this.fromDate = calendar.getToday();\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n  }\n\n  /**\n   * Range selection Date Picker\n   *\n   * @param date\n   */\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  /**\n   * Is Hovered\n   *\n   * @param date\n   */\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate)\n    );\n  }\n\n  /**\n   * Is Inside\n   *\n   * @param date\n   */\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  /**\n   *  Is Range\n   *\n   * @param date\n   */\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  /**\n   * Custom Day Date Picker\n   *\n   * @param date\n   * @param current\n   */\n  isDisabled = (date: NgbDate, current: { month: number; year: number }) => date.month !== current.month;\n\n  isWeekend = (date: NgbDate) => this.calendar.getWeekday(date) >= 6;\n\n  /**\n   * Meridian Time Picker\n   */\n  meridianTPtoggle() {\n    this.meridianTP = !this.meridianTP;\n  }\n\n  /**\n   * Custom Time Picker\n   */\n  customTPtoggleSeconds() {\n    this.customTPseconds = !this.customTPseconds;\n  }\n\n  /**\n   * Spinner Time Picker\n   */\n  spinnerTPtoggle() {\n    this.spinnerTP = !this.spinnerTP;\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Date & Time Picker',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Date & Time Picker',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <section class=\"basic-disabled-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicDP\">\n            <h4 class=\"card-title\">Basic Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>ngbDatepicker</code> along with <code>input</code> element to create basic date picker.\n              </p>\n              <!-- Basic Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Basic Date Picker\"\n                      [(ngModel)]=\"basicDPdata\"\n                      ngbDatepicker\n                      #basicDP=\"ngbDatepicker\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"basicDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <pre class=\"mt-2 p-1\">Model: {{ basicDPdata | json }}</pre>\n              <!--/ Basic Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDisabledDP\">\n            <h4 class=\"card-title\">Disabled Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Bind <code>[disabled]</code> by passing <code>true</code> to disable date picker & <code>false</code> to\n                enable date picker.\n              </p>\n              <!-- Disabled Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Disabled Date Picker\"\n                      ngbDatepicker\n                      #disabledDP=\"ngbDatepicker\"\n                      [disabled]=\"disabled\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"disabledDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <button\n                class=\"btn btn-sm btn-outline-{{ disabled ? 'danger' : 'success' }} my-1\"\n                (click)=\"disabled = !disabled\"\n                rippleEffect\n              >\n                {{ disabled ? 'D I S A B L E D' : 'E N A B L E D' }}\n              </button>\n              <!--/ Disabled Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"min-max-custom-footer-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMinMaxDP\">\n            <h4 class=\"card-title\">Min-Max Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[maxDate]</code> & <code>[minDate]</code> input properties to set upper limit and lower limit\n                of date picker.\n              </p>\n              <!-- Min-Max Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Min-Max Date Picker\"\n                      [(ngModel)]=\"MinMaxDPdata\"\n                      ngbDatepicker\n                      #MinMaxDP=\"ngbDatepicker\"\n                      [minDate]=\"{ year: 2019, month: 1, day: 1 }\"\n                      [maxDate]=\"{ year: 2020, month: 2, day: 15 }\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"MinMaxDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <pre class=\"mt-2 p-1\">Model: {{ MinMaxDPdata | json }}</pre>\n              <!--/ Min-Max Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomFooterDP\">\n            <h4 class=\"card-title\">Custom Footer Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[footerTemplate]</code> input property to create custom footer date picker.\n              </p>\n              <!-- Custom Footer Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Custom Footer Date Picker\"\n                      [(ngModel)]=\"customFooterDPdata\"\n                      ngbDatepicker\n                      #customFooterDP=\"ngbDatepicker\"\n                      [footerTemplate]=\"footerTemplate\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"customFooterDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <ng-template #footerTemplate>\n                <hr class=\"my-0\" />\n                <button\n                  class=\"btn btn-primary btn-sm m-2 float-left\"\n                  (click)=\"customFooterDPdata = today; customFooterDP.close()\"\n                  rippleEffect\n                >\n                  Today\n                </button>\n                <button class=\"btn btn-secondary btn-sm m-2 float-right\" (click)=\"customFooterDP.close()\" rippleEffect>\n                  Close\n                </button>\n              </ng-template>\n              <!--/ Custom Footer Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"i18n-custom-day-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeI18n\">\n            <h4 class=\"card-title\">i18n Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>NgbDatepickerI18n</code> extended component of ng-bootstrap to create i18n component. Read the\n                official ngb-datepicker\n                <a href=\"https://ng-bootstrap.github.io/#/components/datepicker/examples#i18n\">Documentation</a> for a\n                full list of instructions and other options.\n              </p>\n              <!-- i18n Date Picker -->\n              <date-picker-i18n></date-picker-i18n>\n              <!--/ i18n Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomDay\">\n            <h4 class=\"card-title\">Custom Day Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>[dayTemplate]</code> input property to create custom day date picker.</p>\n              <!-- Custom Day Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Custom Day Date Picker\"\n                      [(ngModel)]=\"CustomDayDPdata\"\n                      ngbDatepicker\n                      [dayTemplate]=\"customDay\"\n                      [markDisabled]=\"isDisabled\"\n                      #CustomDayDP=\"ngbDatepicker\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"CustomDayDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <ng-template\n                #customDay\n                let-date\n                let-currentMonth=\"currentMonth\"\n                let-selected=\"selected\"\n                let-disabled=\"disabled\"\n                let-focused=\"focused\"\n              >\n                <span\n                  class=\"custom-day\"\n                  [class.weekend]=\"isWeekend(date)\"\n                  [class.focused]=\"focused\"\n                  [class.bg-primary]=\"selected\"\n                  [class.hidden]=\"date.month !== currentMonth\"\n                  [class.text-muted]=\"disabled\"\n                >\n                  {{ date.day }}\n                </span>\n              </ng-template>\n              <!--/ Custom Day Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"range-selection-DP\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRangeSelectionDP\">\n            <h4 class=\"card-title\">Range selection Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                To select range of dates use two <code>input</code> elements along with <code>[dayTemplate]</code> &\n                <code>[displayMonths]</code> input properties for lower limit & upper limit respectively.\n              </p>\n              <!-- Range selection Date Picker -->\n\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group w-0\">\n                    <input\n                      name=\"datepicker\"\n                      class=\"form-control\"\n                      ngbDatepicker\n                      #datepicker=\"ngbDatepicker\"\n                      [autoClose]=\"'outside'\"\n                      (dateSelect)=\"onDateSelection($event)\"\n                      [displayMonths]=\"2\"\n                      [dayTemplate]=\"rangeSelectionDP\"\n                      outsideDays=\"hidden\"\n                      [startDate]=\"fromDate!\"\n                    />\n                    <ng-template #rangeSelectionDP let-date let-focused=\"focused\">\n                      <span\n                        class=\"custom-day\"\n                        [class.focused]=\"focused\"\n                        [class.range]=\"isRange(date)\"\n                        [class.faded]=\"isHovered(date) || isInside(date)\"\n                        (mouseenter)=\"hoveredDate = date\"\n                        (mouseleave)=\"hoveredDate = null\"\n                      >\n                        {{ date.day }}\n                      </span>\n                    </ng-template>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      #dpFromDate\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"dpFromDate\"\n                      [value]=\"formatter.format(fromDate)\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"datepicker.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group ml-sm-2\">\n                  <div class=\"input-group\">\n                    <input\n                      #dpToDate\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"dpToDate\"\n                      [value]=\"formatter.format(toDate)\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"datepicker.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n\n              <hr />\n              <pre class=\"mt-2 p-1\">From date model: {{ fromDate | json }}</pre>\n              <pre class=\"mt-2 p-1\">To date model: {{ toDate | json }}</pre>\n              <!--/ Range selection Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"basic-meridian-time-picker\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicTP\">\n            <h4 class=\"card-title\">Basic Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>ngb-timepicker</code> to create basic Time Picker with spinner.</p>\n              <!-- Basic Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"basicTP\"></ngb-timepicker>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ basicTP | json }}</pre>\n              <!--/ Basic Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMeridianTP\">\n            <h4 class=\"card-title\">Meridian Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[meridian]=\"true\"</code> along with <code>ngb-timepicker</code> to show meridian time.\n              </p>\n              <!-- Meridian Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"meridianTPdata\" [meridian]=\"meridianTP\"></ngb-timepicker>\n              <button\n                class=\"btn btn-sm btn-outline-{{ meridianTP ? 'success' : 'danger' }}\"\n                (click)=\"meridianTPtoggle()\"\n                rippleEffect\n              >\n                Meridian - {{ meridianTP ? 'ON' : 'OFF' }}\n              </button>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ meridianTPdata | json }}</pre>\n              <!--/ Meridian Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section class=\"custom-spinner-time-picker\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomTP\">\n            <h4 class=\"card-title\">Custom Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[seconds]=\"true\"</code> along with <code>ngb-timepicker</code> to show seconds.\n              </p>\n              <!-- Custom Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"customTPtime\" [seconds]=\"customTPseconds\"></ngb-timepicker>\n              <button\n                class=\"btn btn-sm btn-outline-{{ customTPseconds ? 'success' : 'danger' }}\"\n                (click)=\"customTPtoggleSeconds()\"\n                rippleEffect\n              >\n                Seconds - {{ customTPseconds ? 'ON' : 'OFF' }}\n              </button>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ customTPtime | json }}</pre>\n              <!--/ Custom Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSpinnerTP\">\n            <h4 class=\"card-title\">Spinner Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[spinners]=\"false\"</code> along with <code>ngb-timepicker</code> to hide spinners.\n              </p>\n              <!-- Spinner Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"spinnerTPtime\" [spinners]=\"spinnerTP\"></ngb-timepicker>\n\n              <hr />\n\n              <button\n                class=\"m-t-1 btn btn-sm btn-outline-{{ spinnerTP ? 'success' : 'danger' }}\"\n                (click)=\"spinnerTPtoggle()\"\n                rippleEffect\n              >\n                Spinners - {{ spinnerTP ? 'ON' : 'OFF' }}\n              </button>\n              <!--/ Spinner Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section class=\"validation-i18n-time-picker\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomValidationTP\">\n            <h4 class=\"card-title\">Custom Validation Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[formControl]</code> along with <code>ngb-timepicker</code> to create custom validation.\n              </p>\n              <!-- Custom Validation Time Picker -->\n              <div class=\"form-group\">\n                <ngb-timepicker [formControl]=\"customValidationTP\" required></ngb-timepicker>\n                <div *ngIf=\"customValidationTP.valid\" class=\"small form-text text-success\">Great choice</div>\n                <div *ngIf=\"customValidationTP.errors\" class=\"small form-text text-danger\">\n                  <div *ngIf=\"customValidationTP.errors['required']\">Select some time during lunchtime</div>\n                  <div *ngIf=\"customValidationTP.errors['tooLate']\">Oh no, it's way too late</div>\n                  <div *ngIf=\"customValidationTP.errors['tooEarly']\">It's a bit too early</div>\n                </div>\n              </div>\n\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ customValidationTP.value | json }}</pre>\n              <!--/ Custom Validation Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodei18nTP\">\n            <h4 class=\"card-title\">i18n Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>NgbTimepickerI18n</code> extended component of ng-bootstrap to create i18n component. Read the\n                official ngb-timepicker\n                <a href=\"https://ng-bootstrap.github.io/#/components/timepicker/examples#i18n\">Documentation</a> for a\n                full list of instructions and other options.\n              </p>\n              <!-- i18n Time Picker -->\n              <time-picker-i18n></time-picker-i18n>\n              <!--/ i18n Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TimePickerI18nModule } from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.module';\nimport { DatePickerI18nModule } from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module';\n\nimport { DateTimePickerComponent } from 'app/main/forms/form-elements/date-time-picker/date-time-picker.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/date-time-picker',\n    component: DateTimePickerComponent,\n    data: { animation: 'date-time-picker' }\n  }\n];\n\n@NgModule({\n  declarations: [DateTimePickerComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    TimePickerI18nModule,\n    DatePickerI18nModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DateTimePickerModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasicDP: snippetCode = {\n  html: `\n  <!-- Basic Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Basic Date Picker\" [(ngModel)]=\"basicDPdata\"\n          ngbDatepicker #basicDP=\"ngbDatepicker\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"basicDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <pre class=\"mt-2 p-1\">Model: {{ basicDPdata | json }}</pre>\n  <!--/ Basic Date Picker -->\n  `,\n  ts: `\n  public basicDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeDisabledDP: snippetCode = {\n  html: `\n  <!-- Disabled Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Disabled Date Picker\" ngbDatepicker\n          #disabledDP=\"ngbDatepicker\" [disabled]=\"disabled\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"disabledDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <button class=\"btn btn-sm btn-outline-{{disabled ? 'danger' : 'success'}} my-1\" (click)=\"disabled = !disabled\" rippleEffect>\n    {{ disabled ? \"D I S A B L E D\" : \"E N A B L E D\"}}\n  </button>\n  <!--/ Disabled Date Picker -->\n  `,\n  ts: `\n  public disabled = true;\n\n  `\n};\nexport const snippetCodeMinMaxDP: snippetCode = {\n  html: `\n  <!-- Min-Max Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Min-Max Date Picker\" [(ngModel)]=\"MinMaxDPdata\"\n          ngbDatepicker #MinMaxDP=\"ngbDatepicker\" [minDate]=\"{year: 2019, month: 1, day: 1}\"\n          [maxDate]=\"{year: 2020, month: 2, day: 15}\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"MinMaxDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <pre class=\"mt-2 p-1\">Model: {{ MinMaxDPdata | json }}</pre>\n  <!--/ Min-Max Date Picker -->\n  `,\n  ts: `\n  public MinMaxDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeCustomFooterDP: snippetCode = {\n  html: `\n  <!-- Custom Footer Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Custom Footer Date Picker\"\n          [(ngModel)]=\"customFooterDPdata\" ngbDatepicker #customFooterDP=\"ngbDatepicker\"\n          [footerTemplate]=\"footerTemplate\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"customFooterDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <ng-template #footerTemplate>\n    <hr class=\"my-0\">\n    <button class=\"btn btn-primary btn-sm m-2 float-left\"\n      (click)=\"customFooterDPdata = today; customFooterDP.close()\" rippleEffect>Today</button>\n    <button class=\"btn btn-secondary btn-sm m-2 float-right\" (click)=\"customFooterDP.close()\" rippleEffect>Close</button>\n  </ng-template>\n  <!--/ Custom Footer Date Picker -->\n  `,\n  ts: `\n  public customFooterDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeI18n: snippetCode = {\n  html: `\n  <date-picker-i18n></date-picker-i18n>\n  `\n};\nexport const snippetCodeCustomDay: snippetCode = {\n  html: `\n  <!-- Custom Day Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Custom Day Date Picker\"\n          [(ngModel)]=\"CustomDayDPdata\" ngbDatepicker [dayTemplate]=\"customDay\" [markDisabled]=\"isDisabled\"\n          #CustomDayDP=\"ngbDatepicker\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"CustomDayDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <ng-template #customDay let-date let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\"\n    let-focused=\"focused\">\n    <span class=\"custom-day\" [class.weekend]=\"isWeekend(date)\" [class.focused]=\"focused\"\n      [class.bg-primary]=\"selected\" [class.hidden]=\"date.month !== currentMonth\" [class.text-muted]=\"disabled\">\n      {{ date.day }}\n    </span>\n  </ng-template>\n  <!--/ Custom Day Date Picker -->\n  `,\n  ts: `\n  public CustomDayDPdata: NgbDateStruct;\n  public today = this.calendar.getToday();\n\n  isWeekend = (date: NgbDate) => this.calendar.getWeekday(date) >= 6;\n\n  isDisabled = (date: NgbDate, current: { month: number; year: number }) =>\n  date.month !== current.month;\n  `\n};\nexport const snippetCodeRangeSelectionDP: snippetCode = {\n  html: `\n  <!-- Range selection Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input name=\"datepicker\" class=\"form-control\" ngbDatepicker #rangeSelectionDP=\"ngbDatepicker\"\n          [autoClose]=\"'outside'\" (dateSelect)=\"onDateSelection($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\"\n          outsideDays=\"hidden\" [startDate]=\"fromDate!\" [value]=\"formatter.format(today)\">\n        <ng-template #t let-date let-focused=\"focused\">\n          <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isRange(date)\"\n            [class.faded]=\"isHovered(date) || isInside(date)\" (mouseenter)=\"hoveredDate = date\"\n            (mouseleave)=\"hoveredDate = null\">\n            {{ date.day }}\n          </span>\n        </ng-template>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"rangeSelectionDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group ml-sm-2 mt\">\n      <div class=\"input-group\">\n        <input #dpToDate class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dpToDate\"\n          [value]=\"formatter.format(toDate)\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"rangeSelectionDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <hr />\n  <pre class=\"mt-2 p-1\">From date model: {{ fromDate | json }}</pre>\n  <pre class=\"mt-2 p-1\">To date model: {{ toDate | json }}</pre>\n  <!--/ Range selection Date Picker -->\n  `,\n  ts: `\n  public hoveredDate: NgbDate | null = null;\n  public fromDate: NgbDate | null;\n  public toDate: NgbDate | null;\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (\n      this.fromDate &&\n      !this.toDate &&\n      date &&\n      date.after(this.fromDate)\n    ) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n  `\n};\n\nexport const snippetCodeBasicTP: snippetCode = {\n  html: `\n  <!-- Basic Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"basicTP\"></ngb-timepicker>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{basicTP | json}}</pre>\n  <!--/ Basic Time Picker -->\n  `,\n  ts: `\n  // Basic Time Picker\n  public basicTP = { hour: 13, minute: 30 };\n  `\n};\nexport const snippetCodeMeridianTP: snippetCode = {\n  html: `\n  <!-- Meridian Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"meridianTPdata\" [meridian]=\"meridianTP\"></ngb-timepicker>\n  <button class=\"btn btn-sm btn-outline-{{meridianTP ? 'success' : 'danger'}}\" (click)=\"meridianTPtoggle()\">\n    Meridian - {{meridianTP ? \"ON\" : \"OFF\"}}\n  </button>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{meridianTPdata | json}}</pre>\n  <!--/ Meridian Time Picker -->\n  `,\n  ts: `\n  // Meridian Time Picker\n  public meridianTPdata = { hour: 13, minute: 30 };\n  public meridianTP = true;\n  `\n};\nexport const snippetCodeCustomTP: snippetCode = {\n  html: `\n  <!-- Custom Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"customTPtime\" [seconds]=\"customTPseconds\"></ngb-timepicker>\n  <button class=\"btn btn-sm btn-outline-{{customTPseconds ? 'success' : 'danger'}}\"\n    (click)=\"customTPtoggleSeconds()\" rippleEffect>\n    Seconds - {{customTPseconds ? \"ON\" : \"OFF\"}}\n  </button>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{customTPtime | json}}</pre>\n  <!--/ Custom Time Picker -->\n  `,\n  ts: `\n  // Custom Time Picker\n  public customTPtime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  public customTPseconds = true;\n  `\n};\nexport const snippetCodeSpinnerTP: snippetCode = {\n  html: `\n  <!-- Spinner Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"spinnerTPtime\" [spinners]=\"spinnerTP\"></ngb-timepicker>\n\n  <hr />\n\n  <button class=\"m-t-1 btn btn-sm btn-outline-{{spinnerTP ? 'success' : 'danger'}}\" (click)=\"snipperTPtoggle()\" rippleEffect>\n    Spinners - {{spinnerTP ? \"ON\" : \"OFF\"}}\n  </button>\n  <!--/ Spinner Time Picker -->\n  `,\n  ts: `\n  // Spinner Time Picker\n  public spinnerTPtime = { hour: 13, minute: 30 };\n  public spinnerTP = true;\n\n  `\n};\nexport const snippetCodeCustomValidationTP: snippetCode = {\n  html: `\n  <!-- Custom Validation Time Picker -->\n  <div class=\"form-group\">\n    <ngb-timepicker [formControl]=\"customValidationTP\" required></ngb-timepicker>\n    <div *ngIf=\"customValidationTP.valid\" class=\"small form-text text-success\">Great choice</div>\n    <div *ngIf=\"customValidationTP.errors\" class=\"small form-text text-danger\">\n      <div *ngIf=\"customValidationTP.errors['required']\">Select some time during lunchtime</div>\n      <div *ngIf=\"customValidationTP.errors['tooLate']\">Oh no, it's way too late</div>\n      <div *ngIf=\"customValidationTP.errors['tooEarly']\">It's a bit too early</div>\n    </div>\n  </div>\n\n  <hr>\n  <pre class=\"p-1\">Selected time: {{customValidationTP.value | json}}</pre>\n  <!--/ Custom Validation Time Picker -->\n  `,\n  ts: `\n  // Custom Validation Time Picker\n  public customValidationTP = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n  `\n};\nexport const snippetCodei18nTP: snippetCode = {\n  html: `\n  <!-- i18n Time Picker -->\n  <time-picker-i18n></time-picker-i18n>\n  <!--/ i18n Time Picker -->\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'time-picker-i18n',\n  templateUrl: './time-picker-i18n.component.html'\n})\nexport class TimePickerI18nComponent implements OnInit {\n  model = { hour: 13, minute: 30 };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ngb-timepicker [(ngModel)]=\"model\" [meridian]=\"true\"></ngb-timepicker>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule, NgbTimepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TimePickerI18nComponent } from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component';\nimport {\n  CustomTimepickerI18n,\n  I18n\n} from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.service';\n\n@NgModule({\n  declarations: [TimePickerI18nComponent],\n  imports: [CommonModule, NgbModule, FormsModule],\n  exports: [TimePickerI18nComponent],\n  providers: [I18n, { provide: NgbTimepickerI18n, useClass: CustomTimepickerI18n }] // define custom NgbTimepickerI18n provider\n})\nexport class TimePickerI18nModule {}\n","import { Injectable } from '@angular/core';\n\nimport { NgbTimepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n  el: { periods: ['πμ', 'μμ'] }\n  // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n  language = 'el';\n}\n\n// Define custom service providing the \"AM\" and \"PM\" translations.\n@Injectable()\nexport class CustomTimepickerI18n extends NgbTimepickerI18n {\n  constructor(private _i18n: I18n) {\n    super();\n  }\n\n  getMorningPeriod(): string {\n    return I18N_VALUES[this._i18n.language].periods[0];\n  }\n\n  getAfternoonPeriod(): string {\n    return I18N_VALUES[this._i18n.language].periods[1];\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { FileUploader } from 'ng2-file-upload';\n\nconst URL = 'https://your-url.com';\n\n@Component({\n  selector: 'app-file-uploader',\n  templateUrl: './file-uploader.component.html',\n  styleUrls: ['./file-uploader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileUploaderComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public hasAnotherDropZoneOver: boolean = false;\n  public hasBaseDropZoneOver: boolean = false;\n  public uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n  });\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n  }\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'File Uploader',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'File Uploader',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <!-- ngb-alert component -->\n    <ngb-alert [type]=\"'warning'\" [dismissible]=\"false\">\n      <div class=\"alert-body\">\n        <strong>Note:</strong> File Uploader is for demo purpose only. So, you cannot upload files from here. For\n        Backend connectivity Refer this official\n        <a class=\"alert-link\" href=\"https://valor-software.com/ng2-file-upload/\" target=\"_blank\">documentation</a>.\n      </div>\n    </ngb-alert>\n    <!--/ ngb-alert component -->\n    <!-- File Uploader -->\n    <section id=\"file-upload\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-12 col-lg-6\">\n              <div\n                ng2FileDrop\n                [ngClass]=\"{ 'file-drop-over': hasBaseDropZoneOver }\"\n                (fileOver)=\"fileOverBase($event)\"\n                [uploader]=\"uploader\"\n                class=\"py-5 mb-3 text-center font-medium-5 text-uppercase file-drop-zone\"\n              >\n                Drop Files Here To Upload\n              </div>\n            </div>\n            <div class=\"col-md-12 col-lg-6\">\n              <div\n                ng2FileDrop\n                [ngClass]=\"{ 'file-drop-over-another': hasAnotherDropZoneOver }\"\n                (fileOver)=\"fileOverAnother($event)\"\n                [uploader]=\"uploader\"\n                class=\"py-5 mb-3 text-center font-medium-5 text-uppercase file-drop-zone\"\n              >\n                Another dropzone\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-3\">\n              <h4>Select files</h4>\n              <fieldset class=\"form-group\">\n                <label for=\"file-upload-multiple\">Multiple:</label>\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    class=\"custom-file-input\"\n                    type=\"file\"\n                    ng2FileSelect\n                    [uploader]=\"uploader\"\n                    multiple\n                    id=\"file-upload-multiple\"\n                  />\n                  <label class=\"custom-file-label\">Choose file</label>\n                </div>\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <label for=\"file-upload-single\">Single:</label>\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    class=\"custom-file-input\"\n                    type=\"file\"\n                    ng2FileSelect\n                    [uploader]=\"uploader\"\n                    id=\"file-upload-single\"\n                  />\n                  <label class=\"custom-file-label\">Choose file</label>\n                </div>\n              </fieldset>\n            </div>\n\n            <div class=\"col-lg-9 overflow-auto\">\n              <div class=\"d-flex justify-content-between mb-1\">\n                <h4>Upload queue</h4>\n                <p>Queue length: {{ uploader?.queue?.length }}</p>\n              </div>\n\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                    <th>Progress</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let item of uploader.queue\">\n                    <td>\n                      <strong>{{ item?.file?.name }}</strong>\n                    </td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n                      {{ item?.file?.size / 1024 / 1024 | number: '.2' }} MB\n                    </td>\n                    <td *ngIf=\"uploader.options.isHTML5\">\n                      <ngb-progressbar type=\"primary\" [value]=\"item.progress\"></ngb-progressbar>\n                    </td>\n                    <td class=\"text-center\">\n                      <span *ngIf=\"item.isSuccess\"><i data-feather=\"check\"></i></span>\n                      <span *ngIf=\"item.isCancel\"><i data-feather=\"slash\"></i></span>\n                      <span *ngIf=\"item.isError\"><i data-feather=\"x-circle\"></i></span>\n                    </td>\n                    <td nowrap>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-success btn-sm mr-50\"\n                        (click)=\"item.upload()\"\n                        [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"\n                        rippleEffect\n                      >\n                        <span data-feather=\"upload\"></span>\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-warning btn-sm mr-50\"\n                        (click)=\"item.cancel()\"\n                        [disabled]=\"!item.isUploading\"\n                        rippleEffect\n                      >\n                        <i data-feather=\"slash\"></i>\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-danger btn-sm\"\n                        (click)=\"item.remove()\"\n                        rippleEffect\n                      >\n                        <i data-feather=\"trash\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div id=\"\">\n                <p class=\"mt-1\">Queue progress:</p>\n                <ngb-progressbar class=\"mb-1\" type=\"primary\" [value]=\"uploader.progress\"></ngb-progressbar>\n                <button\n                  type=\"button\"\n                  class=\"btn mr-1 btn-primary mb-1 mb-sm-0\"\n                  (click)=\"uploader.uploadAll()\"\n                  [disabled]=\"!uploader.getNotUploadedItems().length\"\n                  rippleEffect\n                >\n                  <span data-feather=\"upload\" class=\"mr-25\"></span> Upload all\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn mr-1 btn-outline-warning mb-1 mb-sm-0\"\n                  (click)=\"uploader.cancelAll()\"\n                  [disabled]=\"!uploader.isUploading\"\n                  rippleEffect\n                >\n                  <span data-feather=\"slash\" class=\"mr-25\"></span> Cancel all\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-danger mb-1 mb-sm-0\"\n                  (click)=\"uploader.clearQueue()\"\n                  [disabled]=\"!uploader.queue.length\"\n                  rippleEffect\n                >\n                  <span data-feather=\"trash\" class=\"mr-25\"></span> Remove all\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!--/ File Uploader -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FileUploaderComponent } from 'app/main/forms/form-elements/file-uploader/file-uploader.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/file-uploader',\n    component: FileUploaderComponent,\n    data: { animation: 'file-uploader' }\n  }\n];\n\n@NgModule({\n  declarations: [FileUploaderComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FileUploadModule,\n    CoreCommonModule\n  ]\n})\nexport class FileUploaderModule {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FlatpickrOptions } from 'ng2-flatpickr';\n\nimport {\n  basicDateSnippetCode,\n  dateTimeSnippetCode,\n  DefaultDateSnippetCode,\n  DateRangeSnippetCode,\n  timeSnippetCode,\n  customDateSnippetCode,\n  multipleDateSnippetCode\n} from 'app/main/forms/form-elements/flatpickr/flatpickr.snippetcode';\n\n@Component({\n  selector: 'app-flatpickr',\n  templateUrl: './flatpickr.component.html',\n  styleUrls: ['./flatpickr.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FlatpickrComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public basicDateOptions: FlatpickrOptions = {\n    altInput: true\n  };\n\n  public dateTimeOptions: FlatpickrOptions = {\n    altInput: true,\n    enableTime: true\n  };\n\n  public DefaultDateOptions: FlatpickrOptions = {\n    defaultDate: '2019-03-19',\n    altInput: true\n  };\n\n  public DateRangeOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'range'\n  };\n\n  public timeOptions: FlatpickrOptions = {\n    enableTime: true,\n    noCalendar: true,\n    altInput: true\n  };\n\n  public customDateOptions: FlatpickrOptions = {\n    altFormat: 'j-m-Y',\n    altInput: true\n  };\n\n  public multipleDateOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'multiple'\n  };\n\n  // snippet code variables\n  public _basicDateSnippetCode = basicDateSnippetCode;\n  public _dateTimeSnippetCode = dateTimeSnippetCode;\n  public _DefaultDateSnippetCode = DefaultDateSnippetCode;\n  public _DateRangeSnippetCode = DateRangeSnippetCode;\n  public _timeSnippetCode = timeSnippetCode;\n  public _customDateSnippetCode = customDateSnippetCode;\n  public _multipleDateSnippetCode = multipleDateSnippetCode;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Flatpickr',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Flatpickr',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- flatpickr basic & date-time -->\n    <section id=\"basic-and-time\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_basicDateSnippetCode\">\n            <h4 class=\"card-title\">Basic Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>ng2-flatpickr</code> component to get basic flatpickr.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"basicDateOptions\" name=\"basicDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_dateTimeSnippetCode\">\n            <h4 class=\"card-title\">Date & Time</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>enableTime: true</code> option to make date and time flatpickr.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"dateTimeOptions\" name=\"dateTime\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr basic & date-time -->\n\n    <!-- flatpickr default-date & date-range  -->\n    <section id=\"default-date-and-range\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_DefaultDateSnippetCode\">\n            <h4 class=\"card-title\">Default Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>defaultDate: '2019-03-19'</code> option to get a default date.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"DefaultDateOptions\" name=\"DefaultDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_DateRangeSnippetCode\">\n            <h4 class=\"card-title\">Date Range</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>mode: 'range'</code> option to select range of dates.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"DateRangeOptions\" name=\"DateRange\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr default-date & date-range  -->\n\n    <!-- flatpickr time & custom date  -->\n    <section id=\"multiple-and-inline\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_timeSnippetCode\">\n            <h4 class=\"card-title\">Time</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>enableTime: true, noCalendar: true</code> option to only get time.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"timeOptions\" name=\"time\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_customDateSnippetCode\">\n            <h4 class=\"card-title\">Custom Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>altInput: true, altFormat: 'j-m-Y'</code> option to customize time\n                <a href=\"https://flatpickr.js.org/formatting/\">format</a>.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"customDateOptions\" name=\"customDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr multiple & custom date  -->\n\n    <!-- flatpickr multiple  -->\n    <section id=\"multiple-and-inline\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_multipleDateSnippetCode\">\n            <h4 class=\"card-title\">Multiple Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>mode: 'multiple'</code> option to select multiple of dates.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"multipleDateOptions\" name=\"multipleDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr multiple  -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FlatpickrComponent } from 'app/main/forms/form-elements/flatpickr/flatpickr.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/flatpickr',\n    component: FlatpickrComponent,\n    data: { animation: 'flatpickr' }\n  }\n];\n\n@NgModule({\n  declarations: [FlatpickrComponent],\n  imports: [RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, Ng2FlatpickrModule]\n})\nexport class FlatpickrModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const basicDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [ngClass]=\"'firstsecond'\" [config]=\"basicDateOptions\" name=\"basicDate\"></ng2-flatpickr>`,\n  ts: `public basicDateOptions: FlatpickrOptions = {\n  altInput: true\n}`\n};\n\nexport const dateTimeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"dateTimeOptions\" name=\"dateTime\"></ng2-flatpickr>`,\n  ts: `public dateTimeOptions: FlatpickrOptions = {\n    altInput: true,\n    enableTime: true\n  }`\n};\n\nexport const DefaultDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"DefaultDateOptions\" name=\"DefaultDate\"></ng2-flatpickr>`,\n  ts: `public DefaultDateOptions: FlatpickrOptions = {\n    defaultDate: '2019-03-19',\n    altInput: true\n  }`\n};\n\nexport const DateRangeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"DateRangeOptions\" name=\"DateRange\"></ng2-flatpickr>`,\n  ts: `public DateRangeOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'range'\n  }`\n};\n\nexport const timeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"timeOptions\" name=\"time\"></ng2-flatpickr>`,\n  ts: `public   timeOptions: FlatpickrOptions = {\n  enableTime: true,\n  noCalendar: true,\n  altInput: true\n}`\n};\n\nexport const customDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"customDateOptions\" name=\"customDate\"></ng2-flatpickr>`,\n  ts: `public customDateOptions: FlatpickrOptions = {\n    altFormat: 'j-m-Y',\n    altInput: true\n  }`\n};\n\nexport const multipleDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"multipleDateOptions\" name=\"multipleDate\"></ng2-flatpickr>`,\n  ts: `public multipleDateOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'multiple'\n  }`\n};\n","import { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from 'app/main/forms/form-elements/checkbox/checkbox.module';\nimport { DateTimePickerModule } from 'app/main/forms/form-elements/date-time-picker/date-time-picker.module';\nimport { InputGroupsModule } from 'app/main/forms/form-elements/input-groups/input-groups.module';\nimport { InputMaskModule } from 'app/main/forms/form-elements/input-mask/input-mask.module';\nimport { InputModule } from 'app/main/forms/form-elements/input/input.module';\nimport { NumberInputModule } from 'app/main/forms/form-elements/number-input/number-input.module';\nimport { RadioModule } from 'app/main/forms/form-elements/radio/radio.module';\nimport { SelectModule } from 'app/main/forms/form-elements/select/select.module';\nimport { SwitchModule } from 'app/main/forms/form-elements/switch/switch.module';\nimport { TextareaModule } from 'app/main/forms/form-elements/textarea/textarea.module';\nimport { FileUploaderModule } from 'app/main/forms/form-elements/file-uploader/file-uploader.module';\nimport { QuillEditorModule } from 'app/main/forms/form-elements/quill-editor/quill-editor.module';\nimport { FlatpickrModule } from 'app/main/forms/form-elements/flatpickr/flatpickr.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CheckboxModule,\n    DateTimePickerModule,\n    InputModule,\n    InputGroupsModule,\n    NumberInputModule,\n    RadioModule,\n    SelectModule,\n    SwitchModule,\n    TextareaModule,\n    InputMaskModule,\n    FileUploaderModule,\n    QuillEditorModule,\n    FlatpickrModule\n  ]\n})\nexport class FormElementsModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input-groups/input-groups.snippetcode';\n\n@Component({\n  selector: 'app-input-groups',\n  templateUrl: './input-groups.component.html'\n})\nexport class InputGroupsComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public basicPwdShow = false;\n  public mergedPwdShow = false;\n\n  // Snippet Code Variables\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeMerged = snippet.snippetCodeMerged;\n  public _snippetCodeSizing = snippet.snippetCodeSizing;\n  public _snippetCodeCheckBox = snippet.snippetCodeCheckBox;\n  public _snippetCodeButton = snippet.snippetCodeButton;\n  public _snippetCodeDropdown = snippet.snippetCodeDropdown;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input Groups',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input Groups',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Input Group Basic & Merged Start -->\n    <section id=\"input-group-basic-merged\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon-search1\"><i data-feather=\"search\"></i></span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search...\"\n                  aria-describedby=\"basic-addon-search1\"\n                />\n              </div>\n\n              <label for=\"basic-default-password\">Password</label>\n              <div class=\"input-group form-password-toggle mb-2\">\n                <input\n                  [type]=\"basicPwdShow ? 'text' : 'password'\"\n                  class=\"form-control\"\n                  id=\"basic-default-password\"\n                  placeholder=\"Your Password\"\n                  aria-describedby=\"basic-default-password\"\n                />\n                <div class=\"input-group-append\" (click)=\"basicPwdShow = !basicPwdShow\">\n                  <span class=\"input-group-text cursor-pointer\"\n                    ><i\n                      class=\"feather\"\n                      [ngClass]=\"{\n                        'icon-eye-off': basicPwdShow,\n                        'icon-eye': !basicPwdShow\n                      }\"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n                </div>\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"basic-url3\" aria-describedby=\"basic-addon3\" />\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMerged\">\n            <h4 class=\"card-title\">Merged</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon-search2\"><i data-feather=\"search\"></i></span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search...\"\n                  aria-describedby=\"basic-addon-search2\"\n                />\n              </div>\n\n              <label for=\"basic-default-password1\">Password</label>\n              <div class=\"input-group input-group-merge form-password-toggle mb-2\">\n                <input\n                  [type]=\"mergedPwdShow ? 'text' : 'password'\"\n                  class=\"form-control\"\n                  id=\"basic-default-password1\"\n                  placeholder=\"Your Password\"\n                  aria-describedby=\"basic-default-password1\"\n                />\n                <div class=\"input-group-append\" (click)=\"mergedPwdShow = !mergedPwdShow\">\n                  <span class=\"input-group-text cursor-pointer\"\n                    ><i\n                      class=\"feather\"\n                      [ngClass]=\"{\n                        'icon-eye-off': mergedPwdShow,\n                        'icon-eye': !mergedPwdShow\n                      }\"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon5\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon5\"\n                />\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon6\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon6\">@example.com</span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon7\">https://example.com/users/</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"basic-url7\" aria-describedby=\"basic-addon7\" />\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Group Basic & Merged Ends -->\n\n    <!-- Input Group Sizing & Checkbox and radio addons Start -->\n    <section id=\"input-group-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSizing\">\n            <h4 class=\"card-title\">Sizing</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group input-group-lg mb-1\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n\n              <div class=\"input-group mb-1\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n\n              <div class=\"input-group input-group-sm\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCheckBox\">\n            <h4 class=\"card-title\">Checkbox and radio addons</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <input type=\"checkbox\" />\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <input type=\"radio\" />\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <small class=\"font-weight-semibold w-100 ml-1 my-1\">Custom checkbox and radio</small>\n                <div class=\"col-md\">\n                  <!-- Custom checkbox -->\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <div class=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" />\n                            <label class=\"custom-control-label\" for=\"colorCheck1\"></label>\n                          </div>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md\">\n                  <!-- Custom radio -->\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" />\n                            <label class=\"custom-control-label\" for=\"customRadio1\"></label>\n                          </div>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Group Sizing & Checkbox and radio addons Ends -->\n    <!-- Inputs Group with Buttons -->\n    <section id=\"input-group-buttons\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeButton\">\n            <h4 class=\"card-title\">Input Groups with Buttons</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Add span with <code>.input-group-btn</code> class and add button inside <b>before</b> or <b>after </b>\n                <code>&lt;input&gt;</code>.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <div class=\"input-group\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"Button on right\"\n                      aria-describedby=\"button-addon2\"\n                    />\n                    <div class=\"input-group-append\" id=\"button-addon2\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Go</button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>\n                        <i data-feather=\"search\"></i>\n                      </button>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\" />\n                    <div class=\"input-group-append\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Search !</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Inputs Group with Buttons end -->\n\n    <!-- Inputs Group with Dropdown -->\n    <section id=\"input-group-dropdown\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDropdown\">\n            <h4 class=\"card-title\">Input Groups with Dropdown</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Add <code>&lt;button&gt;</code> with <code>.dropdown-toggle</code> class and add dropdown-menu after it\n                to get input group with dropdown.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <fieldset>\n                    <div class=\"input-group\">\n                      <div ngbDropdown class=\"input-group-prepend\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          Action\n                        </button>\n                        <div ngbDropdownMenu>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\" />\n                    </div>\n                  </fieldset>\n                </div>\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <fieldset>\n                    <div class=\"input-group\">\n                      <div ngbDropdown class=\"input-group-prepend\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          <i data-feather=\"edit-2\"></i>\n                        </button>\n                        <div ngbDropdownMenu>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\" />\n                      <div ngbDropdown class=\"input-group-append\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          Action\n                        </button>\n                        <div ngbDropdownMenu class=\"dropdown-menu-right\">\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Inputs Group with Dropdown end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputGroupsComponent } from 'app/main/forms/form-elements/input-groups/input-groups.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/input-groups',\n    component: InputGroupsComponent,\n    data: { animation: 'input-groups' }\n  }\n];\n\n@NgModule({\n  declarations: [InputGroupsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CoreCommonModule,\n    CardSnippetModule,\n    FormsModule\n  ]\n})\nexport class InputGroupsModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"card-body\">\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon-search1\"><i data-feather=\"search\"></i></span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Search...\"\n      aria-label=\"Search...\"\n      aria-describedby=\"basic-addon-search1\"\n    />\n  </div>\n\n  <label for=\"basic-default-password\">Password</label>\n  <div class=\"input-group form-password-toggle mb-2\">\n    <input\n      [type]=\"basicPwdShow ? 'text' : 'password'\"\n      class=\"form-control\"\n      id=\"basic-default-password\"\n      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n      aria-describedby=\"basic-default-password\"\n    />\n    <div class=\"input-group-append\" (click)=\"basicPwdShow = !basicPwdShow\">\n      <span class=\"input-group-text cursor-pointer\"\n        ><i\n          class=\"feather\"\n          [ngClass]=\"{\n            'icon-eye-off': basicPwdShow,\n            'icon-eye': !basicPwdShow\n          }\"\n        ></i\n      ></span>\n    </div>\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon2\"\n    />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n    </div>\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" id=\"basic-url3\" aria-describedby=\"basic-addon3\" />\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">$</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">.00</span>\n    </div>\n  </div>\n\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">With textarea</span>\n    </div>\n    <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n  </div>\n</div>\n  `,\n  ts: `\n  public basicPwdShow = false;\n  `\n};\n\nexport const snippetCodeMerged: snippetCode = {\n  html: `\n  <div class=\"card-body\">\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon-search2\"><i data-feather=\"search\"></i></span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Search...\"\n      aria-label=\"Search...\"\n      aria-describedby=\"basic-addon-search2\"\n    />\n  </div>\n\n  <label for=\"basic-default-password1\">Password</label>\n  <div class=\"input-group input-group-merge form-password-toggle mb-2\">\n    <input\n      [type]=\"mergedPwdShow ? 'text' : 'password'\"\n      class=\"form-control\"\n      id=\"basic-default-password1\"\n      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n      aria-describedby=\"basic-default-password1\"\n    />\n    <div class=\"input-group-append\" (click)=\"mergedPwdShow = !mergedPwdShow\">\n      <span class=\"input-group-text cursor-pointer\"\n        ><i\n          class=\"feather\"\n          [ngClass]=\"{\n            'icon-eye-off': mergedPwdShow,\n            'icon-eye': !mergedPwdShow\n          }\"\n        ></i\n      ></span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon5\">@</span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon5\"\n    />\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon6\"\n    />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\" id=\"basic-addon6\">@example.com</span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon7\">https://example.com/users/</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" id=\"basic-url7\" aria-describedby=\"basic-addon7\" />\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">$</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">.00</span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">With textarea</span>\n    </div>\n    <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n  </div>\n</div>\n  `,\n  ts: `\n  public mergedPwdShow = false;\n  `\n};\n\nexport const snippetCodeSizing: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <div class=\"input-group input-group-lg mb-1\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n\n  <div class=\"input-group mb-1\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n\n  <div class=\"input-group input-group-sm\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeCheckBox: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <div class=\"row\">\n    <div class=\"col-md\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input type=\"checkbox\" />\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input type=\"radio\" />\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <small class=\"font-weight-semibold w-100 ml-1 my-1\">Custom checkbox and radio</small>\n    <div class=\"col-md\">\n      <!-- Custom checkbox -->\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <div class=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" />\n                <label class=\"custom-control-label\" for=\"colorCheck1\"></label>\n              </div>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <!-- Custom radio -->\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" />\n                <label class=\"custom-control-label\" for=\"customRadio1\"></label>\n              </div>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeButton: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <p class=\"card-text\">\n    Add span with <code>.input-group-btn</code> class and add button inside <b>before</b> or <b>after</b>\n    <code>&lt;input&gt;</code>.\n  </p>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12 mb-1\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Button on right\"\n          aria-describedby=\"button-addon2\"\n        />\n        <div class=\"input-group-append\" id=\"button-addon2\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Go</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12 mb-1\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>\n            <i data-feather=\"search\"></i>\n          </button>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\" />\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Search !</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeDropdown: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <p class=\"card-text\">\n    Add <code>&lt;button&gt;</code> with <code>.dropdown-toggle</code> class and add dropdown-menu after it\n    to get input group with dropdown.\n  </p>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12 mb-1\">\n      <fieldset>\n        <div class=\"input-group\">\n          <div ngbDropdown class=\"input-group-prepend\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              Action\n            </button>\n            <div ngbDropdownMenu>\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\" />\n        </div>\n      </fieldset>\n    </div>\n    <div class=\"col-md-6 col-12 mb-1\">\n      <fieldset>\n        <div class=\"input-group\">\n          <div ngbDropdown class=\"input-group-prepend\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              <i data-feather=\"edit-2\"></i>\n            </button>\n            <div ngbDropdownMenu>\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\" />\n          <div ngbDropdown class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              Action\n            </button>\n            <div ngbDropdownMenu class=\"dropdown-menu-right\">\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input-mask/input-mask.snippetcode';\n\n@Component({\n  selector: 'app-input-mask',\n  templateUrl: './input-mask.component.html'\n})\nexport class InputMaskComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public _snippetCodeCredit = snippet.snippetCodeCredit;\n  public _snippetCodePhone = snippet.snippetCodePhone;\n  public _snippetCodeDate = snippet.snippetCodeDate;\n  public _snippetCodeTime = snippet.snippetCodeTime;\n  public _snippetCodeNumeral = snippet.snippetCodeNumeral;\n  public _snippetCodeSecure = snippet.snippetCodeSecure;\n  public _snippetCodePrefix = snippet.snippetCodePrefix;\n  public _snippetCodeSuffix = snippet.snippetCodeSuffix;\n  public _snippetCodeBlocks = snippet.snippetCodeBlocks;\n  public _snippetCodeDelimiters = snippet.snippetCodeDelimiters;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input Mask',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input Mask',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <section id=\"credit-phone-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCredit\">\n            <h4 class=\"card-title\">Credit Card</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"1234 5678 8765 4321\" mask=\"0000 0000 0000 0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodePhone\">\n            <h4 class=\"card-title\">Phone number</h4>\n            <div class=\"card-body\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">+63</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"(760) 123 00 00\" mask=\"(000) 000 00 00\" />\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"date-time-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDate\">\n            <h4 class=\"card-title\">Date</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"01/02/2023\" mask=\"00/00/0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTime\">\n            <h4 class=\"card-title\">Time (24 hour format)</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"23:23:59\" mask=\"Hh:m0:s0\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"numeral-secure-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeNumeral\">\n            <h4 class=\"card-title\">Numeral Formatting</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"10,000\" mask=\"separator\" thousandSeparator=\",\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSecure\">\n            <h4 class=\"card-title\">Secure Input</h4>\n            <div class=\"card-body\">\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"XXX/X9/2032\"\n                [hiddenInput]=\"true\"\n                mask=\"XXX/X0/0000\"\n              />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"prefix-suffix-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodePrefix\">\n            <h4 class=\"card-title\">Prefix</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"+63\" type=\"text\" prefix=\"+63 \" mask=\"(000) 000 00 00\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSuffix\">\n            <h4 class=\"card-title\">Suffix</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"987654$\" type=\"text\" suffix=\" $\" mask=\"0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"block-delimiters-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBlocks\">\n            <h4 class=\"card-title\">Blocks</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"1234 123 123\" type=\"text\" mask=\"0000 000 000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDelimiters\">\n            <h4 class=\"card-title\">Delimiters</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"123.456\" type=\"text\" mask=\"separator\" thousandSeparator=\".\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputMaskComponent } from 'app/main/forms/form-elements/input-mask/input-mask.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/input-mask',\n    component: InputMaskComponent,\n    data: { animation: 'input-mask' }\n  }\n];\n\n@NgModule({\n  declarations: [InputMaskComponent],\n  imports: [\n    CommonModule,\n    CardSnippetModule,\n    ContentHeaderModule,\n    RouterModule.forChild(routes),\n    NgxMaskModule.forRoot()\n  ]\n})\nexport class InputMaskModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeCredit: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"1234 5678 8765 4321\" mask=\"0000 0000 0000 0000\" />\n  `\n};\nexport const snippetCodePhone: snippetCode = {\n  html: `\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon1\">+63</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"(760) 123 00 00\" mask=\"(000) 000 00 00\" />\n  </div>\n  `\n};\nexport const snippetCodeDate: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"01/02/2023\" mask=\"00/00/0000\" />\n  `\n};\nexport const snippetCodeTime: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"23:23:59\" mask=\"Hh:m0:s0\" />\n  `\n};\nexport const snippetCodeNumeral: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"10,000\" mask=\"separator\" thousandSeparator=\",\" />\n  `\n};\nexport const snippetCodeSecure: snippetCode = {\n  html: `\n  <input\n  class=\"form-control\"\n  type=\"text\"\n  placeholder=\"XXX/X9/2032\"\n  [hiddenInput]=\"true\"\n  mask=\"XXX/X0/0000\"\n  />\n  `\n};\nexport const snippetCodePrefix: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"+63\" type=\"text\" prefix=\"+63 \" mask=\"(000) 000 00 00\" />\n  `\n};\nexport const snippetCodeSuffix: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"987654$\" type=\"text\" suffix=\" $\" mask=\"0000\" />\n  `\n};\nexport const snippetCodeBlocks: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"1234 123 123\" type=\"text\" mask=\"0000 000 000\" />\n  `\n};\nexport const snippetCodeDelimiters: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"123.456\" type=\"text\" mask=\"separator\" thousandSeparator=\".\" />\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input/input.snippetcode';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasicInputs = snippet.snippetCodeBasicInputs;\n  public _snippetCodeSizingOptions = snippet.snippetCodeSizingOptions;\n  public _snippetCodeHorizontalFormLabelSizing = snippet.snippetCodeHorizontalFormLabelSizing;\n  public _snippetCodeFloatingLabelInputs = snippet.snippetCodeFloatingLabelInputs;\n  public _snippetCodeFileInput = snippet.snippetCodeFileInput;\n  public _snippetCodeInputValidationStates = snippet.snippetCodeInputValidationStates;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Inputs start -->\n    <section id=\"basic-input\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicInputs\">\n            <h4 class=\"card-title\">Basic Inputs</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInput\">Basic Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter email\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"helpInputTop\">Input text with help</label>\n                    <small class=\"text-muted\"> eg.<i>someone@example.com</i></small>\n                    <input type=\"text\" class=\"form-control\" id=\"helpInputTop\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Disabled Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"disabledInput\" disabled />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"helperText\">With Helper Text</label>\n                    <input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\" />\n                    <p><small class=\"text-muted\">Find helper text here for given textbox.</small></p>\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Readonly Input</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"readonlyInput\"\n                      readonly=\"readonly\"\n                      value=\"You can't update me :P\"\n                    />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Readonly Static Text</label>\n                    <p class=\"form-control-static\" id=\"staticInput\">email@gmail.com</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Inputs end -->\n\n    <!-- Input Sizing start -->\n    <section id=\"input-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSizingOptions\">\n            <h4 class=\"card-title\">Sizing Options</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">\n                    For different sizes of Input, Use classes like <code>.form-control-lg</code> &amp;\n                    <code>.form-control-sm</code> for Large, Small input box.\n                  </p>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Large</label>\n                    <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Large Input\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Default</label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Normal Input\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Small</label>\n                    <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Small Input\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeHorizontalFormLabelSizing\">\n            <h4 class=\"card-title\">Horizontal form label sizing</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-2\">\n                    Be sure to use <code>.col-form-label-sm</code> or <code>.col-form-label-lg</code> to your\n                    <code>&lt;label&gt;</code>s or <code>&lt;legend&gt;</code>s to correctly follow the size of\n                    <code>.form-control-lg</code> and <code>.form-control-sm</code>.\n                  </p>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabelLg\" class=\"col-sm-3 col-form-label col-form-label-lg\">Large</label>\n                    <div class=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control form-control-lg\"\n                        id=\"colFormLabelLg\"\n                        placeholder=\"Large Input\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabel\" class=\"col-sm-3 col-form-label\">Default</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"Normal Input\" />\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabelSm\" class=\"col-sm-3 col-form-label col-form-label-sm\">Small</label>\n                    <div class=\"col-sm-9\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control form-control-sm\"\n                        id=\"colFormLabelSm\"\n                        placeholder=\"Small Input\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Sizing end -->\n\n    <!-- Floating Label Inputs start -->\n    <section id=\"floating-label-input\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFloatingLabelInputs\">\n            <h4 class=\"card-title\">Floating Label Inputs</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 mb-1\">\n                  <p class=\"card-text mb-1\">\n                    For Floating Label Inputs, need to use <code>.form-label-group</code> class & add attribute\n                    <code>disabled</code> for disabled Floating Label Input.\n                  </p>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <div class=\"form-label-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\" />\n                    <label for=\"floating-label1\">Label-placeholder</label>\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <div class=\"form-label-group\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      id=\"floating-label-disable\"\n                      placeholder=\"Label-placeholder\"\n                      disabled\n                    />\n                    <label for=\"floating-label-disable\">Disabled-placeholder</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Floating Label Inputs end -->\n\n    <!-- Basic File Browser start -->\n    <section id=\"input-file-browser\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFileInput\">\n            <h4 class=\"card-title\">File input</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-6 col-md-12\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInputFile\">Simple File Input</label>\n                    <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\" />\n                  </div>\n                </div>\n                <div class=\"col-lg-6 col-md-12\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInputFile\">With Browse button</label>\n                    <div class=\"custom-file\">\n                      <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" />\n                      <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic File Browser end -->\n\n    <!-- validations start -->\n    <section class=\"validations\" id=\"validation\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInputValidationStates\">\n            <h4 class=\"card-title\">Input Validation States</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    You can indicate invalid and valid form fields with <code>.is-invalid</code> and\n                    <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these\n                    classes.\n                  </p>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label for=\"valid-state\">Valid State</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control is-valid\"\n                    id=\"valid-state\"\n                    placeholder=\"Valid\"\n                    value=\"Valid\"\n                    required\n                  />\n                  <div class=\"valid-feedback\">This is valid state.</div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label for=\"invalid-state\">Invalid State</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control is-invalid\"\n                    id=\"invalid-state\"\n                    placeholder=\"Invalid\"\n                    value=\"Invalid\"\n                    required\n                  />\n                  <div class=\"invalid-feedback\">This is invalid state.</div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- validations end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputComponent } from 'app/main/forms/form-elements/input/input.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/input',\n    component: InputComponent,\n    data: { animation: 'input' }\n  }\n];\n\n@NgModule({\n  declarations: [InputComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class InputModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasicInputs: snippetCode = {\n  html: `\n<div class=\"row\">\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"basicInput\">Basic Input</label>\n      <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter email\" />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"helpInputTop\">Input text with help</label>\n      <small class=\"text-muted\"> eg.<i>someone@example.com</i></small>\n      <input type=\"text\" class=\"form-control\" id=\"helpInputTop\" />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Disabled Input</label>\n      <input type=\"text\" class=\"form-control\" id=\"disabledInput\" disabled />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"helperText\">With Helper Text</label>\n      <input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\" />\n      <p><small class=\"text-muted\">Find helper text here for given textbox.</small></p>\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Readonly Input</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"readonlyInput\"\n        readonly=\"readonly\"\n        value=\"You can't update me :P\"\n      />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Readonly Static Text</label>\n      <p class=\"form-control-static\" id=\"staticInput\">email@gmail.com</p>\n    </div>\n  </div>\n</div>\n  `\n};\nexport const snippetCodeSizingOptions: snippetCode = {\n  html: `\n<div class=\"form-group\">\n  <label for=\"largeInput\">Large</label>\n  <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Large Input\" />\n</div>\n<div class=\"form-group\">\n  <label for=\"largeInput\">Default</label>\n  <input class=\"form-control\" type=\"text\" placeholder=\"Normal Input\" />\n</div>\n<div class=\"form-group\">\n  <label for=\"largeInput\">Small</label>\n  <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Small Input\" />\n</div>\n  `\n};\nexport const snippetCodeHorizontalFormLabelSizing: snippetCode = {\n  html: `\n<div class=\"form-group row\">\n  <label for=\"colFormLabelLg\" class=\"col-sm-3 col-form-label col-form-label-lg\">Large</label>\n  <div class=\"col-sm-9\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-lg\"\n      id=\"colFormLabelLg\"\n      placeholder=\"Large Input\"\n    />\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label for=\"colFormLabel\" class=\"col-sm-3 col-form-label\">Default</label>\n  <div class=\"col-sm-9\">\n    <input type=\"text\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"Normal Input\" />\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label for=\"colFormLabelSm\" class=\"col-sm-3 col-form-label col-form-label-sm\">Small</label>\n  <div class=\"col-sm-9\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-sm\"\n      id=\"colFormLabelSm\"\n      placeholder=\"Small Input\"\n    />\n  </div>\n</div>\n  `\n};\nexport const snippetCodeFloatingLabelInputs: snippetCode = {\n  html: `\n<div class=\"form-label-group\">\n  <input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\" />\n  <label for=\"floating-label1\">Label-placeholder</label>\n</div>\n\n<div class=\"form-label-group\">\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    id=\"floating-label-disable\"\n    placeholder=\"Label-placeholder\"\n    disabled\n  />\n  <label for=\"floating-label-disable\">Disabled-placeholder</label>\n</div>\n  `\n};\nexport const snippetCodeFileInput: snippetCode = {\n  html: `\n<div class=\"form-group\">\n  <label for=\"basicInputFile\">Simple File Input</label>\n  <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\" />\n</div>\n\n<div class=\"form-group\">\n  <label for=\"basicInputFile\">With Browse button</label>\n  <div class=\"custom-file\">\n    <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" />\n    <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n  </div>\n</div>\n  `\n};\nexport const snippetCodeInputValidationStates: snippetCode = {\n  html: `\n<div class=\"row match-height\">\n  <div class=\"col-12\">\n    <p>\n      You can indicate invalid and valid form fields with <code>.is-invalid</code> and\n      <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these\n      classes.\n    </p>\n  </div>\n  <div class=\"col-sm-6 col-12\">\n    <label for=\"valid-state\">Valid State</label>\n    <input\n      type=\"text\"\n      class=\"form-control is-valid\"\n      id=\"valid-state\"\n      placeholder=\"Valid\"\n      value=\"Valid\"\n      required\n    />\n    <div class=\"valid-feedback\">This is valid state.</div>\n  </div>\n  <div class=\"col-sm-6 col-12\">\n    <label for=\"invalid-state\">Invalid State</label>\n    <input\n      type=\"text\"\n      class=\"form-control is-invalid\"\n      id=\"invalid-state\"\n      placeholder=\"Invalid\"\n      value=\"Invalid\"\n      required\n    />\n    <div class=\"invalid-feedback\">This is invalid state.</div>\n  </div>\n</div>\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/number-input/number-input.snippetcode';\n\n@Component({\n  selector: 'app-number-input',\n  templateUrl: './number-input.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class NumberInputComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeTouchspin = snippet.snippetCodeTouchspin;\n  public _snippetCodeSize = snippet.snippetCodeSize;\n  public _snippetCodeMinMax = snippet.snippetCodeMinMax;\n  public _snippetCodeStep = snippet.snippetCodeStep;\n  public _snippetCodeColors = snippet.snippetCodeColors;\n\n  public dateValue: number;\n\n  constructor() {}\n\n  /***\n   * On touchspin count change\n   */\n  countChange(value) {\n    // this.dateValue = value;\n    console.log(value);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Number Input',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Number Input',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- core TouchSpin Spinners start -->\n    <section id=\"basic-touchspin\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTouchspin\">\n            <h4 class=\"card-title\">Touchspin</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use <code>core-touchspin</code> component to get default touchspin. To disable touchspin use\n                    <code>[disable]=\"true\"</code> & to get touchspin with chevron icon use\n                    <code>[iconChevron]=\"true\"</code>.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin default -->\n                    <core-touchspin [numberValue]=\"50\" (onChange)=\"countChange($event)\"></core-touchspin>\n\n                    <!-- touchspin disabled -->\n                    <core-touchspin [disable]=\"true\"></core-touchspin>\n\n                    <!-- touchspin wih icon chevron  -->\n                    <core-touchspin [iconChevron]=\"true\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners end -->\n\n    <!-- core TouchSpin Spinners Size start -->\n    <section id=\"touchspin-size\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSize\">\n            <h4 class=\"card-title\">Size</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use input property <code>[size]</code> add pass <code>'sm' | 'lg'</code> to get small and large\n                    touchspin respectively. <strong>Default</strong> is Medium size.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin size large -->\n                    <core-touchspin [size]=\"'lg'\"></core-touchspin>\n\n                    <!-- touchspin size default -->\n                    <core-touchspin></core-touchspin>\n\n                    <!-- touchspin size small -->\n                    <core-touchspin [size]=\"'sm'\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners end -->\n\n    <!-- core TouchSpin Spinners Min-max start -->\n    <section id=\"touchspin-min-max\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMinMax\">\n            <h4 class=\"card-title\">Min - Max</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">\n                    Use input property <code>[minValue]</code> & <code>[maxValue]</code> to set lower-limit and\n                    upper-limit of input number respectively.\n                  </p>\n\n                  <!-- touchspin min-max -->\n                  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\" [minValue]=\"40\" [maxValue]=\"60\"></core-touchspin>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Min - Max end -->\n\n    <!-- core TouchSpin Spinners Step start -->\n    <section id=\"touchspin-step\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeStep\">\n            <h4 class=\"card-title\">Step</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">Use input property <code>[numberValue]</code> to set value of input number.</p>\n\n                  <!-- touchspin steps -->\n                  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\"></core-touchspin>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Min - Max end -->\n\n    <!-- core TouchSpin Spinners Colors start -->\n    <section id=\"touchspin-colors\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeColors\">\n            <h4 class=\"card-title\">Colors Variation</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use input property <code>[color]=\"'colorName'\"</code> to get your desired color variation.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin color default primary -->\n                    <core-touchspin></core-touchspin>\n\n                    <!-- touchspin color success -->\n                    <core-touchspin [color]=\"'success'\"></core-touchspin>\n\n                    <!-- touchspin color warning -->\n                    <core-touchspin [color]=\"'warning'\"></core-touchspin>\n\n                    <!-- touchspin color info -->\n                    <core-touchspin [color]=\"'info'\"></core-touchspin>\n\n                    <!-- touchspin color danger -->\n                    <core-touchspin [color]=\"'danger'\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Decimal end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { CoreTouchspinModule } from '@core/components/core-touchspin/core-touchspin.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { NumberInputComponent } from 'app/main/forms/form-elements/number-input/number-input.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/number-input',\n    component: NumberInputComponent,\n    data: { animation: 'number-input' }\n  }\n];\n\n@NgModule({\n  declarations: [NumberInputComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreTouchspinModule\n  ]\n})\nexport class NumberInputModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTouchspin: snippetCode = {\n  html: `\n  <!-- touchspin default -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin disabled -->\n  <core-touchspin [disable]=\"true\"></core-touchspin>\n\n  <!-- touchspin wih icon chevron  -->\n  <core-touchspin [iconChevron]=\"true\"></core-touchspin>\n  `\n};\nexport const snippetCodeSize: snippetCode = {\n  html: `\n  <!-- touchspin size small -->\n  <core-touchspin [size]=\"'sm'\"></core-touchspin>\n\n  <!-- touchspin size default -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin size large -->\n  <core-touchspin [size]=\"'lg'\"></core-touchspin>\n  `\n};\n\nexport const snippetCodeMinMax: snippetCode = {\n  html: `\n  <!-- touchspin min-max -->\n  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\" [minValue]=\"40\" [maxValue]=\"60\"></core-touchspin>\n  `\n};\nexport const snippetCodeStep: snippetCode = {\n  html: `\n  <!-- touchspin steps -->\n  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\"></core-touchspin>\n  `\n};\nexport const snippetCodeColors: snippetCode = {\n  html: `\n  <!-- touchspin color default primary -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin color success -->\n  <core-touchspin [color]=\"'success'\"></core-touchspin>\n\n  <!-- touchspin color warning -->\n  <core-touchspin [color]=\"'warning'\"></core-touchspin>\n\n  <!-- touchspin color info -->\n  <core-touchspin [color]=\"'info'\"></core-touchspin>\n\n  <!-- touchspin color danger -->\n  <core-touchspin [color]=\"'danger'\"></core-touchspin>\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/quill-editor/quill-editor.snippetcode';\n\n@Component({\n  selector: 'app-quill-editor',\n  templateUrl: './quill-editor.component.html',\n  styleUrls: ['./quill-editor.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class QuillEditorComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // snippet code variables\n  public _snippetCodeSnowEditor = snippet.snippetCodeSnowEditor;\n  public _snippetCodeBubbleEditor = snippet.snippetCodeBubbleEditor;\n  public _snippetCodeFullEditor = snippet.snippetCodeFullEditor;\n  public _quillEditorContent = snippet.quillEditorContent;\n\n  snowEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n\n  bubbleEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n  fullEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Quill Editor',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Quill Editor',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- quill snow  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeSnowEditor\">\n      <h4 class=\"card-title\">Snow Editor</h4>\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          By default <strong>Snow Editor</strong> is custom editor. Here we have customized the toolbar with\n          <code>quill-editor-toolbar</code> directive.\n        </p>\n        <quill-editor [(ngModel)]=\"snowEditorRef\" [modules]=\"{ syntax: true, toolbar: [['code-block']] }\">\n          <div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Alignment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill snow  -->\n\n    <!-- quill Bubble  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeBubbleEditor\">\n      <h4 class=\"card-title\">Bubble Editor</h4>\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          To get <strong>Bubble Editor</strong> use <code>theme=\"bubble\"</code>. Here we have customized the bubble\n          toolbar with <code>quill-editor-toolbar</code> directive.\n        </p>\n        <quill-editor\n          theme=\"bubble\"\n          [(ngModel)]=\"bubbleEditorRef\"\n          [modules]=\"{ syntax: true, toolbar: [['code-block']] }\"\n        >\n          <div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Aligment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill Bubble  -->\n\n    <!-- quill Full  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeFullEditor\">\n      <h4 class=\"card-title\">Full Editor</h4>\n      <div class=\"card-body\">\n        <quill-editor [(ngModel)]=\"fullEditorRef\" [modules]=\"{ syntax: true, toolbar: [['code-block']] }\"\n          ><div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Alignment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill Full  -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuillModule } from 'ngx-quill';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { QuillEditorComponent } from 'app/main/forms/form-elements/quill-editor/quill-editor.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/quill-editor',\n    component: QuillEditorComponent,\n    data: { animation: 'quill-editor' }\n  }\n];\n\n@NgModule({\n  declarations: [QuillEditorComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    ContentHeaderModule,\n    CardSnippetModule,\n    QuillModule.forRoot(),\n    CoreCommonModule\n  ]\n})\nexport class QuillEditorModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeSnowEditor: snippetCode = {\n  html: `\n  <quill-editor  [(ngModel)]=\"quillEditorContent\">\n    <div quill-editor-toolbar>\n      <span class=\"ql-formats\">\n        <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n        <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n        <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <select class=\"ql-align\" [title]=\"'Alignment'\">\n          <option selected></option>\n          <option value=\"center\"></option>\n          <option value=\"right\"></option>\n          <option value=\"justify\"></option>\n        </select>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n      </span>\n    </div>\n\n  </quill-editor>\n  `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\n\nexport const snippetCodeBubbleEditor: snippetCode = {\n  html: `\n  <quill-editor theme=\"bubble\" [(ngModel)]=\"quillEditorContent\">\n    <div quill-editor-toolbar>\n      <span class=\"ql-formats\">\n        <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n        <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n        <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <select class=\"ql-align\" [title]=\"'Aligment'\">\n          <option selected></option>\n          <option value=\"center\"></option>\n          <option value=\"right\"></option>\n          <option value=\"justify\"></option>\n        </select>\n      </span>\n    </div>\n  </quill-editor>\n  `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\nexport const snippetCodeFullEditor: snippetCode = {\n  html: `\n  <quill-editor [(ngModel)]=\"quillEditorContent\"></quill-editor>\n      `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\nexport const quillEditorContent: snippetCode = {\n  html: `\n<h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n<p><br></p>\n<p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n  built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n    architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n  completely customizable to fit any need.</p>\n<p><br></p>\n<iframe class=\"ql-video ql-align-center\"\n  src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n<p><br></p>\n<p><br></p>\n<h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n<p><br></p>\n<pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n  // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  var quill = new Quill('#editor', &#123;\n  modules: &#123;\n  toolbar: '#toolbar'\n  &#125;,\n  theme: 'snow'\n  &#125;);\n  // Open your browser's developer console to try out the API!\n</pre>\n<p><br></p>\n<p><br></p>\n<p class=\"ql-align-center\"><strong>Built with</strong></p>\n<p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n    data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n<p><br></p>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/radio/radio.snippetcode';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html'\n})\nexport class RadioComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeRadioBasic = snippet.snippetCodeRadioBasic;\n  public _snippetCodeRadioCustom = snippet.snippetCodeRadioCustom;\n  public _snippetCodeRadioCustomColor = snippet.snippetCodeRadioCustomColor;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Radio',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Radio',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Radio Basic Start -->\n    <section id=\"radio-basic\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioBasic\">\n            <h4 class=\"card-title\">Basic Radio Buttons</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadio1\"\n                    value=\"option1\"\n                    checked\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio1\">Checked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadio2\"\n                    value=\"option2\"\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio2\">Unchecked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioDisabledOptions\"\n                    id=\"inlineRadio3\"\n                    value=\"option3\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio3\">Checked disabled</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioDisabledOptions\"\n                    id=\"inlineRadio4\"\n                    value=\"option4\"\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Basic Ends -->\n\n    <!-- Radio Custom Start -->\n    <section id=\"radio-custom\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioCustom\">\n            <h4 class=\"card-title\">Custom Radio Buttons</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Add <code>.custom-control .custom-radio</code> as a single wrapper &amp; add\n                <code>.custom-control-label</code> for better output.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" checked />\n                  <label class=\"custom-control-label\" for=\"customRadio1\">Checked</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" class=\"custom-control-input\" />\n                  <label class=\"custom-control-label\" for=\"customRadio2\">Unchecked</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customRadio3\"\n                    name=\"customDisabledRadio\"\n                    class=\"custom-control-input\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"custom-control-label\" for=\"customRadio3\">Checked disabled</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customRadio4\"\n                    name=\"customDisabledRadio\"\n                    class=\"custom-control-input\"\n                    disabled\n                  />\n                  <label class=\"custom-control-label\" for=\"customRadio4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Custom Ends -->\n\n    <!-- Radio Custom Color Start -->\n    <section id=\"radio-custom-color\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioCustomColor\">\n            <h4 class=\"card-title\">Color</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                To change the color of the radio use the <code>.custom-control-&#123;value&#125;</code> for primary,\n                secondary, success, danger, info, warning.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio1\"\n                    name=\"customColorRadio1\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio1\">Primary</label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio2\"\n                    name=\"customColorRadio2\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio2\">Secondary</label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio3\"\n                    name=\"customColorRadio3\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio3\">Success</label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio5\"\n                    name=\"customColorRadio5\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio5\">Danger</label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio4\"\n                    name=\"customColorRadio4\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio4\">Warning</label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-radio\">\n                  <input type=\"radio\" id=\"customRadio6\" name=\"customColorRadio6\" class=\"custom-control-input\" checked />\n                  <label class=\"custom-control-label\" for=\"customRadio6\">Info</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Custom Color Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { RadioComponent } from 'app/main/forms/form-elements/radio/radio.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/radio',\n    component: RadioComponent,\n    data: { animation: 'radio' }\n  }\n];\n\n@NgModule({\n  declarations: [RadioComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class RadioModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeRadioBasic: snippetCode = {\n  html: `\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioOptions\"\n      id=\"inlineRadio1\"\n      value=\"option1\"\n      checked\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio1\">Checked</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioOptions\"\n      id=\"inlineRadio2\"\n      value=\"option2\"\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio2\">Unchecked</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioDisabledOptions\"\n      id=\"inlineRadio3\"\n      value=\"option3\"\n      checked\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio3\">Checked disabled</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioDisabledOptions\"\n      id=\"inlineRadio4\"\n      value=\"option4\"\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeRadioCustom: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-radio\">\n    <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" checked />\n    <label class=\"custom-control-label\" for=\"customRadio1\">Checked</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" class=\"custom-control-input\" />\n    <label class=\"custom-control-label\" for=\"customRadio2\">Unchecked</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"customRadio3\"\n      name=\"customDisabledRadio\"\n      class=\"custom-control-input\"\n      checked\n      disabled\n    />\n    <label class=\"custom-control-label\" for=\"customRadio3\">Checked disabled</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"customRadio4\"\n      name=\"customDisabledRadio\"\n      class=\"custom-control-input\"\n      disabled\n    />\n    <label class=\"custom-control-label\" for=\"customRadio4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeRadioCustomColor: snippetCode = {\n  html: `\n<div class=\"custom-control custom-control-primary custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio1\"\n    name=\"customColorRadio1\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio1\">Primary</label>\n</div>\n\n<div class=\"custom-control custom-control-secondary custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio2\"\n    name=\"customColorRadio2\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio2\">Secondary</label>\n</div>\n\n<div class=\"custom-control custom-control-success custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio3\"\n    name=\"customColorRadio3\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio3\">Success</label>\n</div>\n\n<div class=\"custom-control custom-control-danger custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio5\"\n    name=\"customColorRadio5\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio5\">Danger</label>\n</div>\n\n<div class=\"custom-control custom-control-warning custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio4\"\n    name=\"customColorRadio4\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio4\">Warning</label>\n</div>\n\n<div class=\"custom-control custom-control-info custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customRadio6\"\n    name=\"customColorRadio6\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customRadio6\">Info</label>\n</div>\n  `\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { delay, map, tap } from 'rxjs/operators';\n\nexport interface Person {\n  id: string;\n  isActive: boolean;\n  age: number;\n  name: string;\n  gender: string;\n  company: string;\n  email: string;\n  phone: string;\n  disabled?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _gitHubAccountsCache = new Map<string, []>();\n\n  constructor(private http: HttpClient) {}\n\n  getGithubAccounts(term: string = null) {\n    if (this._gitHubAccountsCache.has(term)) {\n      return of(this._gitHubAccountsCache.get(term));\n    }\n\n    if (term) {\n      return this.http.get<any>(`https://api.github.com/search/users?q=${term}`).pipe(\n        map(rsp => rsp.items),\n        tap(data => this._gitHubAccountsCache.set(term, data))\n      );\n    } else {\n      return of([]);\n    }\n  }\n\n  getAlbums() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums');\n  }\n\n  getPhotos() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos');\n  }\n\n  getPeople(term: string = null): Observable<Person[]> {\n    let items = getMockPeople();\n    if (term) {\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n    }\n    return of(items).pipe(delay(50));\n  }\n}\n\nfunction getMockPeople() {\n  return [\n    {\n      id: '5a15b13c36e7a7f00cf0d7cb',\n      index: 2,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 23,\n      name: 'Karyn Wright',\n      gender: 'female',\n      company: 'ZOLAR',\n      email: 'karynwright@zolar.com',\n      phone: '+1 (851) 583-2547'\n    },\n    {\n      id: '5a15b13c2340978ec3d2c0ea',\n      index: 3,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 35,\n      name: 'Rochelle Estes',\n      disabled: true,\n      gender: 'female',\n      company: 'EXTRAWEAR',\n      email: 'rochelleestes@extrawear.com',\n      phone: '+1 (849) 408-2029'\n    },\n    {\n      id: '5a15b13c663ea0af9ad0dae8',\n      index: 4,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Mendoza Ruiz',\n      gender: 'male',\n      company: 'ZYTRAX',\n      email: 'mendozaruiz@zytrax.com',\n      phone: '+1 (904) 536-2020'\n    },\n    {\n      id: '5a15b13cc9eeb36511d65acf',\n      index: 5,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 39,\n      name: 'Rosales Russell',\n      gender: 'male',\n      company: 'ELEMANTRA',\n      email: 'rosalesrussell@elemantra.com',\n      phone: '+1 (868) 473-3073'\n    },\n    {\n      id: '5a15b13c728cd3f43cc0fe8a',\n      index: 6,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Marquez Nolan',\n      gender: 'male',\n      company: 'MIRACLIS',\n      disabled: true,\n      email: 'marqueznolan@miraclis.com',\n      phone: '+1 (853) 571-3921'\n    },\n    {\n      id: '5a15b13ca51b0aaf8a99c05a',\n      index: 7,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 28,\n      name: 'Franklin James',\n      gender: 'male',\n      company: 'CAXT',\n      email: 'franklinjames@caxt.com',\n      phone: '+1 (868) 539-2984'\n    },\n    {\n      id: '5a15b13cc3b9381ffcb1d6f7',\n      index: 8,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Elsa Bradley',\n      gender: 'female',\n      company: 'MATRIXITY',\n      email: 'elsabradley@matrixity.com',\n      phone: '+1 (994) 583-3850'\n    },\n    {\n      id: '5a15b13ce58cb6ff62c65164',\n      index: 9,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 40,\n      name: 'Pearson Thompson',\n      gender: 'male',\n      company: 'EZENT',\n      email: 'pearsonthompson@ezent.com',\n      phone: '+1 (917) 537-2178'\n    },\n    {\n      id: '5a15b13c90b95eb68010c86e',\n      index: 10,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Ina Pugh',\n      gender: 'female',\n      company: 'MANTRIX',\n      email: 'inapugh@mantrix.com',\n      phone: '+1 (917) 450-2372'\n    },\n    {\n      id: '5a15b13c2b1746e12788711f',\n      index: 11,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Nguyen Elliott',\n      gender: 'male',\n      company: 'PORTALINE',\n      email: 'nguyenelliott@portaline.com',\n      phone: '+1 (905) 491-3377'\n    },\n    {\n      id: '5a15b13c605403381eec5019',\n      index: 12,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 31,\n      name: 'Mills Barnett',\n      gender: 'male',\n      company: 'FARMEX',\n      email: 'millsbarnett@farmex.com',\n      phone: '+1 (882) 462-3986'\n    },\n    {\n      id: '5a15b13c67e2e6d1a3cd6ca5',\n      index: 13,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 36,\n      name: 'Margaret Reynolds',\n      gender: 'female',\n      company: 'ROOFORIA',\n      email: 'margaretreynolds@rooforia.com',\n      phone: '+1 (935) 435-2345'\n    },\n    {\n      id: '5a15b13c947c836d177aa85c',\n      index: 14,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 29,\n      name: 'Yvette Navarro',\n      gender: 'female',\n      company: 'KINETICA',\n      email: 'yvettenavarro@kinetica.com',\n      phone: '+1 (807) 485-3824'\n    },\n    {\n      id: '5a15b13c5dbbe61245c1fb73',\n      index: 15,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 20,\n      name: 'Elisa Guzman',\n      gender: 'female',\n      company: 'KAGE',\n      email: 'elisaguzman@kage.com',\n      phone: '+1 (868) 594-2919'\n    },\n    {\n      id: '5a15b13c38fd49fefea8db80',\n      index: 16,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 33,\n      name: 'Jodie Bowman',\n      gender: 'female',\n      company: 'EMTRAC',\n      email: 'jodiebowman@emtrac.com',\n      phone: '+1 (891) 565-2560'\n    },\n    {\n      id: '5a15b13c9680913c470eb8fd',\n      index: 17,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Diann Booker',\n      gender: 'female',\n      company: 'LYRIA',\n      email: 'diannbooker@lyria.com',\n      phone: '+1 (830) 555-3209'\n    }\n  ];\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Bootstrap Select start -->\n    <section class=\"bootstrap-select\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Select</h4>\n            </div>\n            <div class=\"card-body\">\n              <!-- Basic Select -->\n              <div class=\"form-group\">\n                <label for=\"basicSelect\">Basic Select</label>\n                <select class=\"form-control\" id=\"basicSelect\">\n                  <option>IT</option>\n                  <option>Blade Runner</option>\n                  <option>Thor Ragnarok</option>\n                </select>\n              </div>\n\n              <!-- Custom Select -->\n              <div class=\"form-group\">\n                <label for=\"customSelect\">Custom Select</label>\n                <select class=\"custom-select\" id=\"customSelect\">\n                  <option selected>Open this menu</option>\n                  <option value=\"IT\">IT</option>\n                  <option value=\"Blade Runner\">Blade Runner</option>\n                  <option value=\"Thor Ragnarok\">Thor Ragnarok</option>\n                </select>\n              </div>\n\n              <!-- Disabled Select -->\n              <div class=\"form-group\">\n                <label for=\"disabledSelect\">Disabled Select</label>\n                <select class=\"form-control\" disabled=\"disabled\" id=\"disabledSelect\">\n                  <option>Green</option>\n                  <option>Red</option>\n                  <option>Blue</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Select Sizing</h4>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <label for=\"selectLarge\">Select Large</label>\n                <select class=\"form-control form-control-lg mb-1\" id=\"selectLarge\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"selectDefault\">Default</label>\n                <select class=\"form-control mb-1\" id=\"selectDefault\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"selectSmall\">Select Small</label>\n                <select class=\"form-control form-control-sm\" id=\"selectSmall\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Multi Select</h4>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <!-- Multiple Select -->\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"normalMultiSelect\">Multiple Select</label>\n                    <select class=\"form-control\" id=\"normalMultiSelect\" multiple=\"multiple\">\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"customSelectMulti\">Custom Multiple Select</label>\n                    <select class=\"custom-select\" id=\"customSelectMulti\" multiple>\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"customSelectSize\">Custom Select Size</label>\n                    <select class=\"custom-select\" id=\"customSelectSize\" size=\"4\">\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Bootstrap Select end -->\n\n    <!-- Basic Select start -->\n    <section class=\"basic-select\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Ng-Select</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 mb-2\">\n                  <a href=\"https://github.com/ng-select/ng-select\" target=\"_blank\"\n                    >For more information on ng-select.</a\n                  >\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Basic Select with Search</label>\n                  <div class=\"form-group\">\n                    <!-- Basic Select with Search -->\n                    <ng-select [items]=\"selectBasic\" bindLabel=\"name\" [loading]=\"selectBasicLoading\"> </ng-select>\n                    <!--/ Basic Select with Search -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Group by item</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Group by item -->\n                    <ng-select\n                      [items]=\"selectGroup\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                      groupBy=\"country\"\n                      [(ngModel)]=\"selectGroupselected\"\n                    >\n                      <ng-template ng-optgroup-tmp let-item=\"item\">\n                        {{ item.country || 'Unnamed group' }}\n                      </ng-template>\n                    </ng-select>\n                    <br />\n                    <small>Selected: {{ selectGroupselected | json }}</small>\n                    <!--/ Select Group by item -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select With Icon</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select With Icon -->\n                    <ng-select [items]=\"selectIcon\" [(ngModel)]=\"selectIconSelected\" bindLabel=\"name\" bindValue=\"name\">\n                      <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\n                        <i [class]=\"item.icon\"></i>\n                        {{ item.name }}\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select With Icon -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select with custom Option</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select with custom Option -->\n                    <ng-select\n                      [items]=\"selectIcon\"\n                      [(ngModel)]=\"selectCustomSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\n                        <div *ngIf=\"item.name === 'Firefox'\">{{ item.name }}</div>\n                        <div style=\"margin: 10px 0\" class=\"card\" *ngIf=\"item.name !== 'Safari'\">\n                          <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{ item.name }}</h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n                            <p class=\"card-text\">\n                              <i [class]=\"item.icon\"></i>\n                              Some quick example text to build\n                            </p>\n                            <div *ngIf=\"item.name === 'Opera'\">\n                              <a href=\"#\" class=\"card-link\">Card link</a>\n                              <a href=\"#\" class=\"card-link\">Another link</a>\n                            </div>\n                          </div>\n                        </div>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select with custom Option -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Select end -->\n\n    <!-- Multiple Select start -->\n    <section class=\"multiple-select\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Multiple Select</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-12\">\n                  <label>Basic Multi select</label>\n\n                  <div class=\"form-group\">\n                    <!-- Basic Multi select -->\n                    <ng-select\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiSelected\"\n                    >\n                    </ng-select>\n                    <!--/ Basic Multi select -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi with Group</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi with group -->\n                    <ng-select\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      groupBy=\"gender\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiGroupSelected\"\n                    >\n                    </ng-select>\n                    <!--/ Select Multi with group -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Add custom Tag</label>\n\n                  <div class=\"form-group\">\n                    <!-- Add custom Tag -->\n                    <ng-select\n                      [items]=\"customTag\"\n                      [addTag]=\"true\"\n                      multiple=\"true\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select tag\"\n                      [(ngModel)]=\"SelectTag\"\n                    >\n                    </ng-select>\n                    <!--/ Add custom Tag -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Custom Tag</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Custom Tag -->\n                    <ng-select\n                      [items]=\"customTag\"\n                      [addTag]=\"selectAddTagMethod\"\n                      [hideSelected]=\"true\"\n                      multiple=\"true\"\n                      bindLabel=\"name\"\n                      [(ngModel)]=\"customTagselected\"\n                    >\n                    </ng-select>\n\n                    <br />\n                    Selected value: {{ customTagselected | json }}\n                    <!--/ Select Custom Tag -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Multiple Select end -->\n\n    <!-- Select Advance Options start -->\n    <section class=\"select-advance\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Advance Options</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi with Icon</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi with Icon -->\n                    <ng-select\n                      [items]=\"multiIconGithubUsers | async\"\n                      [multiple]=\"true\"\n                      bindLabel=\"login\"\n                      bindValue=\"login\"\n                      [(ngModel)]=\"multiIconGithubUsersSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"\n                          ><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}</span\n                        >\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n\n                      <ng-template ng-option-tmp let-item=\"item\">\n                        <img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi with Icon -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi Custom</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi Custom -->\n                    <ng-select\n                      [items]=\"multiIconGithubUsers | async\"\n                      [multiple]=\"true\"\n                      bindLabel=\"login\"\n                      bindValue=\"login\"\n                      placeholder=\"Select items\"\n                      [(ngModel)]=\"multiCustomGithubUsersSelected\"\n                    >\n                      <ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                        <div class=\"ng-value\" *ngFor=\"let item of items | slice: 0:2\">\n                          <span class=\"ng-value-label\"\n                            ><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}</span\n                          >\n                          <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                        </div>\n                        <div class=\"ng-value\" *ngIf=\"items.length > 2\">\n                          <span class=\"ng-value-label\">{{ items.length - 2 }} more...</span>\n                        </div>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi Custom -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Multi select with limited number of selections</label>\n\n                  <div class=\"form-group\">\n                    <!-- Multi select with limited number of selections -->\n                    <ngb-alert\n                      [type]=\"'warning'\"\n                      [dismissible]=\"false\"\n                      class=\"mb-2\"\n                      *ngIf=\"selectMultiLimitedSelected.length === 3\"\n                    >\n                      <div class=\"alert-body\">\n                        <small>Max selection reached</small>\n                      </div>\n                    </ngb-alert>\n\n                    <ng-select\n                      #selectMultiLimited\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [maxSelectedItems]=\"3\"\n                      bindLabel=\"name\"\n                      [(ngModel)]=\"selectMultiLimitedSelected\"\n                    >\n                    </ng-select>\n\n                    <div class=\"mt-1\">\n                      Selected value: <br />\n                      <ul>\n                        <li *ngFor=\"let item of selectMultiLimitedSelected\">{{ item.name }}</li>\n                      </ul>\n                      <button (click)=\"multiLimitedClearModel()\" class=\"btn btn-secondary btn-sm\" rippleEffect>\n                        Clear model\n                      </button>\n                    </div>\n                    <!-- Multi select with limited number of selections -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Custom header footer template</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Custom header footer template -->\n                    <ng-select\n                      [multiple]=\"true\"\n                      [items]=\"selectCustomHeaderFooter\"\n                      [(ngModel)]=\"selectCustomHeaderFooterSelected\"\n                      placeholder=\"Select people\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <button\n                          (click)=\"customHeaderFooterSelectAll()\"\n                          class=\"btn btn-sm btn-secondary mr-1\"\n                          rippleEffect\n                        >\n                          Select all\n                        </button>\n                        <button (click)=\"customHeaderFooterUnselectAll()\" class=\"btn btn-sm btn-secondary\" rippleEffect>\n                          Unselect all\n                        </button>\n                      </ng-template>\n                      <ng-template ng-footer-tmp>\n                        Selected count: {{ selectCustomHeaderFooterSelected.length }}\n                      </ng-template>\n                    </ng-select>\n                    <br />\n\n                    Selected people: {{ selectCustomHeaderFooterSelected }}\n                    <!--/ Select Custom header footer template -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <!-- Button trigger modal -->\n                  <button\n                    type=\"button\"\n                    (click)=\"modalSelectOpen(modalSelect)\"\n                    class=\"btn btn-outline-primary btn-block\"\n                    rippleEffect\n                  >\n                    Ng-Select in Modal\n                  </button>\n\n                  <!-- Modal -->\n                  <ng-template #modalSelect let-modal>\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\" id=\"myModalLabel1\">ng-select in Modal</h4>\n                      <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n                      <p>This is <code>ng-select</code> example in Modal.</p>\n                      <ng-select [items]=\"selectBasic\" bindLabel=\"name\" [loading]=\"selectBasicLoading\"> </ng-select>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('Accept click')\" rippleEffect>\n                        Accept\n                      </button>\n                    </div>\n                  </ng-template>\n                  <!-- / Modal -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Select Advance Options end -->\n\n    <!-- Select Sizing start -->\n    <section class=\"select-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Size</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    For different sizes of select, Use classes like <code>.ng-select-size-lg</code> &amp;\n                    <code>.ng-select-size-sm</code> for Large &amp; Small Select respectively.\n                  </p>\n                </div>\n                <div class=\"col-12\">\n                  <label>Large</label>\n                  <div class=\"form-group\">\n                    <!-- select size large -->\n                    <ng-select\n                      class=\"ng-select-size-lg\"\n                      #SelectSizeLarge\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeLargeSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeLarge.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                      <!--/ select size large -->\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Default</label>\n                  <div class=\"form-group\">\n                    <!-- Select Size default -->\n                    <ng-select\n                      #SelectSizeDefault\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeDefaultSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeDefault.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                      <!--/ Select Size default -->\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Small</label>\n                  <div class=\"form-group\">\n                    <!-- Select Size small -->\n                    <ng-select\n                      class=\"ng-select-size-sm\"\n                      #SelectSizeSmall\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeSmallSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeSmall.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Size small -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Multi Select Size</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    For different sizes of select, Use classes like <code>.ng-select-size-lg</code> &amp;\n                    <code>.ng-select-size-sm</code> for Large &amp; Small Select respectively.\n                  </p>\n                </div>\n                <div class=\"col-12\">\n                  <label>Large</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size large -->\n                    <ng-select\n                      class=\"ng-select-size-lg\"\n                      [items]=\"MultiLarge | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiLargeSelected\"\n                    >\n                    </ng-select>\n                    <!--/ Multi Select Size large -->\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Default</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size default -->\n                    <ng-select\n                      [items]=\"MultiDefault | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiDefaultSelected\"\n                    >\n                    </ng-select>\n                    <!--/ Multi Select Size default -->\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Small</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size small -->\n                    <ng-select\n                      class=\"ng-select-size-sm\"\n                      [items]=\"MultiSmall | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiSmallSelected\"\n                    >\n                    </ng-select>\n                    <!--/ Multi Select Size small -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Select Sizing end -->\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs';\n\nimport { Person, DataService } from 'app/main/forms/form-elements/select/data.service';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // select basic\n  public selectBasic: Person[] = [];\n  public selectBasicLoading = false;\n\n  // select group\n  public selectGroupselected = 'Adam';\n  public selectGroup = [\n    {\n      name: 'Adam',\n      country: 'United States'\n    },\n    {\n      name: 'Homer',\n      country: ''\n    },\n    {\n      name: 'Samantha',\n      country: 'United States'\n    },\n    {\n      name: 'Amalie',\n      country: 'Argentina'\n    },\n    {\n      name: 'Estefanía',\n      country: 'Argentina'\n    },\n    {\n      name: 'Adrian',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Wladimir',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Natasha',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Nicole',\n      country: 'Colombia'\n    },\n    {\n      name: 'Michael',\n      country: 'Colombia'\n    },\n    {\n      name: 'Nicolás',\n      country: 'Colombia'\n    }\n  ];\n\n  // select icon\n  public selectIcon = [\n    {\n      id: 1,\n      name: 'Chrome',\n      icon: 'fa fa-chrome'\n    },\n    {\n      id: 2,\n      name: 'Firefox',\n      icon: 'fa fa-firefox'\n    },\n    {\n      id: 3,\n      name: 'Safari',\n      icon: 'fa fa-safari'\n    },\n    {\n      id: 4,\n      name: 'Opera',\n      icon: 'fa fa-opera'\n    }\n  ];\n  public selectIconSelected = this.selectIcon[0].name;\n\n  // select custom option\n  public selectCustomSelected = this.selectIcon[0].name;\n\n  // select tag\n  public SelectTag;\n\n  // Select Custom Tag\n  public customTagselected;\n  public customTag: any[] = [];\n  public customTagNames = ['Uber', 'Microsoft', 'Flexigen'];\n\n  // select Basic Multi\n  public selectMulti: Observable<any[]>;\n  public selectMultiSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Multi with group\n  public selectMultiGroupSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Multi with Icon\n  public multiIconGithubUsers: Observable<any[]>;\n  public multiIconGithubUsersSelected = ['anjmao'];\n\n  // Select Multi Custom\n  public multiCustomGithubUsersSelected = ['anjmao'];\n\n  // select with limited number of selections\n  public selectMultiLimitedSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Custom header footer template\n  public selectCustomHeaderFooter = [];\n  public selectCustomHeaderFooterSelected = [];\n\n  // select size\n  public SelectSizeLargeSelected = 'Adam';\n  public SelectSizeDefaultSelected = 'Adam';\n  public SelectSizeSmallSelected = 'Adam';\n\n  // multiple sizes\n  public MultiLarge: Observable<any[]>;\n  public MultiLargeSelected = [{ name: 'Karyn Wright' }];\n\n  public MultiDefault: Observable<any[]>;\n  public MultiDefaultSelected = [{ name: 'Karyn Wright' }];\n\n  public MultiSmall: Observable<any[]>;\n  public MultiSmallSelected = [{ name: 'Karyn Wright' }];\n\n  /**\n   * Constructor\n   *\n   * @param {DataService} dataService\n   * @param {NgbModal} modalService\n   */\n  constructor(private dataService: DataService, private modalService: NgbModal) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  // select basic\n  private selectBasicMethod() {\n    this.selectBasicLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.selectBasic = x;\n      this.selectBasicLoading = false;\n    });\n  }\n\n  // select multi limited selections\n  multiLimitedClearModel() {\n    this.selectMultiLimitedSelected = [];\n  }\n\n  /**\n   * Select Custom Tag\n   *\n   * @param name\n   */\n  selectAddTagMethod(name) {\n    return { name: name, tag: true };\n  }\n\n  customHeaderFooterSelectAll() {\n    this.selectCustomHeaderFooterSelected = this.selectCustomHeaderFooter.map(x => x.name);\n  }\n\n  customHeaderFooterUnselectAll() {\n    this.selectCustomHeaderFooterSelected = [];\n  }\n\n  // ng-select in model\n  modalSelectOpen(modalSelect) {\n    this.modalService.open(modalSelect, {\n      windowClass: 'modal'\n    });\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    this.selectBasicMethod();\n\n    this.selectMulti = this.dataService.getPeople();\n\n    this.customTagNames.forEach((c, i) => {\n      this.customTag.push({ id: i, name: c });\n    });\n\n    this.multiIconGithubUsers = this.dataService.getGithubAccounts('anjm');\n\n    this.dataService.getPeople().subscribe(items => {\n      this.selectCustomHeaderFooter = items;\n    });\n\n    // multiple sizes\n    this.MultiLarge = this.dataService.getPeople();\n    this.MultiDefault = this.dataService.getPeople();\n    this.MultiSmall = this.dataService.getPeople();\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Select',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Select',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { SelectComponent } from 'app/main/forms/form-elements/select/select.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/select',\n    component: SelectComponent,\n    data: { animation: 'select' }\n  }\n];\n\n@NgModule({\n  declarations: [SelectComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    NgSelectModule\n  ]\n})\nexport class SelectModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/switch/switch.snippetcode';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html'\n})\nexport class SwitchComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeColors = snippet.snippetCodeColors;\n  public _snippetCodeIcons = snippet.snippetCodeIcons;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Switch',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Switch',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Switches Starts -->\n    <section id=\"basic-switches\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic Switch</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">use class <code>.switch-label</code> to add a label to switch.</p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-switch custom-control-inline\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch1\">Toggle this switch element</label>\n                </div>\n                <div class=\"custom-control custom-switch custom-control-inline\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch2\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch2\">Disabled switch element</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Switches Ends -->\n\n    <!-- Switch Colors Starts -->\n    <section id=\"switch-colors\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeColors\">\n            <h4 class=\"card-title\">Colors</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Use class <code>.custom-control-&#123;$color-name&#125;</code> with <code>.custom-switch</code> to\n                change switch's color\n              </p>\n              <!-- <div class=\"d-flex justify-content-start flex-wrap\"> -->\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-switch\">\n                  <p class=\"mb-50\">Primary</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch3\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch3\"></label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-switch\">\n                  <p class=\"mb-50\">Secondary</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch44\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch44\"></label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-switch\">\n                  <p class=\"mb-50\">Success</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch4\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch4\"></label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-switch\">\n                  <p class=\"mb-50\">Danger</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch5\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch5\"></label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-switch\">\n                  <p class=\"mb-50\">Warning</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch7\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch7\"></label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-switch\">\n                  <p class=\"mb-50\">Info</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch6\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch6\"></label>\n                </div>\n                <div class=\"custom-control custom-control-dark custom-switch\">\n                  <p class=\"mb-50\">Dark</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch8\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch8\"></label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Switch Colors Ends -->\n\n    <!-- Switch Icons Starts -->\n    <section id=\"switch-icons\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeIcons\">\n            <h4 class=\"card-title\">Icons</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Use class <code>.switch-icon-left & .switch-icon-right</code> inside of\n                <code>.custom-control-label</code> to create a switch with icon.\n              </p>\n              <!-- <div class=\"d-flex justify-content-start flex-wrap\"> -->\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-switch\">\n                  <p class=\"mb-50\">Primary</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch10\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch10\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-secondary\">\n                  <p class=\"mb-50\">Secondary</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch11\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch11\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-success\">\n                  <p class=\"mb-50\">Success</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch111\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch111\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-danger\">\n                  <p class=\"mb-50\">Danger</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch12\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch12\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-warning\">\n                  <p class=\"mb-50\">Warning</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch14\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch14\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-info\">\n                  <p class=\"mb-50\">Info</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch13\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch13\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-dark\">\n                  <p class=\"mb-50\">Dark</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch15\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch15\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Switch Icons Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { SwitchComponent } from 'app/main/forms/form-elements/switch/switch.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/switch',\n    component: SwitchComponent,\n    data: { animation: 'switch' }\n  }\n];\n\n@NgModule({\n  declarations: [SwitchComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreCommonModule\n  ]\n})\nexport class SwitchModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-switch custom-control-inline\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" />\n    <label class=\"custom-control-label\" for=\"customSwitch1\">Toggle this switch element</label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-control-inline\">\n    <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch2\" />\n    <label class=\"custom-control-label\" for=\"customSwitch2\">Disabled switch element</label>\n  </div>\n  `\n};\nexport const snippetCodeColors: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-control-primary custom-switch\">\n    <p class=\"mb-50\">Primary</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch3\" />\n    <label class=\"custom-control-label\" for=\"customSwitch3\"></label>\n  </div>\n  \n  <div class=\"custom-control custom-control-secondary custom-switch\">\n    <p class=\"mb-50\">Secondary</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch44\" />\n    <label class=\"custom-control-label\" for=\"customSwitch44\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-success custom-switch\">\n    <p class=\"mb-50\">Success</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch4\" />\n    <label class=\"custom-control-label\" for=\"customSwitch4\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-danger custom-switch\">\n    <p class=\"mb-50\">Danger</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch5\" />\n    <label class=\"custom-control-label\" for=\"customSwitch5\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-warning custom-switch\">\n    <p class=\"mb-50\">Warning</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch7\" />\n    <label class=\"custom-control-label\" for=\"customSwitch7\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-info custom-switch\">\n    <p class=\"mb-50\">Info</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch6\" />\n    <label class=\"custom-control-label\" for=\"customSwitch6\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-dark custom-switch\">\n    <p class=\"mb-50\">Dark</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch8\" />\n    <label class=\"custom-control-label\" for=\"customSwitch8\"></label>\n  </div>\n\n  `\n};\nexport const snippetCodeIcons: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-switch\">\n    <p class=\"mb-50\">Primary</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch10\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch10\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-secondary\">\n    <p class=\"mb-50\">Secondary</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch11\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch11\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-success\">\n    <p class=\"mb-50\">Success</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch111\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch111\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-danger\">\n    <p class=\"mb-50\">Danger</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch12\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch12\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-warning\">\n  <p class=\"mb-50\">Warning</p>\n  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch14\" checked />\n  <label class=\"custom-control-label\" for=\"customSwitch14\">\n    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n  </label>\n</div>\n\n  <div class=\"custom-control custom-switch custom-switch-info\">\n    <p class=\"mb-50\">Info</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch13\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch13\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-dark\">\n    <p class=\"mb-50\">Dark</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch15\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch15\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n  `\n};\n","import { Component, OnInit } from '@angular/core';\nimport * as snippet from 'app/main/forms/form-elements/textarea/textarea.snippetcode';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html'\n})\nexport class TextareaComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeDefault = snippet.snippetCodeDefault;\n  public _snippetCodeFloating = snippet.snippetCodeFloating;\n  public _snippetCodeCounter = snippet.snippetCodeCounter;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Textarea',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Textarea',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Textarea start -->\n    <section class=\"basic-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDefault\">\n            <h4 class=\"card-title\">Default</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">To add a Textarea we have the component <code>textarea</code>.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <label for=\"basicTextarea\">Textarea</label>\n                  <fieldset class=\"form-group\">\n                    <textarea class=\"form-control\" id=\"basicTextarea\" rows=\"3\" placeholder=\"Textarea\"></textarea>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Textarea end -->\n\n    <!-- Floating Label Textarea start -->\n    <section class=\"floating-label-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFloating\">\n            <h4 class=\"card-title\">Floating Label</h4>\n            <div class=\"card-body\">\n              <p class=\"mb-2\">Use <code>.form-label-group</code> to add a Floating Label with Textarea.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <fieldset class=\"form-label-group\">\n                    <textarea\n                      class=\"form-control\"\n                      id=\"label-textarea\"\n                      rows=\"3\"\n                      placeholder=\"Label in Textarea\"\n                    ></textarea>\n                    <label for=\"label-textarea\">Label in Textarea</label>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Floating Label Textarea end -->\n\n    <!-- Counter Textarea start -->\n    <section class=\"counter-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCounter\">\n            <h4 class=\"card-title\">Counter</h4>\n            <div class=\"card-body\">\n              <p class=\"mb-2\">\n                There are times when we need the user to only enter a certain number of characters for it, we have the\n                property counter, the value is a number and determines the maximum. Use\n                <code>[maxlength]</code> property with <code>&lt;textarea&gt;</code>tag for limiting text input length.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <fieldset class=\"form-label-group mb-0\">\n                    <textarea\n                      [(ngModel)]=\"textLength.value\"\n                      #textLength\n                      [maxlength]=\"20\"\n                      class=\"form-control char-textarea\"\n                      id=\"textarea-counter\"\n                      rows=\"3\"\n                      placeholder=\"Counter\"\n                    ></textarea>\n                    <label for=\"textarea-counter\">Counter</label>\n                  </fieldset>\n                  <small class=\"textarea-counter-value float-right\"\n                    ><span *ngIf=\"textLength\" class=\"char-count\">{{ textLength.value.length }}</span>\n                    <span *ngIf=\"!textLength\" class=\"char-count\">0 </span> / 20\n                  </small>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Counter Textarea end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TextareaComponent } from 'app/main/forms/form-elements/textarea/textarea.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/textarea',\n    component: TextareaComponent,\n    data: { animation: 'textarea' }\n  }\n];\n\n@NgModule({\n  declarations: [TextareaComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class TextareaModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeDefault: snippetCode = {\n  html: `\n  <label for=\"basicTextarea\">Textarea</label>\n  <fieldset class=\"form-group\">\n    <textarea class=\"form-control\" id=\"basicTextarea\" rows=\"3\" placeholder=\"Textarea\"></textarea>\n  </fieldset>\n  `\n};\nexport const snippetCodeFloating: snippetCode = {\n  html: `\n  <fieldset class=\"form-label-group\">\n    <textarea class=\"form-control\" id=\"label-textarea\" rows=\"3\" placeholder=\"Label in Textarea\"></textarea>\n    <label for=\"label-textarea\">Label in Textarea</label>\n  </fieldset>\n  `\n};\nexport const snippetCodeCounter: snippetCode = {\n  html: `\n  <fieldset class=\"form-label-group mb-0\">\n      <textarea [(ngModel)]=\"textLength.value\" #textLength [maxlength]=\"20\"  class=\"form-control char-textarea\" id=\"textarea-counter\" rows=\"3\" placeholder=\"Counter\"></textarea>\n      <label for=\"textarea-counter\">Counter</label>\n  </fieldset>\n  <small class=\"textarea-counter-value float-right\"\n    ><span *ngIf=\"textLength\" class=\"char-count\">{{ textLength.value.length }}</span>\n    <span *ngIf=\"!textLength\" class=\"char-count\">0 </span> / 20\n  </small>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-layout/form-layout.snippetcode';\n\n@Component({\n  selector: 'app-form-layout',\n  templateUrl: './form-layout.component.html'\n})\nexport class FormLayoutComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeHorizontal = snippet.snippetCodeHorizontal;\n  public _snippetCodeIcons = snippet.snippetCodeIcons;\n  public _snippetCodeVertical = snippet.snippetCodeVertical;\n  public _snippetCodeVertiacalIcons = snippet.snippetCodeVertiacalIcons;\n  public _snippetCodeMultiple = snippet.snippetCodeMultiple;\n\n  constructor() {}\n\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Layouts',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Layouts',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Horizontal form layout section start -->\n    <section id=\"basic-horizontal-layouts\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeHorizontal\">\n            <h4 class=\"card-title\">Horizontal Form</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-horizontal\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"first-name\">First Name</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"email-id\">Email</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input type=\"email\" id=\"email-id\" class=\"form-control\" name=\"email-id\" placeholder=\"Email\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"contact-info\">Mobile</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input\n                          type=\"number\"\n                          id=\"contact-info\"\n                          class=\"form-control\"\n                          name=\"contact\"\n                          placeholder=\"Mobile\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"password\">Password</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input\n                          type=\"password\"\n                          id=\"password\"\n                          class=\"form-control\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" />\n                        <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeIcons\">\n            <h4 class=\"card-title\">Horizontal Form with Icons</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-horizontal\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"fname-icon\">First Name</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n                          </div>\n                          <input\n                            type=\"text\"\n                            id=\"fname-icon\"\n                            class=\"form-control\"\n                            name=\"fname-icon\"\n                            placeholder=\"First Name\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"email-icon\">Email</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n                          </div>\n                          <input\n                            type=\"email\"\n                            id=\"email-icon\"\n                            class=\"form-control\"\n                            name=\"email-id-icon\"\n                            placeholder=\"Email\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"contact-icon\">Mobile</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n                          </div>\n                          <input\n                            type=\"number\"\n                            id=\"contact-icon\"\n                            class=\"form-control\"\n                            name=\"contact-icon\"\n                            placeholder=\"Mobile\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"pass-icon\">Password</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n                          </div>\n                          <input\n                            type=\"password\"\n                            id=\"pass-icon\"\n                            class=\"form-control\"\n                            name=\"contact-icon\"\n                            placeholder=\"Password\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n                        <label class=\"custom-control-label\" for=\"customCheck2\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- / Basic Horizontal form layout section end -->\n\n    <!-- Basic Vertical form layout section start -->\n    <section id=\"basic-vertical-layouts\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeVertical\">\n            <h4 class=\"card-title\">Vertical Form</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-vertical\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-vertical\">First Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"first-name-vertical\"\n                        class=\"form-control\"\n                        name=\"fname\"\n                        placeholder=\"First Name\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-vertical\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email-id-vertical\"\n                        class=\"form-control\"\n                        name=\"email-id\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"contact-info-vertical\">Mobile</label>\n                      <input\n                        type=\"number\"\n                        id=\"contact-info-vertical\"\n                        class=\"form-control\"\n                        name=\"contact\"\n                        placeholder=\"Mobile\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"password-vertical\">Password</label>\n                      <input\n                        type=\"password\"\n                        id=\"password-vertical\"\n                        class=\"form-control\"\n                        name=\"contact\"\n                        placeholder=\"Password\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" />\n                        <label class=\"custom-control-label\" for=\"customCheck3\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeVertiacalIcons\">\n            <h4 class=\"card-title\">Vertical Form with Icons</h4>\n            <div class=\"card-body\">\n              <form class=\"form form-vertical\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-icon\">First Name</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n                        </div>\n                        <input\n                          type=\"text\"\n                          id=\"first-name-icon\"\n                          class=\"form-control\"\n                          name=\"fname-icon\"\n                          placeholder=\"First Name\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-icon\">Email</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n                        </div>\n                        <input\n                          type=\"email\"\n                          id=\"email-id-icon\"\n                          class=\"form-control\"\n                          name=\"email-id-icon\"\n                          placeholder=\"Email\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"contact-info-icon\">Mobile</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          id=\"contact-info-icon\"\n                          class=\"form-control\"\n                          name=\"contact-icon\"\n                          placeholder=\"Mobile\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"password-icon\">Password</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n                        </div>\n                        <input\n                          type=\"password\"\n                          id=\"password-icon\"\n                          class=\"form-control\"\n                          name=\"contact-icon\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" />\n                        <label class=\"custom-control-label\" for=\"customCheck4\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- / Basic Vertical form layout section end -->\n\n    <!-- / Basic multiple Column Form section start -->\n    <section id=\"multiple-column-form\">\n      <div class=\"row match-height\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMultiple\">\n            <h4 class=\"card-title\">Multiple Column</h4>\n            <div class=\"card-body\">\n              <form class=\"form\">\n                <div class=\"row\">\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-column\">First Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"first-name-column\"\n                        class=\"form-control\"\n                        placeholder=\"First Name\"\n                        name=\"fname-column\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"last-name-column\">Last Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"last-name-column\"\n                        class=\"form-control\"\n                        placeholder=\"Last Name\"\n                        name=\"lname-column\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"city-column\">City</label>\n                      <input type=\"text\" id=\"city-column\" class=\"form-control\" placeholder=\"City\" name=\"city-column\" />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"country-floating\">Country</label>\n                      <input\n                        type=\"text\"\n                        id=\"country-floating\"\n                        class=\"form-control\"\n                        name=\"country-floating\"\n                        placeholder=\"Country\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"company-column\">Company</label>\n                      <input\n                        type=\"text\"\n                        id=\"company-column\"\n                        class=\"form-control\"\n                        name=\"company-column\"\n                        placeholder=\"Company\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-column\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email-id-column\"\n                        class=\"form-control\"\n                        name=\"email-id-column\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic multiple Column Form section end -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FormLayoutComponent } from 'app/main/forms/form-layout/form-layout.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-layout',\n    component: FormLayoutComponent,\n    data: { animation: 'layout' }\n  }\n];\n\n@NgModule({\n  declarations: [FormLayoutComponent],\n  imports: [RouterModule.forChild(routes), ContentHeaderModule, CardSnippetModule, FormsModule, CoreCommonModule]\n})\nexport class FormLayoutModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeHorizontal: snippetCode = {\n  html: `\n<form class=\"form form-horizontal\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>First Name</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Email</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input type=\"email\" id=\"email-id\" class=\"form-control\" name=\"email-id\" placeholder=\"Email\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Mobile</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input\n            type=\"number\"\n            id=\"contact-info\"\n            class=\"form-control\"\n            name=\"contact\"\n            placeholder=\"Mobile\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Password</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" />\n          <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeIcons: snippetCode = {\n  html: `\n<form class=\"form form-horizontal\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>First Name</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"fname-icon\"\n              class=\"form-control\"\n              name=\"fname-icon\"\n              placeholder=\"First Name\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Email</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n            </div>\n            <input\n              type=\"email\"\n              id=\"email-icon\"\n              class=\"form-control\"\n              name=\"email-id-icon\"\n              placeholder=\"Email\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Mobile</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"contact-icon\"\n              class=\"form-control\"\n              name=\"contact-icon\"\n              placeholder=\"Mobile\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Password</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n            </div>\n            <input\n              type=\"password\"\n              id=\"pass-icon\"\n              class=\"form-control\"\n              name=\"contact-icon\"\n              placeholder=\"Password\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n          <label class=\"custom-control-label\" for=\"customCheck2\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeVertical: snippetCode = {\n  html: `\n<form class=\"form form-vertical\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-vertical\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"first-name-vertical\"\n          class=\"form-control\"\n          name=\"fname\"\n          placeholder=\"First Name\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-vertical\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email-id-vertical\"\n          class=\"form-control\"\n          name=\"email-id\"\n          placeholder=\"Email\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"contact-info-vertical\">Mobile</label>\n        <input\n          type=\"number\"\n          id=\"contact-info-vertical\"\n          class=\"form-control\"\n          name=\"contact\"\n          placeholder=\"Mobile\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"password-vertical\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password-vertical\"\n          class=\"form-control\"\n          name=\"contact\"\n          placeholder=\"Password\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" />\n          <label class=\"custom-control-label\" for=\"customCheck3\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeVertiacalIcons: snippetCode = {\n  html: `\n<form class=\"form form-vertical\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-icon\">First Name</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n          </div>\n          <input\n            type=\"text\"\n            id=\"first-name-icon\"\n            class=\"form-control\"\n            name=\"fname-icon\"\n            placeholder=\"First Name\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-icon\">Email</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n          </div>\n          <input\n            type=\"email\"\n            id=\"email-id-icon\"\n            class=\"form-control\"\n            name=\"email-id-icon\"\n            placeholder=\"Email\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"contact-info-icon\">Mobile</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n          </div>\n          <input\n            type=\"number\"\n            id=\"contact-info-icon\"\n            class=\"form-control\"\n            name=\"contact-icon\"\n            placeholder=\"Mobile\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"password-icon\">Password</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n          </div>\n          <input\n            type=\"password\"\n            id=\"password-icon\"\n            class=\"form-control\"\n            name=\"contact-icon\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" />\n          <label class=\"custom-control-label\" for=\"customCheck4\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\nexport const snippetCodeMultiple: snippetCode = {\n  html: `\n<form class=\"form\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-column\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"first-name-column\"\n          class=\"form-control\"\n          placeholder=\"First Name\"\n          name=\"fname-column\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"last-name-column\">Last Name</label>\n        <input\n          type=\"text\"\n          id=\"last-name-column\"\n          class=\"form-control\"\n          placeholder=\"Last Name\"\n          name=\"lname-column\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"city-column\">City</label>\n        <input type=\"text\" id=\"city-column\" class=\"form-control\" placeholder=\"City\" name=\"city-column\" />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"country-floating\">Country</label>\n        <input\n          type=\"text\"\n          id=\"country-floating\"\n          class=\"form-control\"\n          name=\"country-floating\"\n          placeholder=\"Country\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"company-column\">Company</label>\n        <input\n          type=\"text\"\n          id=\"company-column\"\n          class=\"form-control\"\n          name=\"company-column\"\n          placeholder=\"Company\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-column\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email-id-column\"\n          class=\"form-control\"\n          name=\"email-id-column\"\n          placeholder=\"Email\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport const repeaterAnimation = trigger('heightIn', [\n  transition(':enter', [\n    style({ opacity: '0', height: '0px' }),\n    animate('.2s ease-out', style({ opacity: '1', height: '*' }))\n  ])\n]);\n","import { Component, OnInit } from '@angular/core';\n\nimport { repeaterAnimation } from 'app/main/forms/form-repeater/form-repeater.animation';\n\nimport * as snippet from 'app/main/forms/form-repeater/form-repeater.snippetcode';\n\n@Component({\n  selector: 'app-form-repeater',\n  templateUrl: './form-repeater.component.html',\n  animations: [repeaterAnimation]\n})\nexport class FormRepeaterComponent implements OnInit {\n  // public\n  public items = [{ itemId: '', itemName: '', itemQuantity: '', itemCost: '' }];\n\n  public item = {\n    itemName: '',\n    itemQuantity: '',\n    itemCost: ''\n  };\n\n  // snippet code variable\n  public _snippetCodeInvoiceRepeater = snippet.snippetCodeInvoiceRepeater;\n\n  constructor() {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '',\n      itemName: '',\n      itemQuantity: '',\n      itemCost: ''\n    });\n  }\n\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<section class=\"form-control-repeater\">\n  <div class=\"row\">\n    <!-- Invoice repeater -->\n    <div class=\"col-12\">\n      <core-card-snippet [snippetCode]=\"_snippetCodeInvoiceRepeater\">\n        <h4 class=\"card-title\">Invoice</h4>\n        <div class=\"card-body\">\n          <form action=\"#\" class=\"invoice-repeater\">\n            <div *ngFor=\"let item of items; let i = index\" @heightIn>\n              <div class=\"row d-flex align-items-end\">\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"itemName{{ i }}\">Item Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      [(ngModel)]=\"item.itemName\"\n                      name=\"itemName{{ i }}\"\n                      id=\"itemName{{ i }}\"\n                      placeholder=\"KYG Admin Template\"\n                    />\n                  </div>\n                </div>\n\n                <div class=\"col-md-2 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"itemCost\">Cost</label>\n                    <input\n                      type=\"number\"\n                      class=\"form-control\"\n                      id=\"itemcost\"\n                      [(ngModel)]=\"item.itemCost\"\n                      name=\"itemCost{{ i }}\"\n                      id=\"itemCost{{ i }}\"\n                      placeholder=\"32\"\n                    />\n                  </div>\n                </div>\n\n                <div class=\"col-md-2 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"itemQuantity{{ i }}\">Quantity</label>\n                    <input\n                      type=\"number\"\n                      class=\"form-control\"\n                      id=\"itemQuantity{{ i }}\"\n                      name=\"itemQuantity{{ i }}\"\n                      [(ngModel)]=\"item.itemQuantity\"\n                      placeholder=\"1\"\n                    />\n                  </div>\n                </div>\n\n                <div class=\"col-md-2 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"staticPrice\">Price</label>\n                    <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\" value=\"$32\" />\n                  </div>\n                </div>\n\n                <div class=\"col-md-2 col-12 mb-50\">\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-outline-danger text-nowrap px-1\" (click)=\"deleteItem(i)\" rippleEffect>\n                      <i data-feather=\"x\" class=\"mr-25\"></i>\n                      <span>Delete</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <hr />\n            </div>\n          </form>\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <button class=\"btn btn-icon btn-primary\" type=\"button\" (click)=\"addItem()\" rippleEffect>\n                <i data-feather=\"plus\" class=\"mr-25\"></i>\n                <span>Add New</span>\n              </button>\n            </div>\n          </div>\n          <pre class=\"p-1 text-white mt-1\">\n            <div  *ngFor=\"let item of items; let i = index\">\nIndex: {{ i }}\nItem Name: {{ item.itemName }}\nCost: {{ item.itemCost }}\nQuantity: {{ item.itemQuantity }}</div>\n          </pre>\n        </div>\n      </core-card-snippet>\n    </div>\n    <!--/ Invoice repeater -->\n  </div>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { FormRepeaterComponent } from 'app/main/forms/form-repeater/form-repeater.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-repeater',\n    component: FormRepeaterComponent,\n    data: { animation: 'repeater' }\n  }\n];\n\n@NgModule({\n  declarations: [FormRepeaterComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), CardSnippetModule, FormsModule, CoreCommonModule]\n})\nexport class FormRepeaterModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeInvoiceRepeater: snippetCode = {\n  html: `\n  <form action=\"#\" class=\"invoice-repeater\">\n  <div *ngFor=\"let item of items; let i = index\" @heightIn>\n    <div class=\"row d-flex align-items-end\">\n      <div class=\"col-md-4 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemName{{ i }}\">Item Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            [(ngModel)]=\"item.itemName\"\n            name=\"itemName{{ i }}\"\n            id=\"itemName{{ i }}\"\n            placeholder=\"KYG Admin Template\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemCost\">Cost</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"itemcost\"\n            [(ngModel)]=\"item.itemCost\"\n            name=\"itemCost{{ i }}\"\n            id=\"itemCost{{ i }}\"\n            placeholder=\"32\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemQuantity{{ i }}\">Quantity</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"itemQuantity{{ i }}\"\n            name=\"itemQuantity{{ i }}\"\n            [(ngModel)]=\"item.itemQuantity\"\n            placeholder=\"1\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"staticPrice\">Price</label>\n          <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\" value=\"$32\" />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12 mb-50\">\n        <div class=\"form-group\">\n          <button class=\"btn btn-outline-danger text-nowrap px-1\" (click)=\"deleteItem(i)\" rippleEffect>\n            <i data-feather=\"x\" class=\"mr-25\"></i>\n            <span>Delete</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <hr />\n  </div>\n</form>\n<div class=\"row\">\n  <div class=\"col-12\">\n    <button class=\"btn btn-icon btn-primary\" type=\"button\" (click)=\"addItem()\" rippleEffect>\n      <i data-feather=\"plus\" class=\"mr-25\"></i>\n      <span>Add New</span>\n    </button>\n  </div>\n</div>\n<pre class=\"p-1 text-white mt-1\">\n  <div  *ngFor=\"let item of items; let i = index\">\nIndex: {{ i }}\nItem Name: {{ item.itemName }}\nCost: {{ item.itemCost }}\nQuantity: {{ item.itemQuantity }}</div>\n</pre>\n`,\n  ts: `\n  // public\n  public items = [{ itemId: '', itemName: '', itemQuantity: '', itemCost: '' }];\n\n  public item = {\n    itemName: '',\n    itemQuantity: '',\n    itemCost: ''\n  };\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '',\n      itemName: '',\n      itemQuantity: '',\n      itemCost: ''\n    });\n  }\n\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n`\n};\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport * as snippet from 'app/main/forms/form-validation/form-validation.snippetcode';\nimport { MustMatch } from './_helpers/must-match.validator';\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html'\n})\nexport class FormValidationComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeTDsimpleValidation = snippet.snippetCodeTDsimpleValidation;\n  public _snippetCodeTDMultiRuleValidation = snippet.snippetCodeTDMultiRuleValidation;\n  public _snippetCodeInputValidation = snippet.snippetCodeInputValidation;\n  public _snippetCodeReactiveForms = snippet.snippetCodeReactiveForms;\n\n  public TDNameVar;\n  public TDEmailVar;\n\n  public ReactiveUserDetailsForm: FormGroup;\n  public ReactiveUDFormSubmitted = false;\n\n  // Reactive User Details form data\n  public UDForm = {\n    userName: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confPassword: '',\n    age: '',\n    phoneNumber: ''\n  };\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  // getter for easy access to form fields\n  get ReactiveUDForm() {\n    return this.ReactiveUserDetailsForm.controls;\n  }\n\n  ReactiveUDFormOnSubmit() {\n    this.ReactiveUDFormSubmitted = true;\n\n    // stop here if form is invalid\n    if (this.ReactiveUserDetailsForm.invalid) {\n      return;\n    }\n    console.log(this.ReactiveUserDetailsForm.value);\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.ReactiveUserDetailsForm.value));\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Validation',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Validation',\n            isLink: false\n          }\n        ]\n      }\n    };\n\n    // Reactive form initialization\n    this.ReactiveUserDetailsForm = this.formBuilder.group(\n      {\n        userName: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confPassword: ['', [Validators.required, Validators.minLength(6)]],\n        country: ['', [Validators.required]],\n        language: ['', [Validators.required]],\n        age: ['', [Validators.required]],\n        phoneNumber: ['', [Validators.required]]\n      },\n      {\n        validator: MustMatch('password', 'confPassword')\n      }\n    );\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <div class=\"row\">\n      <div class=\"col-12 mt-1 mb-1\">\n        <h4 class=\"text-uppercase\">Template Driven Form Validation</h4>\n        <p>\n          Template driven forms are forms where we write\n          <strong>logic, validations, controls etc, in html code</strong>. Template driven forms are suitable for simple\n          scenarios, uses two way data binding using the <code>[(NgModel)]</code> syntax.\n        </p>\n      </div>\n    </div>\n    <!-- Template Driven Simple Validation -->\n    <section id=\"simple-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTDsimpleValidation\">\n            <h4 class=\"card-title\">Simple Form Validation</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDSimpleForm.form.valid)\" #TDSimpleForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDName\">Name</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDSimpleForm.submitted && TDNameRef.invalid\"\n                        [(ngModel)]=\"TDNameVar\"\n                        #TDNameRef=\"ngModel\"\n                        required\n                        id=\"TDName\"\n                        name=\"TDName\"\n                        type=\"text\"\n                        placeholder=\"Name\"\n                      />\n                      <span *ngIf=\"TDSimpleForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\"\n                          >This field is required!</small\n                        >\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDEmail\">Email</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDSimpleForm.submitted && TDEmailRef.invalid\"\n                        [(ngModel)]=\"TDEmailVar\"\n                        #TDEmailRef=\"ngModel\"\n                        required\n                        email\n                        id=\"TDEmail\"\n                        name=\"TDEmail\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                      />\n                      <span *ngIf=\"TDSimpleForm.submitted && TDEmailRef.invalid\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"!TDEmailRef.valid\">email must be valid!</small>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n              </form>\n\n              <pre class=\"p-1 text-white mt-1\">\nUsername: {{ TDNameVar }}\n\nEmail: {{ TDEmailVar }}\n            </pre\n              >\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Simple Validation -->\n    <!-- Template Driven Multiple Rules Validation -->\n    <section id=\"multiple-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTDMultiRuleValidation\">\n            <h4 class=\"card-title\">Validating Multiple Rules</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDMultiRuleForm.form.valid)\" #TDMultiRuleForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleName\">Name</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\"\n                        ngModel\n                        #TDMultiRuleNameRef=\"ngModel\"\n                        required\n                        id=\"TDMultiRuleName\"\n                        name=\"TDMultiRuleName\"\n                        type=\"text\"\n                        placeholder=\"Your Name\"\n                      />\n                      <span *ngIf=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"TDMultiRuleNameRef.errors.required\"\n                          >This field is required!</small\n                        >\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\"\n                        ngModel\n                        #TDMultiRuleEmailRef=\"ngModel\"\n                        required\n                        email\n                        id=\"TDMultiRuleEmail\"\n                        name=\"TDMultiRuleEmail\"\n                        type=\"text\"\n                        placeholder=\"Your Email\"\n                      />\n                      <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\">email must be valid!</small>\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRulePassword\">Password</label>\n                      <input\n                        type=\"password\"\n                        name=\"TDMultiRulePassword\"\n                        class=\"form-control\"\n                        [class.error]=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n                        placeholder=\"Your Password\"\n                        ngModel\n                        #TDMultiRulePasswordRef=\"ngModel\"\n                        required\n                        minlength=\"6\"\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                        id=\"TDMultiRulePassword\"\n                      />\n                      <div\n                        *ngIf=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDMultiRulePasswordRef.errors.required\"> Password is required. </small>\n                        <small *ngIf=\"TDMultiRulePasswordRef.errors.pattern\">\n                          Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n                          more characters.</small\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleConfPassword\">Confirm Password</label>\n                      <input\n                        type=\"password\"\n                        class=\"form-control\"\n                        [class.error]=\"TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n                        placeholder=\"Confirm Password\"\n                        minlength=\"6\"\n                        name=\"TDMultiRuleConfPassword\"\n                        placeholder=\"Confirm Password\"\n                        class=\"form-control\"\n                        required\n                        ngModel\n                        #TDMultiRuleConfPasswordRef=\"ngModel\"\n                        pattern=\"{{ TDMultiRulePasswordRef.value }}\"\n                        id=\"TDMultiRuleConfPassword\"\n                      />\n                      <div\n                        *ngIf=\"TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.required\">\n                          Confirm password is required.\n                        </small>\n                        <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.pattern\">\n                          Password & Confirm Password does not match.</small\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" [disabled]=\"!TDMultiRuleForm.form.valid\" class=\"btn btn-primary\" rippleEffect>\n                  Submit\n                </button>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Multiple Rules Validation -->\n    <!-- Template Driven Input Validation -->\n    <section class=\"input-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInputValidation\">\n            <h4 class=\"card-title\">Inputs Validation</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDValidationForm.form.valid)\" #TDValidationForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRequiredField\">This field is required</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDRequiredFieldRef=\"ngModel\"\n                        required\n                        id=\"TDRequiredField\"\n                        name=\"TDRequiredField\"\n                        type=\"text\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n                        >This field is required!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumberOnly\">Must only consist of numbers</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDNumberOnlyRef=\"ngModel\"\n                        required\n                        pattern=\"[0-9]+\"\n                        id=\"TDNumberOnly\"\n                        name=\"TDNumberOnly\"\n                        type=\"text\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n                        >The numeric field may only contain numeric characters.</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDAlphabetOnly\">Only alphabetic characters</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDAlphabetOnlyRef=\"ngModel\"\n                        required\n                        pattern=\"[a-zA-Z]+$\"\n                        id=\"TDAlphabetOnly\"\n                        name=\"TDAlphabetOnly\"\n                        type=\"text\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n                        >The alphabetic field may only contain alphabet characters.</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDPasswordOnly\">Password Input Field</label>\n                      <input\n                        type=\"password\"\n                        name=\"TDPasswordOnly\"\n                        class=\"form-control\"\n                        [class.error]=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n                        id=\"TDPasswordOnly\"\n                        placeholder=\"Your Password\"\n                        ngModel\n                        #TDPasswordOnlyRef=\"ngModel\"\n                        required\n                        minlength=\"6\"\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                      />\n                      <div\n                        *ngIf=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> password is required. </small>\n                        <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n                          Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n                          more characters.</small\n                        >\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRepeatPassword\">Repeat password must match</label>\n                      <input\n                        type=\"password\"\n                        id=\"TDRepeatPassword\"\n                        class=\"form-control\"\n                        [class.error]=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n                        placeholder=\"Confirm Password\"\n                        minlength=\"6\"\n                        name=\"TDRepeatPassword\"\n                        placeholder=\"Confirm Password\"\n                        required\n                        ngModel\n                        #TDRepeatPasswordRef=\"ngModel\"\n                        pattern=\"{{ TDPasswordOnlyRef.value }}\"\n                      />\n                      <div\n                        *ngIf=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n                        <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n                          Password & Confirm Password does not match.</small\n                        >\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDValidEmail\">Must be a valid email</label>\n                      <input\n                        type=\"email\"\n                        id=\"TDValidEmail\"\n                        name=\"TDValidEmail\"\n                        class=\"form-control\"\n                        [class.error]=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        required\n                        #TDValidEmailRef=\"ngModel\"\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        placeholder=\"Email\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n                        >Must be a valid email!</small\n                      >\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumBtwTenTwenty\">Enter Number between 10 & 20</label>\n                      <input\n                        type=\"text\"\n                        name=\"TDNumBtwTenTwenty\"\n                        id=\"TDNumBtwTenTwenty\"\n                        class=\"form-control\"\n                        [class.error]=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"\\b([1][0-9]|2[0])\\b\"\n                        min=\"10\"\n                        max=\"20\"\n                        required\n                        placeholder=\"Enter Number between 10 & 20\"\n                        ngModel\n                        #TDNumBtwTenTwentyRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n                        >Enter Number between 10 & 20!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRegex\"\n                        >Must match the specified regular expression : ^([0-9]+)$ - numbers only</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDRegex\"\n                        class=\"form-control\"\n                        [class.error]=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^([0-9]+)$\"\n                        id=\"TDRegex\"\n                        placeholder=\"Enter specified regular expression\"\n                        required\n                        ngModel\n                        #TDRegexRef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n                        >The regex field format is invalid!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDLengthLessThree\"\n                        >Length should not be less than the specified length : 3</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDLengthLessThree\"\n                        id=\"TDLengthLessThree\"\n                        class=\"form-control\"\n                        [class.error]=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n                        minlength=\"3\"\n                        placeholder=\"Enter minimum 3 characters\"\n                        ngModel\n                        required\n                        #TDLengthLessThreeRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n                        >The min field must be at least 3 characters!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumThreeDigit\"\n                        >The digits field must be numeric and exactly contain 3 digits</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDNumThreeDigit\"\n                        id=\"TDNumThreeDigit\"\n                        class=\"form-control\"\n                        [class.error]=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"[1-9][0-9]{0,2}\"\n                        maxlength=\"3\"\n                        minlength=\"3\"\n                        placeholder=\"Enter Exactly 3 digits\"\n                        ngModel\n                        required\n                        #TDNumThreeDigitRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n                        >The digits field must be numeric and exactly contain 3 digits!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDCharNumDU\"\n                        >Only alphabetic characters, numbers, dashes or underscores</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDCharNumDU\"\n                        id=\"TDCharNumDU\"\n                        class=\"form-control\"\n                        [class.error]=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^[-a-zA-Z_\\d]+$\"\n                        placeholder=\"Enter Character, Numbers, Dash, Uderscore\"\n                        required\n                        ngModel\n                        #TDCharNumDURef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n                        >Must Enter Character, Number, Dash or Uderscore!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDUrl\">Must be a valid url</label>\n                      <input\n                        type=\"text\"\n                        name=\"TDUrl\"\n                        id=\"TDUrl\"\n                        class=\"form-control\"\n                        [class.error]=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^(http(s)?:\\/\\/)?(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n                        placeholder=\"Enter valid url\"\n                        required\n                        ngModel\n                        #TDUrlRef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n                        >Must be a valid url!</small\n                      >\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Input Validation -->\n    <section id=\"reactive-forms\">\n      <div class=\"row\">\n        <div class=\"col-12 mt-1 mb-1\">\n          <h4 class=\"text-uppercase\">Reactive Form Validation</h4>\n          <p>\n            Reactive forms provide a model-driven approach to handling form inputs whose values change over time.\n            Validate form values, and create dynamic forms where you can add or remove controls at run time.\n          </p>\n          <p>\n            Reactive forms are more robust: they’re more scalable, reusable, and testable. If forms are a key part of\n            your application, use reactive forms\n          </p>\n        </div>\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeReactiveForms\">\n            <h4 class=\"card-title\">User Details Form with Validation</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <form [formGroup]=\"ReactiveUserDetailsForm\" (ngSubmit)=\"ReactiveUDFormOnSubmit()\">\n                    <h6 class=\"mb-2\">1. Account Details</h6>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDUserName\">Username</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDUserName\"\n                            formControlName=\"userName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.userName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.userName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.userName.errors.required\">Username is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDEmail\">Email</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDEmail\"\n                            formControlName=\"email\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.email.errors }\"\n                          />\n                          <div *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ReactiveUDForm.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"ReactiveUDForm.email.errors.email\">Email must be a valid email address</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDPassword\">Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"UDPassword\"\n                            formControlName=\"password\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.password.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.password.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"ReactiveUDForm.password.errors.minlength\">\n                              Password must be at least 6 characters\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDConfPassword\">Confirm Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"UDConfPassword\"\n                            formControlName=\"confPassword\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.confPassword.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.confPassword.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.required\">Confirm Password is required</div>\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.minlength\">\n                              Confirm Password must be at least 6 characters\n                            </div>\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.mustMatch\">Passwords must match</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <h6 class=\"mb-2\">2. Personal Info</h6>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDFirstName\">First Name</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDFirstName\"\n                            formControlName=\"firstName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.firstName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.firstName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.firstName.errors.required\">First Name is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDLastName\">Last Name</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDLastName\"\n                            formControlName=\"lastName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.lastName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.lastName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.lastName.errors.required\">Last Name is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDCountry\">Country</label>\n                          <select\n                            id=\"UDCountry\"\n                            formControlName=\"country\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.country.errors }\"\n                          >\n                            <option value=\"USA\">USA</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Russia\">Russia</option>\n                            <option value=\"UK\">UK</option>\n                          </select>\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.country.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.country.errors.required\">country is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDLanguage\">Language</label>\n                          <select\n                            id=\"UDLanguage\"\n                            formControlName=\"language\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.language.errors }\"\n                          >\n                            <option selected value=\"English\">English</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"French\">French</option>\n                            <option value=\"Portuguese\">Portuguese</option>\n                          </select>\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.language.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.language.errors.required\">language is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDAge\">Age</label>\n                          <input\n                            type=\"number\"\n                            id=\"UDAge\"\n                            formControlName=\"age\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.age.errors }\"\n                          />\n                          <div *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.age.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ReactiveUDForm.age.errors.required\">Age is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDPhoneNumber\">Phone Number</label>\n                          <input\n                            type=\"number\"\n                            id=\"UDPhoneNumber\"\n                            formControlName=\"phoneNumber\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.phoneNumber.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.phoneNumber.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.phoneNumber.errors.required\">Phone Number is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <div class=\"form-group\">\n                          <button class=\"btn btn-primary\" rippleEffect>Register</button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FormValidationComponent } from 'app/main/forms/form-validation/form-validation.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-validation',\n    component: FormValidationComponent,\n    data: { animation: 'validation' }\n  }\n];\n\n@NgModule({\n  declarations: [FormValidationComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class FormValidationModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTDsimpleValidation: snippetCode = {\n  html: `\n  <form class=\"form-horizontal\" (ngSubmit)=\"TDSimpleForm.form.valid\" #TDSimpleForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDName\">Name</label>\n          <input class=\"form-control input-md\" ngModel #TDNameRef=\"ngModel\" required id=\"TDName\" name=\"TDName\"\n            type=\"text\" placeholder=\"Name\">\n          <span *ngIf=\"TDSimpleForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"TDNameRef.errors.required\">This\n              field is\n              required!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDEmail\">Email</label>\n          <input class=\"form-control input-md\" ngModel #TDEmailRef=\"ngModel\" required email id=\"TDEmail\"\n            name=\"TDEmail\" type=\"text\" placeholder=\"Email\">\n          <span *ngIf=\"TDSimpleForm.submitted\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"!TDEmailRef.valid\">email must be valid!</small>\n          </span>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n  </form>\n  `\n};\nexport const snippetCodeTDMultiRuleValidation: snippetCode = {\n  html: `\n  <form class=\"form-horizontal\" (ngSubmit)=\"TDMultiRuleForm.form.valid\" #TDMultiRuleForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleName\">Name</label>\n          <input class=\"form-control input-md\" ngModel #TDMultiRuleNameRef=\"ngModel\" required\n            id=\"TDMultiRuleName\" name=\"TDMultiRuleName\" type=\"text\" placeholder=\"Your Name\">\n          <span *ngIf=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"TDMultiRuleNameRef.errors.required\">This\n              field is\n              required!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n          <input class=\"form-control input-md\" ngModel #TDMultiRuleEmailRef=\"ngModel\" required email\n            id=\"TDMultiRuleEmail\" name=\"TDMultiRuleEmail\" type=\"text\" placeholder=\"Your Email\">\n          <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\">email must be valid!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRulePassword\">Password</label>\n          <input type=\"password\" name=\"TDMultiRulePassword\" class=\"form-control\" placeholder=\"Your Password\"\n            ngModel #TDMultiRulePasswordRef=\"ngModel\" required minlength=\"6\"\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" id=\"TDMultiRulePassword\">\n          <div *ngIf=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n            class=\"form-text text-muted danger\">\n            <small *ngIf=\"TDMultiRulePasswordRef.errors.required\"> Password is required. </small>\n            <small *ngIf=\"TDMultiRulePasswordRef.errors.pattern\"> Must contain at least one number and one\n              uppercase and\n              lowercase letter, and at least 8 or more characters.</small>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleConfPassword\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" minlength=\"6\"\n            name=\"TDMultiRuleConfPassword\" placeholder=\"Confirm Password\" class=\"form-control\" required ngModel\n            #TDMultiRuleConfPasswordRef=\"ngModel\" pattern=\"{{ TDMultiRulePasswordRef.value }}\"\n            id=\"TDMultiRuleConfPassword\">\n          <div *ngIf=\" TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n            class=\"form-text text-muted danger\">\n            <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.required\"> Confirm password is required. </small>\n            <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.pattern\"> Password & Confirm Password does not\n              match.</small>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"!TDMultiRuleForm.form.valid\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n  </form>\n  `\n};\nexport const snippetCodeInputValidation: snippetCode = {\n  html: `\n<form class=\"form-horizontal\" (ngSubmit)=\"(TDValidationForm.form.valid)\" #TDValidationForm=\"ngForm\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRequiredField\">This field is required</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDRequiredFieldRef=\"ngModel\"\n          required\n          id=\"TDRequiredField\"\n          name=\"TDRequiredField\"\n          type=\"text\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n          >This field is required!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumberOnly\">Must only consist of numbers</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDNumberOnlyRef=\"ngModel\"\n          required\n          pattern=\"[0-9]+\"\n          id=\"TDNumberOnly\"\n          name=\"TDNumberOnly\"\n          type=\"text\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n          >The numeric field may only contain numeric characters.</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDAlphabetOnly\">Only alphabetic characters</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDAlphabetOnlyRef=\"ngModel\"\n          required\n          pattern=\"[a-zA-Z]+$\"\n          id=\"TDAlphabetOnly\"\n          name=\"TDAlphabetOnly\"\n          type=\"text\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n          >The alphabetic field may only contain alphabet characters.</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDPasswordOnly\">Password Input Field</label>\n        <input\n          type=\"password\"\n          name=\"TDPasswordOnly\"\n          class=\"form-control\"\n          [class.error]=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n          id=\"TDPasswordOnly\"\n          placeholder=\"Your Password\"\n          ngModel\n          #TDPasswordOnlyRef=\"ngModel\"\n          required\n          minlength=\"6\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n        />\n        <div\n          *ngIf=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n          class=\"form-text text-danger\"\n        >\n          <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> password is required. </small>\n          <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n            Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n            more characters.</small\n          >\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRepeatPassword\">Repeat password must match</label>\n        <input\n          type=\"password\"\n          id=\"TDRepeatPassword\"\n          class=\"form-control\"\n          [class.error]=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n          placeholder=\"Confirm Password\"\n          minlength=\"6\"\n          name=\"TDRepeatPassword\"\n          placeholder=\"Confirm Password\"\n          required\n          ngModel\n          #TDRepeatPasswordRef=\"ngModel\"\n          pattern=\"{{ TDPasswordOnlyRef.value }}\"\n        />\n        <div\n          *ngIf=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n          class=\"form-text text-danger\"\n        >\n          <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n          <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n            Password & Confirm Password does not match.</small\n          >\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDValidEmail\">Must be a valid email</label>\n        <input\n          type=\"email\"\n          id=\"TDValidEmail\"\n          name=\"TDValidEmail\"\n          class=\"form-control\"\n          [class.error]=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          required\n          #TDValidEmailRef=\"ngModel\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          placeholder=\"Email\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n          >Must be a valid email!</small\n        >\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumBtwTenTwenty\">Enter Number between 10 & 20</label>\n        <input\n          type=\"text\"\n          name=\"TDNumBtwTenTwenty\"\n          id=\"TDNumBtwTenTwenty\"\n          class=\"form-control\"\n          [class.error]=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n          pattern=\"([^0-9]*[0-9]+)+\"\n          min=\"10\"\n          max=\"20\"\n          required\n          placeholder=\"Enter Number between 10 & 20\"\n          ngModel\n          #TDNumBtwTenTwentyRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n          >Enter Number between 10 & 20!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRegex\"\n          >Must match the specified regular expression : ^([0-9]+)$ - numbers only</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDRegex\"\n          class=\"form-control\"\n          [class.error]=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n          pattern=\"^([0-9]+)$\"\n          id=\"TDRegex\"\n          placeholder=\"Enter specified regular expression\"\n          required\n          ngModel\n          #TDRegexRef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n          >The regex field format is invalid!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDLengthLessThree\"\n          >Length should not be less than the specified length : 3</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDLengthLessThree\"\n          id=\"TDLengthLessThree\"\n          class=\"form-control\"\n          [class.error]=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n          minlength=\"3\"\n          placeholder=\"Enter minimum 3 characters\"\n          ngModel\n          required\n          #TDLengthLessThreeRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n          >The min field must be at least 3 characters!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumThreeDigit\"\n          >The digits field must be numeric and exactly contain 3 digits</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDNumThreeDigit\"\n          id=\"TDNumThreeDigit\"\n          class=\"form-control\"\n          [class.error]=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n          pattern=\"([^0-9]*[0-9]+)+\"\n          maxlength=\"3\"\n          minlength=\"3\"\n          placeholder=\"Enter Exactly 3 digits\"\n          ngModel\n          required\n          #TDNumThreeDigitRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n          >The digits field must be numeric and exactly contain 3 digits!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDCharNumDU\"\n          >Only alphabetic characters, numbers, dashes or underscores</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDCharNumDU\"\n          id=\"TDCharNumDU\"\n          class=\"form-control\"\n          [class.error]=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n          pattern=\"^[-a-zA-Z_\\d]+$\"\n          placeholder=\"Enter Character, Numbers, Dash, Uderscore\"\n          required\n          ngModel\n          #TDCharNumDURef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n          >Must Enter Character, Number, Dash or Uderscore!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDUrl\">Must be a valid url</label>\n        <input\n          type=\"text\"\n          name=\"TDUrl\"\n          id=\"TDUrl\"\n          class=\"form-control\"\n          [class.error]=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n          pattern=\"^(http(s)?:\\/\\/)?(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n          placeholder=\"Enter valid url\"\n          required\n          ngModel\n          #TDUrlRef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n          >Must be a valid url!</small\n        >\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n</form>\n  `\n};\nexport const snippetCodeReactiveForms: snippetCode = {\n  html: `\n  <form [formGroup]=\"ReactiveUserDetailsForm\" (ngSubmit)=\"ReactiveUDFormOnSubmit()\">\n    <h6 class=\"mb-2\">1. Account Details</h6>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDUserName\">Username</label>\n          <input type=\"text\" id=\"UDUserName\" [(ngModel)]=\"UDForm.userName\" formControlName=\"userName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.userName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.userName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.userName.errors.required\">Username is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDEmail\">Email</label>\n          <input type=\"text\" id=\"UDEmail\" formControlName=\"email\" [(ngModel)]=\"UDForm.email\"\n            class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.email.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.email.errors.required\">Email is required</div>\n            <div *ngIf=\"ReactiveUDForm.email.errors.email\">Email must be a valid email address</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDPassword\">Password</label>\n          <input type=\"password\" id=\"UDPassword\" formControlName=\"password\" [(ngModel)]=\"UDForm.password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.password.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.password.errors.required\">Password is required</div>\n            <div *ngIf=\"ReactiveUDForm.password.errors.minlength\">Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDConfPassword\">Confirm Password</label>\n          <input type=\"password\" id=\"UDConfPassword\" formControlName=\"confPassword\"\n            [(ngModel)]=\"UDForm.confPassword\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.confPassword.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.confPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.confPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"ReactiveUDForm.confPassword.errors.minlength\">Confirm Password must be at least 6\n              characters\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <h6 class=\"mb-2\">2. Personal Info</h6>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDFirstName\">First Name</label>\n          <input type=\"text\" id=\"UDFirstName\" [(ngModel)]=\"UDForm.firstName\" formControlName=\"firstName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.firstName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.firstName.errors.required\">First Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDLastName\">Last Name</label>\n          <input type=\"text\" id=\"UDLastName\" formControlName=\"lastName\" [(ngModel)]=\"UDForm.lastName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.lastName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.lastName.errors.required\">Last Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDCountry\">Country</label>\n          <select id=\"UDCountry\" formControlName=\"country\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.country.errors }\">\n            <option value=\"USA\">USA</option>\n            <option value=\"Germany\">Germany</option>\n            <option value=\"Russia\">Russia</option>\n            <option value=\"UK\">UK</option>\n          </select>\n          <div *ngIf=\"submitted && ReactiveUDForm.country.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.country.errors.required\">country is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDLanguage\">Language</label>\n          <select id=\"UDLanguage\" formControlName=\"language\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.language.errors }\">\n            <option selected value=\"English\">English</option>\n            <option value=\"Germany\">Germany</option>\n            <option value=\"French\">French</option>\n            <option value=\"Portuguese\">Portuguese</option>\n          </select>\n          <div *ngIf=\"submitted && ReactiveUDForm.language.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.language.errors.required\">language is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDAge\">Age</label>\n          <input type=\"number\" id=\"UDAge\" formControlName=\"age\" [(ngModel)]=\"UDForm.age\"\n            class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.age.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.age.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.age.errors.required\">Age is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDPhoneNumber\">Phone Number</label>\n          <input type=\"text\" id=\"UDPhoneNumber\" formControlName=\"phoneNumber\"\n            [(ngModel)]=\"UDForm.phoneNumber\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.phoneNumber.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.phoneNumber.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.phoneNumber.errors.required\">Phone Number is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\" rippleEffect>Register</button>\n        </div>\n      </div>\n    </div>\n  </form>\n  `,\n  ts: `\n  public ReactiveUserDetailsForm: FormGroup;\n  public ReactiveUDFormSubmitted = false;\n\n  // Reactive User Details form data\n  public UDForm = {\n    userName: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confPassword: '',\n    age: '',\n    phoneNumber: ''\n  };\n\n  // getter for easy access to form fields\n  get ReactiveUDForm() {\n    return this.ReactiveUserDetailsForm.controls;\n  }\n\n  ReactiveUDFormOnSubmit() {\n    this.ReactiveUDFormSubmitted = true;\n\n    // stop here if form is invalid\n    if (this.ReactiveUserDetailsForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)');\n  }\n\n  // Reactive form initialization\n  this.ReactiveUserDetailsForm = this.formBuilder.group({\n    userName: ['', Validators.required],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    confPassword: ['', [Validators.required, Validators.minLength(6)]],\n    country: ['', [Validators.required]],\n    language: ['', [Validators.required]],\n    age: ['', [Validators.required]],\n    phoneNumber: ['', [Validators.required]]\n  });\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormWizardComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public TDNameVar;\n  public TDEmailVar;\n  public TDFirstNameVar;\n  public TDLastNameVar;\n  public twitterVar;\n  public facebookVar;\n  public googleVar;\n  public linkedinVar;\n  public landmarkVar;\n  public addressVar;\n\n  public selectBasic = [\n    { name: 'UK' },\n    { name: 'USA' },\n    { name: 'Spain' },\n    { name: 'France' },\n    { name: 'Italy' },\n    { name: 'Australia' }\n  ];\n\n  public selectMulti = [{ name: 'English' }, { name: 'French' }, { name: 'Spanish' }];\n  public selectMultiSelected;\n\n  // private\n  private horizontalWizardStepper: Stepper;\n  private verticalWizardStepper: Stepper;\n  private modernWizardStepper: Stepper;\n  private modernVerticalWizardStepper: Stepper;\n  private bsStepper;\n\n  /**\n   * Horizontal Wizard Stepper Next\n   *\n   * @param data\n   */\n  horizontalWizardStepperNext(data) {\n    if (data.form.valid === true) {\n      this.horizontalWizardStepper.next();\n    }\n  }\n  /**\n   * Horizontal Wizard Stepper Previous\n   */\n  horizontalWizardStepperPrevious() {\n    this.horizontalWizardStepper.previous();\n  }\n\n  /**\n   * Vertical Wizard Stepper Next\n   */\n  verticalWizardNext() {\n    this.verticalWizardStepper.next();\n  }\n  /**\n   * Vertical Wizard Stepper Previous\n   */\n  verticalWizardPrevious() {\n    this.verticalWizardStepper.previous();\n  }\n  /**\n   * Modern Horizontal Wizard Stepper Next\n   */\n  modernHorizontalNext() {\n    this.modernWizardStepper.next();\n  }\n  /**\n   * Modern Horizontal Wizard Stepper Previous\n   */\n  modernHorizontalPrevious() {\n    this.modernWizardStepper.previous();\n  }\n  /**\n   * Modern Vertical Wizard Stepper Next\n   */\n  modernVerticalNext() {\n    this.modernVerticalWizardStepper.next();\n  }\n  /**\n   * Modern Vertical Wizard Stepper Previous\n   */\n  modernVerticalPrevious() {\n    this.modernVerticalWizardStepper.previous();\n  }\n\n  /**\n   * On Submit\n   */\n  onSubmit() {\n    alert('Submitted!!');\n    return false;\n  }\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On Init\n   */\n  ngOnInit() {\n    this.horizontalWizardStepper = new Stepper(document.querySelector('#stepper1'), {});\n\n    this.verticalWizardStepper = new Stepper(document.querySelector('#stepper2'), {\n      linear: false,\n      animation: true\n    });\n\n    this.modernWizardStepper = new Stepper(document.querySelector('#stepper3'), {\n      linear: false,\n      animation: true\n    });\n\n    this.modernVerticalWizardStepper = new Stepper(document.querySelector('#stepper4'), {\n      linear: false,\n      animation: true\n    });\n\n    this.bsStepper = document.querySelectorAll('.bs-stepper');\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Wizard',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Wizard',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <!-- Horizontal Wizard -->\n    <section class=\"horizontal-wizard\">\n      <div id=\"stepper1\" class=\"bs-stepper horizontal-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">1</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#personal-info\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">2</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#address\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#social-links\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <form (ngSubmit)=\"(HWForm.form.valid)\" #HWForm=\"ngForm\">\n            <div id=\"account-details\" class=\"content\">\n              <form #accountDetailsForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Account Details</h5>\n                  <small class=\"text-muted\">Enter Your Account Details.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"username\">Username</label>\n                    <input\n                      [(ngModel)]=\"TDNameVar\"\n                      #TDNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDNameRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"johndoe\"\n                    />\n                    <span *ngIf=\"accountDetailsForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"email\">Email</label>\n                    <input\n                      [(ngModel)]=\"TDEmailVar\"\n                      #TDEmailRef=\"ngModel\"\n                      required\n                      email\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDEmailRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"john.doe@email.com\"\n                      aria-label=\"john.doe\"\n                    />\n                    <span *ngIf=\"accountDetailsForm.submitted\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"!TDEmailRef.valid\">Email must be valid!</small>\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group form-password-toggle col-md-6\">\n                    <label class=\"form-label\" for=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDPasswordOnlyRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                      ngModel\n                      #TDPasswordOnlyRef=\"ngModel\"\n                      required\n                      minlength=\"6\"\n                      pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                    />\n                    <div\n                      *ngIf=\"TDPasswordOnlyRef.invalid && accountDetailsForm.submitted\"\n                      class=\"form-text text-danger\"\n                    >\n                      <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> Password is required. </small>\n                      <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n                        Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more\n                        characters.</small\n                      >\n                    </div>\n                  </div>\n                  <div class=\"form-group form-password-toggle col-md-6\">\n                    <label class=\"form-label\" for=\"confirm-password\">Confirm Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"confirm-password\"\n                      id=\"confirm-password\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDRepeatPasswordRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                      required\n                      ngModel\n                      #TDRepeatPasswordRef=\"ngModel\"\n                      pattern=\"{{ TDPasswordOnlyRef.value }}\"\n                      minlength=\"6\"\n                    />\n                    <div\n                      *ngIf=\"TDRepeatPasswordRef.invalid && accountDetailsForm.submitted\"\n                      class=\"form-text text-danger\"\n                    >\n                      <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n                      <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n                        Password & Confirm Password does not match.</small\n                      >\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-outline-secondary btn-prev\"\n                    disabled\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(accountDetailsForm)\"\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"personal-info\" class=\"content\">\n              <form #personalInfoForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Personal Info</h5>\n                  <small>Enter Your Personal Info.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"first-name\">First Name</label>\n                    <input\n                      [(ngModel)]=\"TDFirstNameVar\"\n                      #TDFirstNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"first-name\"\n                      id=\"first-name\"\n                      class=\"form-control\"\n                      [class.error]=\"personalInfoForm.submitted && TDFirstNameRef.invalid\"\n                      placeholder=\"John\"\n                    />\n                    <span *ngIf=\"personalInfoForm.submitted && TDFirstNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDFirstNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"last-name\">Last Name</label>\n                    <input\n                      [(ngModel)]=\"TDLastNameVar\"\n                      #TDLastNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"last-name\"\n                      id=\"last-name\"\n                      class=\"form-control\"\n                      [class.error]=\"personalInfoForm.submitted && TDLastNameRef.invalid\"\n                      placeholder=\"Doe\"\n                    />\n                    <span *ngIf=\"personalInfoForm.submitted && TDLastNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDLastNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"country\">Country</label>\n                    <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"language\">Language</label>\n                    <ng-select\n                      [items]=\"selectMulti\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      name=\"selectLanguage\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiSelected\"\n                    >\n                    </ng-select>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(personalInfoForm)\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"address\" class=\"content\">\n              <form #addressForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Address</h5>\n                  <small>Enter Your Address.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"address\">Address</label>\n                    <input\n                      [(ngModel)]=\"addressVar\"\n                      #addressRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"address\"\n                      name=\"address\"\n                      class=\"form-control\"\n                      [class.error]=\"addressForm.submitted && addressRef.invalid\"\n                      placeholder=\"98  Borough bridge Road, Birmingham\"\n                    />\n                    <span *ngIf=\"addressForm.submitted && addressRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"addressRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"landmark\">Landmark</label>\n                    <input\n                      [(ngModel)]=\"landmarkVar\"\n                      #landmarkRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"landmark\"\n                      id=\"landmark\"\n                      class=\"form-control\"\n                      [class.error]=\"addressForm.submitted && landmarkRef.invalid\"\n                      placeholder=\"Borough bridge\"\n                    />\n                    <span *ngIf=\"addressForm.submitted && landmarkRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"landmarkRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"pincode1\">Pincode</label>\n                    <input type=\"text\" id=\"pincode1\" class=\"form-control\" placeholder=\"658921\" />\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"city1\">City</label>\n                    <input type=\"text\" id=\"city1\" class=\"form-control\" placeholder=\"Birmingham\" />\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(addressForm)\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"social-links\" class=\"content\">\n              <form #socialLinkForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Social Links</h5>\n                  <small>Enter Your Social Links.</small>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"twitter\">Twitter</label>\n                    <input\n                      [(ngModel)]=\"twitterVar\"\n                      #twitterkRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"twitter\"\n                      name=\"twitter\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && twitterkRef.invalid\"\n                      placeholder=\"https://twitter.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && twitterkRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"twitterkRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"facebook\">Facebook</label>\n                    <input\n                      [(ngModel)]=\"facebookVar\"\n                      #facebookRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"facebook\"\n                      name=\"facebook\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && facebookRef.invalid\"\n                      placeholder=\"https://facebook.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && facebookRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"facebookRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"google\">Google+</label>\n                    <input\n                      [(ngModel)]=\"googleVar\"\n                      #googleRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"google\"\n                      name=\"google\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && googleRef.invalid\"\n                      placeholder=\"https://plus.google.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && googleRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"googleRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"linkedin\">Linkedin</label>\n                    <input\n                      [(ngModel)]=\"linkedinVar\"\n                      #linkedinRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"linkedin\"\n                      name=\"linkedin\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && linkedinRef.invalid\"\n                      placeholder=\"https://linkedin.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && linkedinRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"linkedinRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n                </div>\n              </form>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n    <!--/ Horizontal Wizard -->\n\n    <!-- Vertical Wizard -->\n    <section class=\"vertical-wizard\">\n      <div id=\"stepper2\" class=\"bs-stepper vertical vertical-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">1</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">2</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">4</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-username\">Username</label>\n                <input type=\"text\" id=\"vertical-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"vertical-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-first-name\">First Name</label>\n                <input type=\"text\" id=\"vertical-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-last-name\">Last Name</label>\n                <input type=\"text\" id=\"vertical-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-landmark\">Landmark</label>\n                <input type=\"text\" id=\"vertical-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode2\">Pincode</label>\n                <input type=\"text\" id=\"pincode2\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city2\">City</label>\n                <input type=\"text\" id=\"city2\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-twitter\">Twitter</label>\n                <input type=\"text\" id=\"vertical-twitter\" class=\"form-control\" placeholder=\"https://twitter.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-facebook\">Facebook</label>\n                <input type=\"text\" id=\"vertical-facebook\" class=\"form-control\" placeholder=\"https://facebook.com/abc\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-google\">Google+</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-google\"\n                  class=\"form-control\"\n                  placeholder=\"https://plus.google.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-linkedin\">Linkedin</label>\n                <input type=\"text\" id=\"vertical-linkedin\" class=\"form-control\" placeholder=\"https://linkedin.com/abc\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Vertical Wizard -->\n\n    <!-- Modern Horizontal Wizard -->\n    <section class=\"modern-horizontal-wizard\">\n      <div id=\"stepper3\" class=\"bs-stepper wizard-modern modern-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"file-text\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"user\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"map-pin\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"link\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-username\">Username</label>\n                <input type=\"text\" id=\"modern-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"modern-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"modern-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"modern-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"modern-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"modern-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-first-name\">First Name</label>\n                <input type=\"text\" id=\"modern-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-last-name\">Last Name</label>\n                <input type=\"text\" id=\"modern-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"modern-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-landmark\">Landmark</label>\n                <input type=\"text\" id=\"modern-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode3\">Pincode</label>\n                <input type=\"text\" id=\"pincode3\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city3\">City</label>\n                <input type=\"text\" id=\"city3\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-twitter\">Twitter</label>\n                <input type=\"text\" id=\"modern-twitter\" class=\"form-control\" placeholder=\"https://twitter.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-facebook\">Facebook</label>\n                <input type=\"text\" id=\"modern-facebook\" class=\"form-control\" placeholder=\"https://facebook.com/abc\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-google\">Google+</label>\n                <input type=\"text\" id=\"modern-google\" class=\"form-control\" placeholder=\"https://plus.google.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-linkedin\">Linkedin</label>\n                <input type=\"text\" id=\"modern-linkedin\" class=\"form-control\" placeholder=\"https://linkedin.com/abc\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Modern Horizontal Wizard -->\n\n    <!-- Modern Vertical Wizard -->\n    <section class=\"modern-vertical-wizard\">\n      <div id=\"stepper4\" class=\"bs-stepper vertical wizard-modern modern-vertical-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"file-text\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"user\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"map-pin\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"link\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-username\">Username</label>\n                <input type=\"text\" id=\"vertical-modern-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"vertical-modern-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-modern-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-modern-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-first-name\">First Name</label>\n                <input type=\"text\" id=\"vertical-modern-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-last-name\">Last Name</label>\n                <input type=\"text\" id=\"vertical-modern-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-landmark\">Landmark</label>\n                <input type=\"text\" id=\"vertical-modern-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode4\">Pincode</label>\n                <input type=\"text\" id=\"pincode4\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city4\">City</label>\n                <input type=\"text\" id=\"city4\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-twitter\">Twitter</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-twitter\"\n                  class=\"form-control\"\n                  placeholder=\"https://twitter.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-facebook\">Facebook</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-facebook\"\n                  class=\"form-control\"\n                  placeholder=\"https://facebook.com/abc\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-google\">Google+</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-google\"\n                  class=\"form-control\"\n                  placeholder=\"https://plus.google.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-linkedin\">Linkedin</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-linkedin\"\n                  class=\"form-control\"\n                  placeholder=\"https://linkedin.com/abc\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Modern Vertical Wizard -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\n\nimport { FormWizardComponent } from 'app/main/forms/form-wizard/form-wizard.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-wizard',\n    component: FormWizardComponent,\n    data: { animation: 'wizard' }\n  }\n];\n\n@NgModule({\n  declarations: [FormWizardComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreDirectivesModule,\n    NgSelectModule\n  ]\n})\nexport class FormWizardModule {}\n","import { NgModule } from '@angular/core';\n\nimport { FormRepeaterModule } from 'app/main/forms/form-repeater/form-repeater.module';\nimport { FormElementsModule } from 'app/main/forms/form-elements/form-elements.module';\nimport { FormLayoutModule } from 'app/main/forms/form-layout/form-layout.module';\nimport { FormValidationModule } from 'app/main/forms/form-validation/form-validation.module';\nimport { FormWizardModule } from 'app/main/forms/form-wizard/form-wizard.module';\n\n@NgModule({\n  declarations: [],\n  imports: [FormElementsModule, FormLayoutModule, FormWizardModule, FormValidationModule, FormRepeaterModule]\n})\nexport class FormsModule {}\n"],"sourceRoot":"webpack:///"}