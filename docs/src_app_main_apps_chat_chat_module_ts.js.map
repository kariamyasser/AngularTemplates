{"version":3,"sources":["./src/app/main/apps/chat/chat-content/chat-content.component.html","./src/app/main/apps/chat/chat-content/chat-content.component.ts","./src/app/main/apps/chat/chat-sidebars/chat-active-sidebar/chat-active-sidebar.component.ts","./src/app/main/apps/chat/chat-sidebars/chat-active-sidebar/chat-active-sidebar.component.html","./src/app/main/apps/chat/chat-sidebars/chat-sidebar/chat-sidebar.component.ts","./src/app/main/apps/chat/chat-sidebars/chat-sidebar/chat-sidebar.component.html","./src/app/main/apps/chat/chat-sidebars/chat-user-sidebar/chat-user-sidebar.component.ts","./src/app/main/apps/chat/chat-sidebars/chat-user-sidebar/chat-user-sidebar.component.html","./src/app/main/apps/chat/chat.component.ts","./src/app/main/apps/chat/chat.component.html","./src/app/main/apps/chat/chat.module.ts","./src/app/main/apps/chat/chat.service.ts"],"names":[],"mappings":"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","file":"src_app_main_apps_chat_chat_module_ts.js","sourcesContent":["<div class=\"body-content-overlay\"></div>\n<!-- Main chat area -->\n<section class=\"chat-app-window\">\n  <!-- To load Conversation -->\n  <div class=\"start-chat-area\" [ngClass]=\"{ 'd-none': activeChat === true }\">\n    <div class=\"mb-1 start-chat-icon\">\n      <i data-feather=\"message-square\"></i>\n    </div>\n    <h4 class=\"sidebar-toggle start-chat-text\" (click)=\"toggleSidebar('chat-sidebar')\">Start Conversation</h4>\n  </div>\n  <!--/ To load Conversation -->\n\n  <!-- Active Chat -->\n  <div class=\"active-chat\" [ngClass]=\"{ 'd-none': activeChat !== true }\" *ngIf=\"activeChat === true\">\n    <!-- Chat Header -->\n    <div class=\"chat-navbar\">\n      <header class=\"chat-header\">\n        <div class=\"d-flex align-items-center\">\n          <button class=\"btn sidebar-toggle d-block d-lg-none mr-1 p-0\" (click)=\"toggleSidebar('chat-sidebar')\">\n            <i data-feather=\"menu\" class=\"font-medium-5\"></i>\n          </button>\n          <button\n            class=\"btn avatar avatar-border user-profile-toggle bg-transparent m-0 mr-1 p-0\"\n            (click)=\"toggleSidebar('chat-active-sidebar')\"\n          >\n            <img [src]=\"chatUser.avatar\" alt=\"avatar\" height=\"36\" width=\"36\" />\n            <span\n              [ngClass]=\"{\n                'avatar-status-offline': chatUser.status == 'offline',\n                'avatar-status-online': chatUser.status == 'online',\n                'avatar-status-busy': chatUser.status == 'busy',\n                'avatar-status-away': chatUser.status == 'away'\n              }\"\n            ></span>\n          </button>\n          <h6 class=\"mb-0\">{{ chatUser.fullName }}</h6>\n        </div>\n        <div class=\"d-flex align-items-center\">\n          <i data-feather=\"phone-call\" class=\"cursor-pointer d-sm-block d-none font-medium-2 mr-1\"></i>\n          <i data-feather=\"video\" class=\"cursor-pointer d-sm-block d-none font-medium-2 mr-1\"></i>\n          <i data-feather=\"search\" class=\"cursor-pointer d-sm-block d-none font-medium-2\"></i>\n          <div ngbDropdown>\n            <button\n              class=\"btn-icon btn btn-transparent hide-arrow btn-sm\"\n              type=\"button\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              ngbDropdownToggle\n            >\n              <i data-feather=\"more-vertical\" id=\"chat-header-actions\" class=\"font-medium-2\"></i>\n            </button>\n            <div ngbDropdownMenu class=\"dropdown-menu-right\" aria-labelledby=\"chat-header-actions\">\n              <a ngbDropdownItem href=\"javascript:void(0);\">View Contact</a>\n              <a ngbDropdownItem href=\"javascript:void(0);\">Mute Notifications</a>\n              <a ngbDropdownItem href=\"javascript:void(0);\">Block Contact</a>\n              <a ngbDropdownItem href=\"javascript:void(0);\">Clear Chat</a>\n              <a ngbDropdownItem href=\"javascript:void(0);\">Report</a>\n            </div>\n          </div>\n        </div>\n      </header>\n    </div>\n    <!--/ Chat Header -->\n\n    <!-- User Chat messages -->\n    <div class=\"user-chats\" [perfectScrollbar] #scrollMe [scrollTop]=\"scrolltop\">\n      <div class=\"chats\">\n        <div\n          class=\"chat\"\n          *ngFor=\"let chatRef of chats.chat\"\n          [ngClass]=\"{ 'chat-left': chatRef.senderId === chats.userId }\"\n        >\n          <div class=\"chat-avatar\">\n            <span class=\"avatar box-shadow-1 cursor-pointer\">\n              <img\n                *ngIf=\"chatRef.senderId === chats.userId; else alternateAvatar\"\n                [src]=\"chatUser.avatar\"\n                alt=\"avatar\"\n                height=\"36\"\n                width=\"36\"\n              />\n              <ng-template #alternateAvatar>\n                <img [src]=\"userProfile.avatar\" alt=\"avatar\" height=\"36\" width=\"36\" />\n              </ng-template>\n            </span>\n          </div>\n          <div class=\"chat-body\">\n            <div class=\"chat-content\">\n              <p>{{ chatRef.message }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- User Chat messages -->\n\n    <!-- Submit Chat form -->\n    <form class=\"chat-app-form\" action=\"javascript:void(0);\">\n      <div class=\"input-group input-group-merge mr-1 form-send-message\">\n        <div class=\"input-group-prepend\">\n          <span class=\"speech-to-text input-group-text\"><i data-feather=\"mic\" class=\"cursor-pointer\"></i></span>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control message\"\n          placeholder=\"Type your message or use speech to text\"\n          [(ngModel)]=\"chatMessage\"\n          name=\"chat-message\"\n          (keydown.enter)=\"updateChat()\"\n        />\n        <div class=\"input-group-append\">\n          <span class=\"input-group-text\">\n            <label for=\"attach-doc\" class=\"attachment-icon mb-0\">\n              <i data-feather=\"image\" class=\"cursor-pointer lighten-2 text-secondary\"></i>\n              <input type=\"file\" id=\"attach-doc\" hidden /> </label\n          ></span>\n        </div>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary send\" (click)=\"updateChat()\" rippleEffect>\n        <i data-feather=\"send\" class=\"d-lg-none\"></i>\n        <span class=\"d-none d-lg-block\">Send</span>\n      </button>\n    </form>\n    <!--/ Submit Chat form -->\n  </div>\n  <!--/ Active Chat -->\n</section>\n<!--/ Main chat area -->\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n  selector: 'app-chat-content',\n  templateUrl: './chat-content.component.html'\n})\nexport class ChatContentComponent implements OnInit {\n  // Decorator\n  @ViewChild('scrollMe') scrollMe: ElementRef;\n  scrolltop: number = null;\n\n  // Public\n  public activeChat: Boolean;\n  public chats;\n  public chatUser;\n  public userProfile;\n  public chatMessage = '';\n  public newChat;\n\n  /**\n   * Constructor\n   *\n   * @param {ChatService} _chatService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _chatService: ChatService, private _coreSidebarService: CoreSidebarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Update Chat\n   */\n  updateChat() {\n    this.newChat = {\n      message: this.chatMessage,\n      time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)',\n      senderId: this.userProfile.id\n    };\n\n    // If chat data is available (update chat)\n    if (this.chats.chat) {\n      if (this.newChat.message !== '') {\n        this.chats.chat.push(this.newChat);\n        this._chatService.updateChat(this.chats);\n        this.chatMessage = '';\n        setTimeout(() => {\n          this.scrolltop = this.scrollMe?.nativeElement.scrollHeight;\n        }, 0);\n      }\n    }\n    // Else create new chat\n    else {\n      this._chatService.createNewChat(this.chatUser.id, this.newChat);\n    }\n  }\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name) {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to Chat Change\n    this._chatService.onChatOpenChange.subscribe(res => {\n      this.chatMessage = '';\n      this.activeChat = res;\n      setTimeout(() => {\n        this.scrolltop = this.scrollMe?.nativeElement.scrollHeight;\n      }, 0);\n    });\n\n    // Subscribe to Selected Chat Change\n    this._chatService.onSelectedChatChange.subscribe(res => {\n      this.chats = res;\n    });\n\n    // Subscribe to Selected Chat User Change\n    this._chatService.onSelectedChatUserChange.subscribe(res => {\n      this.chatUser = res;\n    });\n\n    this.userProfile = this._chatService.userProfile;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n  selector: 'app-chat-active-sidebar',\n  templateUrl: './chat-active-sidebar.component.html'\n})\nexport class ChatActiveSidebarComponent implements OnInit {\n  // Public\n  public chatUser;\n\n  /**\n   * Constructor\n   *\n   * @param {ChatService} _chatService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _chatService: ChatService, private _coreSidebarService: CoreSidebarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name) {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    this._chatService.onSelectedChatUserChange.subscribe(res => {\n      this.chatUser = res;\n    });\n  }\n}\n","<!-- User Chat profile right area -->\n<div class=\"active-user-profile-sidebar\">\n  <header class=\"user-profile-header\">\n    <button class=\"btn close-icon p-0\" (click)=\"toggleSidebar('chat-active-sidebar')\">\n      <i data-feather=\"x\"></i>\n    </button>\n    <!-- User Profile image with name -->\n    <div class=\"header-profile-sidebar\">\n      <div class=\"avatar box-shadow-1 avatar-border avatar-xl\">\n        <img [src]=\"chatUser.avatar\" alt=\"user_avatar\" height=\"70\" width=\"70\" />\n        <span\n          class=\"avatar-status-lg\"\n          [ngClass]=\"{\n            'avatar-status-offline': chatUser.status == 'offline',\n            'avatar-status-online': chatUser.status == 'online',\n            'avatar-status-busy': chatUser.status == 'busy',\n            'avatar-status-away': chatUser.status == 'away'\n          }\"\n        ></span>\n      </div>\n      <h4 class=\"chat-user-name\">{{ chatUser.fullName }}</h4>\n      <span class=\"user-post\">{{ chatUser.role }}</span>\n    </div>\n    <!--/ User Profile image with name -->\n  </header>\n  <div class=\"user-profile-sidebar-area\" [perfectScrollbar]>\n    <!-- About User -->\n    <h6 class=\"section-label mb-1\">About</h6>\n    <p>{{ chatUser.about }}</p>\n    <!-- About User -->\n    <!-- User's personal information -->\n    <div class=\"personal-info\">\n      <h6 class=\"section-label mb-1 mt-3\">Personal Information</h6>\n      <ul class=\"list-unstyled\">\n        <li class=\"mb-1\">\n          <i data-feather=\"mail\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">kristycandy@email.com</span>\n        </li>\n        <li class=\"mb-1\">\n          <i data-feather=\"phone-call\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">+1(123) 456 - 7890</span>\n        </li>\n        <li>\n          <i data-feather=\"clock\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">Mon - Fri 10AM - 8PM</span>\n        </li>\n      </ul>\n    </div>\n    <!--/ User's personal information -->\n\n    <!-- User's Links -->\n    <div class=\"more-options\">\n      <h6 class=\"section-label mb-1 mt-3\">Options</h6>\n      <ul class=\"list-unstyled\">\n        <li class=\"cursor-pointer mb-1\">\n          <i data-feather=\"tag\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">Add Tag</span>\n        </li>\n        <li class=\"cursor-pointer mb-1\">\n          <i data-feather=\"star\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">Important Contact</span>\n        </li>\n        <li class=\"cursor-pointer mb-1\">\n          <i data-feather=\"image\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">Shared Media</span>\n        </li>\n        <li class=\"cursor-pointer mb-1\">\n          <i data-feather=\"trash\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">Delete Contact</span>\n        </li>\n        <li class=\"cursor-pointer\">\n          <i data-feather=\"slash\" class=\"font-medium-2 mr-50\"></i>\n          <span class=\"align-middle\">Block Contact</span>\n        </li>\n      </ul>\n    </div>\n    <!--/ User's Links -->\n  </div>\n</div>\n<!--/ User Chat profile right area -->\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n  selector: 'app-chat-sidebar',\n  templateUrl: './chat-sidebar.component.html'\n})\nexport class ChatSidebarComponent implements OnInit {\n  // Public\n  public contacts;\n  public chatUsers;\n  public searchText;\n  public chats;\n  public selectedIndex = null;\n  public userProfile;\n\n  /**\n   * Constructor\n   *\n   * @param {ChatService} _chatService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _chatService: ChatService, private _coreSidebarService: CoreSidebarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Open Chat\n   *\n   * @param id\n   * @param newChat\n   */\n  openChat(id) {\n    this._chatService.openChat(id);\n\n    // Reset unread Message to zero\n    this.chatUsers.map(user => {\n      if (user.id === id) {\n        user.unseenMsgs = 0;\n      }\n    });\n  }\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name) {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  /**\n   * Set Index\n   *\n   * @param index\n   */\n  setIndex(index: number) {\n    this.selectedIndex = index;\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to contacts\n    this._chatService.onContactsChange.subscribe(res => {\n      this.contacts = res;\n    });\n\n    let skipFirst = 0;\n\n    // Subscribe to chat users\n    this._chatService.onChatUsersChange.subscribe(res => {\n      this.chatUsers = res;\n\n      // Skip setIndex first time when initialized\n      if (skipFirst >= 1) {\n        this.setIndex(this.chatUsers.length - 1);\n      }\n      skipFirst++;\n    });\n\n    // Subscribe to selected Chats\n    this._chatService.onSelectedChatChange.subscribe(res => {\n      this.chats = res;\n    });\n\n    // Add Unseen Message To Chat User\n    this._chatService.onChatsChange.pipe(first()).subscribe(chats => {\n      chats.map(chat => {\n        this.chatUsers.map(user => {\n          if (user.id === chat.userId) {\n            user.unseenMsgs = chat.unseenMsgs;\n          }\n        });\n      });\n    });\n\n    // Subscribe to User Profile\n    this._chatService.onUserProfileChange.subscribe(response => {\n      this.userProfile = response;\n    });\n  }\n}\n","<!-- Chat Sidebar area -->\n<div class=\"chat-sidebar bg-white\">\n  <button class=\"btn sidebar-close-icon\" (click)=\"toggleSidebar('chat-sidebar')\">\n    <i data-feather=\"x\"></i>\n  </button>\n  <!-- Sidebar header start -->\n  <div class=\"chat-fixed-search\">\n    <div class=\"d-flex align-items-center w-100\">\n      <div class=\"sidebar-profile-toggle\">\n        <button class=\"btn avatar avatar-border bg-transparent p-0\" (click)=\"toggleSidebar('chat-user-sidebar')\">\n          <img [src]=\"userProfile.avatar\" alt=\"user_avatar\" height=\"42\" width=\"42\" />\n          <span\n            [ngClass]=\"{\n              'avatar-status-offline': userProfile.status == 'offline',\n              'avatar-status-online': userProfile.status == 'online',\n              'avatar-status-busy': userProfile.status == 'busy',\n              'avatar-status-away': userProfile.status == 'away'\n            }\"\n          ></span>\n        </button>\n      </div>\n      <div class=\"input-group input-group-merge ml-1 w-100\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text round\"><i data-feather=\"search\" class=\"text-muted\"></i></span>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control round\"\n          id=\"chat-search\"\n          placeholder=\"Search or start a new chat\"\n          aria-label=\"Search...\"\n          aria-describedby=\"chat-search\"\n          [(ngModel)]=\"searchText\"\n        />\n      </div>\n    </div>\n  </div>\n  <!-- Sidebar header end -->\n\n  <!-- Sidebar Users start -->\n  <div id=\"users-list\" class=\"chat-user-list-wrapper list-group\" [perfectScrollbar]>\n    <h4 class=\"chat-list-title\">Chats</h4>\n    <ng-container *ngIf=\"(chatUsers | filter: searchText:'fullName').length; else noResultsChats\"></ng-container>\n    <ul class=\"chat-users-list chat-list media-list\">\n      <li\n        *ngFor=\"let chatUser of chatUsers | filter: searchText:'fullName'; let i = index\"\n        [class.active]=\"selectedIndex === i\"\n        (click)=\"openChat(chatUser.id); toggleSidebar('chat-sidebar'); setIndex(i)\"\n      >\n        <span class=\"avatar\"\n          ><img [src]=\"chatUser.avatar\" height=\"42\" width=\"42\" alt=\"Generic placeholder image\" />\n          <span\n            [ngClass]=\"{\n              'avatar-status-offline': chatUser.status == 'offline',\n              'avatar-status-online': chatUser.status == 'online',\n              'avatar-status-busy': chatUser.status == 'busy',\n              'avatar-status-away': chatUser.status == 'away'\n            }\"\n          ></span>\n        </span>\n        <div class=\"chat-info flex-grow-1\">\n          <h5 class=\"mb-0\">{{ chatUser.fullName }}</h5>\n          <p class=\"card-text text-truncate\">\n            {{ chatUser.about }}\n          </p>\n        </div>\n        <div class=\"chat-meta text-nowrap\">\n          <small class=\"float-right mb-25 chat-time\">4:14 PM</small>\n          <span *ngIf=\"chatUser.unseenMsgs >= 1\" class=\"float-right badge badge-danger badge-pill\">{{\n            chatUser.unseenMsgs\n          }}</span>\n        </div>\n      </li>\n\n      <ng-template #noResultsChats>\n        <li class=\"no-results\" [ngClass]=\"{ show: (chatUsers | filter: searchText:'fullName').length <= 0 }\">\n          <h6 class=\"mb-0\">No Chats Found</h6>\n        </li>\n      </ng-template>\n    </ul>\n    <h4 class=\"chat-list-title\">Contacts</h4>\n    <ng-container *ngIf=\"(contacts | filter: searchText:'fullName').length; else noResultsContacts\"></ng-container>\n    <ul class=\"chat-users-list contact-list media-list\">\n      <li\n        *ngFor=\"let contact of contacts | filter: searchText:'fullName'\"\n        (click)=\"openChat(contact.id); toggleSidebar('chat-sidebar')\"\n      >\n        <span class=\"avatar\"\n          ><img [src]=\"contact.avatar\" height=\"42\" width=\"42\" alt=\"Generic placeholder image\" />\n        </span>\n        <div class=\"chat-info\">\n          <h5 class=\"mb-0\">{{ contact.fullName }}</h5>\n          <p class=\"card-text text-truncate\">\n            {{ contact.about }}\n          </p>\n        </div>\n      </li>\n\n      <ng-template #noResultsContacts>\n        <li class=\"no-results\" [ngClass]=\"{ show: (contacts | filter: searchText:'fullName').length <= 0 }\">\n          <h6 class=\"mb-0\">No Contacts Found</h6>\n        </li>\n      </ng-template>\n    </ul>\n  </div>\n  <!-- Sidebar Users end -->\n</div>\n<!--/ Chat Sidebar area -->\n","import { Component, OnInit } from '@angular/core';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n@Component({\n  selector: 'app-chat-user-sidebar',\n  templateUrl: './chat-user-sidebar.component.html'\n})\nexport class ChatUserSidebarComponent implements OnInit {\n  // Public\n  public userProfile;\n\n  /**\n   * Constructor\n   *\n   * @param {ChatService} _chatService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _chatService: ChatService, private _coreSidebarService: CoreSidebarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name) {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  /**\n   * Update User Status\n   */\n  updateUserStatus() {\n    this._chatService.updateUserProfile(this.userProfile);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    this.userProfile = this._chatService.userProfile;\n  }\n}\n","<!-- Admin user profile area -->\n<div class=\"chat-user-sidebar\">\n  <header class=\"chat-profile-header\">\n    <button class=\"btn close-icon p-0\" (click)=\"toggleSidebar('chat-user-sidebar')\">\n      <i data-feather=\"x\"></i>\n    </button>\n    <!-- User Information -->\n    <div class=\"header-profile-sidebar\">\n      <div class=\"avatar box-shadow-1 avatar-xl avatar-border\">\n        <img [src]=\"userProfile.avatar\" alt=\"user_avatar\" />\n        <span\n          class=\"avatar-status-xl\"\n          [ngClass]=\"{\n            'avatar-status-offline': userProfile.status == 'offline',\n            'avatar-status-online': userProfile.status == 'online',\n            'avatar-status-busy': userProfile.status == 'busy',\n            'avatar-status-away': userProfile.status == 'away'\n          }\"\n        ></span>\n      </div>\n      <h4 class=\"chat-user-name\">{{ userProfile.fullName }}</h4>\n      <span class=\"user-post\">{{ userProfile.role }}</span>\n    </div>\n    <!--/ User Information -->\n  </header>\n  <!-- User Details start -->\n  <div class=\"profile-sidebar-area\" [perfectScrollbar]>\n    <h6 class=\"section-label mb-1\">About</h6>\n    <div class=\"about-user\">\n      <textarea\n        data-length=\"120\"\n        class=\"form-control char-textarea\"\n        id=\"textarea-counter\"\n        rows=\"5\"\n        placeholder=\"About User\"\n        >{{ userProfile.about }}</textarea\n      >\n      <small class=\"counter-value float-right\"><span class=\"char-count\">108</span> / 120 </small>\n    </div>\n    <!-- To set user status -->\n    <h6 class=\"section-label mb-1 mt-3\">Status</h6>\n    <ul class=\"list-unstyled user-status\">\n      <li class=\"pb-1\">\n        <div class=\"custom-control custom-control-success custom-radio\">\n          <input\n            type=\"radio\"\n            id=\"activeStatusRadio\"\n            name=\"userStatus\"\n            class=\"custom-control-input\"\n            [(ngModel)]=\"userProfile.status\"\n            (change)=\"updateUserStatus()\"\n            value=\"online\"\n            checked\n          />\n          <label class=\"custom-control-label ml-25\" for=\"activeStatusRadio\">Active</label>\n        </div>\n      </li>\n      <li class=\"pb-1\">\n        <div class=\"custom-control custom-control-danger custom-radio\">\n          <input\n            type=\"radio\"\n            id=\"dndStatusRadio\"\n            [(ngModel)]=\"userProfile.status\"\n            name=\"userStatus\"\n            class=\"custom-control-input\"\n            (change)=\"updateUserStatus()\"\n            value=\"busy\"\n          />\n          <label class=\"custom-control-label ml-25\" for=\"dndStatusRadio\">Do Not Disturb</label>\n        </div>\n      </li>\n      <li class=\"pb-1\">\n        <div class=\"custom-control custom-control-warning custom-radio\">\n          <input\n            type=\"radio\"\n            id=\"awayStatusRadio\"\n            [(ngModel)]=\"userProfile.status\"\n            name=\"userStatus\"\n            class=\"custom-control-input\"\n            (change)=\"updateUserStatus()\"\n            value=\"away\"\n          />\n          <label class=\"custom-control-label ml-25\" for=\"awayStatusRadio\">Away</label>\n        </div>\n      </li>\n      <li class=\"pb-1\">\n        <div class=\"custom-control custom-control-secondary custom-radio\">\n          <input\n            type=\"radio\"\n            id=\"offlineStatusRadio\"\n            [(ngModel)]=\"userProfile.status\"\n            name=\"userStatus\"\n            class=\"custom-control-input\"\n            (change)=\"updateUserStatus()\"\n            value=\"offline\"\n          />\n          <label class=\"custom-control-label ml-25\" for=\"offlineStatusRadio\">Offline</label>\n        </div>\n      </li>\n    </ul>\n    <!--/ To set user status -->\n\n    <!-- User settings -->\n    <h6 class=\"section-label mb-1 mt-2\">Settings</h6>\n    <ul class=\"list-unstyled\">\n      <li class=\"d-flex justify-content-between align-items-center mb-1\">\n        <div class=\"d-flex align-items-center\">\n          <i data-feather=\"check-square\" class=\"mr-75 font-medium-3\"></i>\n          <span class=\"align-middle\">Two-step Verification</span>\n        </div>\n        <div class=\"custom-control custom-switch mr-0\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            id=\"customSwitch1\"\n            [checked]=\"userProfile.settings.isTwoStepAuthVerificationEnabled\"\n          />\n          <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\n        </div>\n      </li>\n      <li class=\"d-flex justify-content-between align-items-center mb-1\">\n        <div class=\"d-flex align-items-center\">\n          <i data-feather=\"bell\" class=\"mr-75 font-medium-3\"></i>\n          <span class=\"align-middle\">Notification</span>\n        </div>\n        <div class=\"custom-control custom-switch mr-0\">\n          <input\n            type=\"checkbox\"\n            class=\"custom-control-input\"\n            id=\"customSwitch2\"\n            [checked]=\"userProfile.settings.isNotificationsOn\"\n          />\n          <label class=\"custom-control-label\" for=\"customSwitch2\"></label>\n        </div>\n      </li>\n      <li class=\"mb-1 d-flex align-items-center cursor-pointer\">\n        <i data-feather=\"user\" class=\"mr-75 font-medium-3\"></i>\n        <span class=\"align-middle\">Invite Friends</span>\n      </li>\n      <li class=\"d-flex align-items-center cursor-pointer\">\n        <i data-feather=\"trash\" class=\"mr-75 font-medium-3\"></i>\n        <span class=\"align-middle\">Delete Account</span>\n      </li>\n    </ul>\n    <!--/ User settings -->\n\n    <!-- Logout Button -->\n    <div class=\"mt-3\">\n      <button class=\"btn btn-primary\" rippleEffect>\n        <span>Logout</span>\n      </button>\n    </div>\n    <!--/ Logout Button -->\n  </div>\n  <!-- User Details end -->\n</div>\n<!--/ Admin user profile area -->\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'chat-application' }\n})\nexport class ChatComponent {}\n","<div class=\"content-area-wrapper container-xxl p-0\">\n  <!-- sidebar Left -->\n\n  <!-- chat-sidebar -->\n  <div class=\"sidebar-left\">\n    <div class=\"sidebar\">\n      <core-sidebar\n        class=\"sidebar-content\"\n        name=\"chat-sidebar\"\n        overlayClass=\"body-content-overlay\"\n        collapsibleSidebar=\"bs-gt-lg\"\n      >\n        <app-chat-sidebar class=\"chat-sidebar-wrapper\"></app-chat-sidebar>\n      </core-sidebar>\n\n      <!--/ chat-sidebar -->\n\n      <!-- chat-user-sidebar -->\n\n      <core-sidebar\n        class=\"chat-profile-sidebar\"\n        name=\"chat-user-sidebar\"\n        overlayClass=\"body-content-overlay\"\n        hideOnEsc=\"true\"\n      >\n        <app-chat-user-sidebar></app-chat-user-sidebar>\n      </core-sidebar>\n    </div>\n  </div>\n  <!--/ chat-user-sidebar -->\n\n  <!--/ sidebar Left -->\n\n  <!-- content-right -->\n  <div class=\"content-right\">\n    <!-- chat-active-sidebar -->\n    <core-sidebar\n      class=\"user-profile-sidebar\"\n      name=\"chat-active-sidebar\"\n      overlayClass=\"body-content-overlay\"\n      hideOnEsc=\"true\"\n    >\n      <app-chat-active-sidebar></app-chat-active-sidebar>\n    </core-sidebar>\n    <!--/ chat-active-sidebar -->\n    <div class=\"content-wrapper container-xxl p-0\">\n      <div class=\"content-body\">\n        <app-chat-content></app-chat-content>\n      </div>\n    </div>\n  </div>\n  <!--/ content-right -->\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { CoreSidebarModule } from '@core/components';\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { ChatContentComponent } from 'app/main/apps/chat/chat-content/chat-content.component';\nimport { ChatSidebarComponent } from 'app/main/apps/chat/chat-sidebars/chat-sidebar/chat-sidebar.component';\nimport { ChatUserSidebarComponent } from 'app/main/apps/chat/chat-sidebars/chat-user-sidebar/chat-user-sidebar.component';\nimport { ChatActiveSidebarComponent } from 'app/main/apps/chat/chat-sidebars/chat-active-sidebar/chat-active-sidebar.component';\nimport { ChatComponent } from 'app/main/apps/chat/chat.component';\nimport { ChatService } from 'app/main/apps/chat/chat.service';\n\n// routing\nconst routes: Routes = [\n  {\n    path: '**',\n    component: ChatComponent,\n    resolve: {\n      chatData: ChatService\n    },\n    data: { animation: 'chat' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    ChatComponent,\n    ChatContentComponent,\n    ChatSidebarComponent,\n    ChatUserSidebarComponent,\n    ChatActiveSidebarComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreSidebarModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    PerfectScrollbarModule,\n    NgbModule\n  ],\n  providers: [ChatService]\n})\nexport class ChatModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ChatService {\n  public contacts: any[];\n  public chats: any[];\n  public userProfile;\n  public isChatOpen: Boolean;\n  public chatUsers: any[];\n  public selectedChat;\n  public selectedChatUser;\n\n  public onContactsChange: BehaviorSubject<any>;\n  public onChatsChange: BehaviorSubject<any>;\n  public onSelectedChatChange: BehaviorSubject<any>;\n  public onSelectedChatUserChange: BehaviorSubject<any>;\n  public onChatUsersChange: BehaviorSubject<any>;\n  public onChatOpenChange: BehaviorSubject<Boolean>;\n  public onUserProfileChange: BehaviorSubject<any>;\n\n  constructor(private _httpClient: HttpClient) {\n    this.isChatOpen = false;\n    this.onContactsChange = new BehaviorSubject([]);\n    this.onChatsChange = new BehaviorSubject([]);\n    this.onSelectedChatChange = new BehaviorSubject([]);\n    this.onSelectedChatUserChange = new BehaviorSubject([]);\n    this.onChatUsersChange = new BehaviorSubject([]);\n    this.onChatOpenChange = new BehaviorSubject(false);\n    this.onUserProfileChange = new BehaviorSubject([]);\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([\n        this.getContacts(),\n        this.getChats(),\n        this.getUserProfile(),\n        this.getActiveChats(),\n        this.getChatUsers()\n      ]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Contacts\n   */\n  getContacts(): Promise<any[]> {\n    const url = `api/chat-contacts`;\n\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(url).subscribe((response: any) => {\n        this.contacts = response;\n        this.onContactsChange.next(this.contacts);\n        resolve(this.contacts);\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Chats\n   */\n  getChats(): Promise<any[]> {\n    const url = `api/chat-chats`;\n\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(url).subscribe((response: any) => {\n        this.chats = response;\n        this.onChatsChange.next(this.chats);\n\n        resolve(this.chats);\n      }, reject);\n    });\n  }\n\n  /**\n   * Get User Profile\n   */\n  getUserProfile(): Promise<any[]> {\n    const url = `api/chat-profileUser`;\n\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(url).subscribe((response: any) => {\n        this.userProfile = response;\n        this.onUserProfileChange.next(this.userProfile);\n        resolve(this.userProfile);\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Selected Chat User\n   *\n   * @param userId\n   */\n  getSelectedChatUser(userId) {\n    const selectUser = this.contacts.find(contact => contact.id === userId);\n    this.selectedChatUser = selectUser;\n\n    this.onSelectedChatUserChange.next(this.selectedChatUser);\n  }\n\n  /**\n   * Get Active Chats\n   */\n  getActiveChats() {\n    const chatArr = this.chats.filter(chat => {\n      return this.contacts.some(contact => {\n        return contact.id === chat.userId;\n      });\n    });\n  }\n\n  /**\n   * Get Chat Users\n   */\n  getChatUsers() {\n    const contactArr = this.contacts.filter(contact => {\n      return this.chats.some(chat => {\n        return chat.userId === contact.id;\n      });\n    });\n    this.chatUsers = contactArr;\n    this.onChatUsersChange.next(this.chatUsers);\n  }\n\n  /**\n   * Selected Chats\n   *\n   * @param id\n   */\n  selectedChats(id) {\n    const selectChat = this.chats.find(chat => chat.userId === id);\n\n    // If Chat is Avaiable of Selected Id\n    if (selectChat !== undefined) {\n      this.selectedChat = selectChat;\n\n      this.onSelectedChatChange.next(this.selectedChat);\n      this.getSelectedChatUser(id);\n    }\n    // Else Create New Chat\n    else {\n      const newChat = {\n        userId: id,\n        unseenMsgs: 0\n      };\n      this.onSelectedChatChange.next(newChat);\n      this.getSelectedChatUser(id);\n    }\n  }\n\n  /**\n   * Create New Chat\n   *\n   * @param id\n   * @param chat\n   */\n  createNewChat(id, chat) {\n    const newChat = {\n      userId: id,\n      unseenMsgs: 0,\n      chat: [chat]\n    };\n\n    if (chat.message !== '') {\n      return new Promise<void>((resolve, reject) => {\n        this._httpClient.post('api/chat-chats/', { ...newChat }).subscribe(() => {\n          this.getChats();\n          this.getChatUsers();\n          this.getSelectedChatUser(id);\n          this.openChat(id);\n          resolve();\n        }, reject);\n      });\n    }\n  }\n\n  /**\n   * Open Chat\n   *\n   * @param id\n   */\n  openChat(id) {\n    this.isChatOpen = true;\n    this.onChatOpenChange.next(this.isChatOpen);\n    this.selectedChats(id);\n  }\n\n  /**\n   * Update Chat\n   *\n   * @param chats\n   */\n  updateChat(chats) {\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.post('api/chat-chats/' + chats.id, { ...chats }).subscribe(() => {\n        this.getChats();\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Update User Profile\n   *\n   * @param userProfileRef\n   */\n  updateUserProfile(userProfileRef) {\n    this.userProfile = userProfileRef;\n    this.onUserProfileChange.next(this.userProfile);\n  }\n}\n"],"sourceRoot":"webpack:///"}