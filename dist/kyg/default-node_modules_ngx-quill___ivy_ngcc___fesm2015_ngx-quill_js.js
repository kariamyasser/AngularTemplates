(self["webpackChunkkyg_angular_templates"] = self["webpackChunkkyg_angular_templates"] || []).push([["default-node_modules_ngx-quill___ivy_ngcc___fesm2015_ngx-quill_js"],{

/***/ 36858:
/*!*******************************************************************!*\
  !*** ./node_modules/ngx-quill/__ivy_ngcc__/fesm2015/ngx-quill.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QUILL_CONFIG_TOKEN": function() { return /* binding */ QUILL_CONFIG_TOKEN; },
/* harmony export */   "QuillEditorBase": function() { return /* binding */ QuillEditorBase; },
/* harmony export */   "QuillEditorComponent": function() { return /* binding */ QuillEditorComponent; },
/* harmony export */   "QuillModule": function() { return /* binding */ QuillModule; },
/* harmony export */   "QuillService": function() { return /* binding */ QuillService; },
/* harmony export */   "QuillViewComponent": function() { return /* binding */ QuillViewComponent; },
/* harmony export */   "QuillViewHTMLComponent": function() { return /* binding */ QuillViewHTMLComponent; },
/* harmony export */   "defaultModules": function() { return /* binding */ defaultModules; }
/* harmony export */ });
/* harmony import */ var C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ 28784);
/* harmony import */ var C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ 84999);
/* harmony import */ var C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ 66581);
/* harmony import */ var C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ 31112);
/* harmony import */ var C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ 41998);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser */ 39075);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 3679);






function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }










var _c0 = [[["", "quill-editor-toolbar", ""]]];
var _c1 = ["[quill-editor-toolbar]"];
var defaultModules = {
  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{
    header: 1
  }, {
    header: 2
  }], [{
    list: 'ordered'
  }, {
    list: 'bullet'
  }], [{
    script: 'sub'
  }, {
    script: 'super'
  }], [{
    indent: '-1'
  }, {
    indent: '+1'
  }], [{
    direction: 'rtl'
  }], [{
    size: ['small', false, 'large', 'huge']
  }], [{
    header: [1, 2, 3, 4, 5, 6, false]
  }], [{
    color: []
  }, {
    background: []
  }], [{
    font: []
  }], [{
    align: []
  }], ['clean'], ['link', 'image', 'video'] // link and image, video
  ]
};

var getFormat = function getFormat(format, configFormat) {
  var passedFormat = format || configFormat;
  return passedFormat || 'html';
};

var QUILL_CONFIG_TOKEN = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.InjectionToken('config');

var QuillService = /*#__PURE__*/function () {
  function QuillService(config) {
    (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this, QuillService);

    this.config = config;
    this.count = 0;

    if (!this.config) {
      this.config = {
        modules: defaultModules
      };
    }
  }

  (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__.default)(QuillService, [{
    key: "getQuill",
    value: function getQuill() {
      var _this = this;

      this.count++;

      if (!this.Quill && this.count === 1) {
        this.$importPromise = new Promise(function (resolve) {
          return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            var _this2 = this;

            var _a, _b, quillImport;

            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return __webpack_require__.e(/*! import() */ "node_modules_quill_dist_quill_js").then(__webpack_require__.t.bind(__webpack_require__, /*! quill */ 72161, 23));

                case 2:
                  quillImport = _context.sent;
                  this.Quill = quillImport.default ? quillImport.default : quillImport; // Only register custom options and modules once

                  (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach(function (customOption) {
                    var newCustomOption = _this2.Quill.import(customOption.import);

                    newCustomOption.whitelist = customOption.whitelist;

                    _this2.Quill.register(newCustomOption, true, _this2.config.suppressGlobalRegisterWarning);
                  });
                  (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(function (_ref) {
                    var implementation = _ref.implementation,
                        path = _ref.path;

                    _this2.Quill.register(path, implementation, _this2.config.suppressGlobalRegisterWarning);
                  });
                  resolve(this.Quill);

                case 7:
                case "end":
                  return _context.stop();
              }
            }, _callee, this);
          }));
        });
      }

      return this.$importPromise;
    }
  }]);

  return QuillService;
}();

QuillService.ɵfac = function QuillService_Factory(t) {
  return new (t || QuillService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](QUILL_CONFIG_TOKEN));
};

QuillService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({
  factory: function QuillService_Factory() {
    return new QuillService(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](QUILL_CONFIG_TOKEN));
  },
  token: QuillService,
  providedIn: "root"
});

QuillService.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [QUILL_CONFIG_TOKEN]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](QuillService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [QUILL_CONFIG_TOKEN]
      }]
    }];
  }, null);
})(); // eslint-disable-next-line @angular-eslint/directive-class-suffix


var QuillEditorBase = /*#__PURE__*/function () {
  function QuillEditorBase(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {
    var _this3 = this;

    (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this, QuillEditorBase);

    this.elementRef = elementRef;
    this.domSanitizer = domSanitizer;
    this.doc = doc;
    this.platformId = platformId;
    this.renderer = renderer;
    this.zone = zone;
    this.service = service;
    this.required = false;
    this.customToolbarPosition = 'top';
    this.sanitize = false;
    this.styles = null;
    this.strict = true;
    this.customOptions = [];
    this.customModules = [];
    this.preserveWhitespace = false;
    this.trimOnValidation = false;
    this.compareValues = false;
    this.filterNull = false;
    this.onEditorCreated = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.onEditorChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.onContentChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.onSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();
    this.disabled = false; // used to store initial value before ViewInit

    this.debounceTimers = [];

    this.valueGetter = function (quillEditor, editorElement) {
      var html = editorElement.querySelector('.ql-editor').innerHTML;

      if (html === '<p><br></p>' || html === '<div><br></div>') {
        html = null;
      }

      var modelValue = html;
      var format = getFormat(_this3.format, _this3.service.config.format);

      if (format === 'text') {
        modelValue = quillEditor.getText();
      } else if (format === 'object') {
        modelValue = quillEditor.getContents();
      } else if (format === 'json') {
        try {
          modelValue = JSON.stringify(quillEditor.getContents());
        } catch (e) {
          modelValue = quillEditor.getText();
        }
      }

      return modelValue;
    };

    this.valueSetter = function (quillEditor, value) {
      var format = getFormat(_this3.format, _this3.service.config.format);

      if (format === 'html') {
        if (_this3.sanitize) {
          value = _this3.domSanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__.SecurityContext.HTML, value);
        }

        return quillEditor.clipboard.convert(value);
      } else if (format === 'json') {
        try {
          return JSON.parse(value);
        } catch (e) {
          return [{
            insert: value
          }];
        }
      }

      return value;
    };

    this.selectionChangeHandler = function (range, oldRange, source) {
      var shouldTriggerOnModelTouched = !range && !!_this3.onModelTouched; // only emit changes when there's any listener

      if (!_this3.onBlur.observers.length && !_this3.onFocus.observers.length && !_this3.onSelectionChanged.observers.length && !shouldTriggerOnModelTouched) {
        return;
      }

      _this3.zone.run(function () {
        if (range === null) {
          _this3.onBlur.emit({
            editor: _this3.quillEditor,
            source: source
          });
        } else if (oldRange === null) {
          _this3.onFocus.emit({
            editor: _this3.quillEditor,
            source: source
          });
        }

        _this3.onSelectionChanged.emit({
          editor: _this3.quillEditor,
          oldRange: oldRange,
          range: range,
          source: source
        });

        if (shouldTriggerOnModelTouched) {
          _this3.onModelTouched();
        }
      });
    };

    this.textChangeHandler = function (delta, oldDelta, source) {
      // only emit changes emitted by user interactions
      var text = _this3.quillEditor.getText();

      var content = _this3.quillEditor.getContents();

      var html = _this3.editorElem.querySelector('.ql-editor').innerHTML;

      if (html === '<p><br></p>' || html === '<div><br></div>') {
        html = null;
      }

      var trackChanges = _this3.trackChanges || _this3.service.config.trackChanges;
      var shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!_this3.onModelChange; // only emit changes when there's any listener

      if (!_this3.onContentChanged.observers.length && !shouldTriggerOnModelChange) {
        return;
      }

      _this3.zone.run(function () {
        if (shouldTriggerOnModelChange) {
          _this3.onModelChange(_this3.valueGetter(_this3.quillEditor, _this3.editorElem));
        }

        _this3.onContentChanged.emit({
          content: content,
          delta: delta,
          editor: _this3.quillEditor,
          html: html,
          oldDelta: oldDelta,
          source: source,
          text: text
        });
      });
    }; // eslint-disable-next-line max-len


    this.editorChangeHandler = function (event, current, old, source) {
      // only emit changes when there's any listener
      if (!_this3.onEditorChanged.observers.length) {
        return;
      } // only emit changes emitted by user interactions


      if (event === 'text-change') {
        var text = _this3.quillEditor.getText();

        var content = _this3.quillEditor.getContents();

        var html = _this3.editorElem.querySelector('.ql-editor').innerHTML;

        if (html === '<p><br></p>' || html === '<div><br></div>') {
          html = null;
        }

        _this3.zone.run(function () {
          _this3.onEditorChanged.emit({
            content: content,
            delta: current,
            editor: _this3.quillEditor,
            event: event,
            html: html,
            oldDelta: old,
            source: source,
            text: text
          });
        });
      } else {
        _this3.onEditorChanged.emit({
          editor: _this3.quillEditor,
          event: event,
          oldRange: old,
          range: current,
          source: source
        });
      }
    };
  }

  (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__.default)(QuillEditorBase, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this4 = this;

        var Quill, toolbarElem, modules, placeholder, bounds, debug, readOnly, scrollingContainer, formats, format, newValue;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(0,_angular_common__WEBPACK_IMPORTED_MODULE_7__.isPlatformServer)(this.platformId)) {
                _context2.next = 2;
                break;
              }

              return _context2.abrupt("return");

            case 2:
              _context2.next = 4;
              return this.service.getQuill();

            case 4:
              Quill = _context2.sent;
              this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');
              this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');
              toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');
              modules = Object.assign({}, this.modules || this.service.config.modules);

              if (toolbarElem) {
                modules.toolbar = toolbarElem;
              } else if (modules.toolbar === undefined) {
                modules.toolbar = defaultModules.toolbar;
              }

              placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;

              if (placeholder === undefined) {
                placeholder = 'Insert text here ...';
              }

              if (this.styles) {
                Object.keys(this.styles).forEach(function (key) {
                  _this4.renderer.setStyle(_this4.editorElem, key, _this4.styles[key]);
                });
              }

              if (this.classes) {
                this.addClasses(this.classes);
              }

              this.customOptions.forEach(function (customOption) {
                var newCustomOption = Quill.import(customOption.import);
                newCustomOption.whitelist = customOption.whitelist;
                Quill.register(newCustomOption, true);
              });
              this.customModules.forEach(function (_ref2) {
                var implementation = _ref2.implementation,
                    path = _ref2.path;
                Quill.register(path, implementation);
              });
              bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;

              if (!bounds) {
                bounds = this.service.config.bounds ? this.service.config.bounds : this.doc.body;
              }

              debug = this.debug;

              if (!debug && debug !== false && this.service.config.debug) {
                debug = this.service.config.debug;
              }

              readOnly = this.readOnly;

              if (!readOnly && this.readOnly !== false) {
                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;
              }

              scrollingContainer = this.scrollingContainer;

              if (!scrollingContainer && this.scrollingContainer !== null) {
                scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;
              }

              formats = this.formats;

              if (!formats && formats === undefined) {
                formats = this.service.config.formats ? (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__.default)(this.service.config.formats) : this.service.config.formats === null ? null : undefined;
              }

              this.zone.runOutsideAngular(function () {
                var _a, _b, _c;

                _this4.quillEditor = new Quill(_this4.editorElem, {
                  bounds: bounds,
                  debug: debug,
                  formats: formats,
                  modules: modules,
                  placeholder: placeholder,
                  readOnly: readOnly,
                  scrollingContainer: scrollingContainer,
                  strict: _this4.strict,
                  theme: _this4.theme || (_this4.service.config.theme ? _this4.service.config.theme : 'snow')
                }); // Set optional link placeholder, Quill has no native API for it so using workaround

                if (_this4.linkPlaceholder) {
                  var tooltip = (_b = (_a = _this4.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;
                  var input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');

                  if (input === null || input === void 0 ? void 0 : input.dataset) {
                    input.dataset.link = _this4.linkPlaceholder;
                  }
                }
              });

              if (this.content) {
                format = getFormat(this.format, this.service.config.format);

                if (format === 'text') {
                  this.quillEditor.setText(this.content, 'silent');
                } else {
                  newValue = this.valueSetter(this.quillEditor, this.content);
                  this.quillEditor.setContents(newValue, 'silent');
                }

                this.quillEditor.getModule('history').clear();
              } // initialize disabled status based on this.disabled as default value


              this.setDisabledState(); // triggered if selection or text changed

              this.editorChangeHandlerRef = this.debounce(this.editorChangeHandler);
              this.quillEditor.on('editor-change', this.editorChangeHandlerRef); // mark model as touched if editor lost focus

              this.quillEditor.on('selection-change', this.selectionChangeHandler); // update model if text changes

              this.textChangeHandlerRef = this.debounce(this.textChangeHandler);
              this.quillEditor.on('text-change', this.textChangeHandlerRef); // trigger created in a timeout to avoid changed models after checked
              // if you are using the editor api in created output to change the editor content

              setTimeout(function () {
                if (_this4.onValidatorChanged) {
                  _this4.onValidatorChanged();
                }

                _this4.onEditorCreated.emit(_this4.quillEditor);
              });

            case 35:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var _this5 = this;

      if (this.quillEditor) {
        this.quillEditor.off('selection-change', this.selectionChangeHandler);
        this.quillEditor.off('text-change', this.textChangeHandlerRef);
        this.quillEditor.off('editor-change', this.editorChangeHandlerRef);
        this.debounceTimers.forEach(function (timer) {
          return _this5.clearDebounceTimer(timer);
        });
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var _this6 = this;

      if (!this.quillEditor) {
        return;
      }
      /* eslint-disable @typescript-eslint/dot-notation */


      if (changes.readOnly) {
        this.quillEditor.enable(!changes.readOnly.currentValue);
      }

      if (changes.placeholder) {
        this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;
      }

      if (changes.styles) {
        var currentStyling = changes.styles.currentValue;
        var previousStyling = changes.styles.previousValue;

        if (previousStyling) {
          Object.keys(previousStyling).forEach(function (key) {
            _this6.renderer.removeStyle(_this6.editorElem, key);
          });
        }

        if (currentStyling) {
          Object.keys(currentStyling).forEach(function (key) {
            _this6.renderer.setStyle(_this6.editorElem, key, _this6.styles[key]);
          });
        }
      }

      if (changes.classes) {
        var currentClasses = changes.classes.currentValue;
        var previousClasses = changes.classes.previousValue;

        if (previousClasses) {
          this.removeClasses(previousClasses);
        }

        if (currentClasses) {
          this.addClasses(currentClasses);
        }
      }
      /* eslint-enable @typescript-eslint/dot-notation */

    }
  }, {
    key: "addClasses",
    value: function addClasses(classList) {
      var _this7 = this;

      QuillEditorBase.normalizeClassNames(classList).forEach(function (c) {
        _this7.renderer.addClass(_this7.editorElem, c);
      });
    }
  }, {
    key: "removeClasses",
    value: function removeClasses(classList) {
      var _this8 = this;

      QuillEditorBase.normalizeClassNames(classList).forEach(function (c) {
        _this8.renderer.removeClass(_this8.editorElem, c);
      });
    }
  }, {
    key: "writeValue",
    value: function writeValue(currentValue) {
      // optional fix for https://github.com/angular/angular/issues/14988
      if (this.filterNull && currentValue === null) {
        return;
      }

      this.content = currentValue;

      if (!this.quillEditor) {
        return;
      }

      var format = getFormat(this.format, this.service.config.format);
      var newValue = this.valueSetter(this.quillEditor, currentValue);

      if (this.compareValues) {
        var currentEditorValue = this.quillEditor.getContents();

        if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {
          return;
        }
      }

      if (currentValue) {
        if (format === 'text') {
          this.quillEditor.setText(currentValue);
        } else {
          this.quillEditor.setContents(newValue);
        }

        return;
      }

      this.quillEditor.setText('');
    }
  }, {
    key: "setDisabledState",
    value: function setDisabledState() {
      var isDisabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.disabled;
      // store initial value to set appropriate disabled status after ViewInit
      this.disabled = isDisabled;

      if (this.quillEditor) {
        if (isDisabled) {
          this.quillEditor.disable();
          this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');
        } else {
          if (!this.readOnly) {
            this.quillEditor.enable();
          }

          this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');
        }
      }
    }
  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this.onModelChange = fn;
    }
  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this.onModelTouched = fn;
    }
  }, {
    key: "registerOnValidatorChange",
    value: function registerOnValidatorChange(fn) {
      this.onValidatorChanged = fn;
    }
  }, {
    key: "validate",
    value: function validate() {
      if (!this.quillEditor) {
        return null;
      }

      var err = {};
      var valid = true;
      var text = this.quillEditor.getText(); // trim text if wanted + handle special case that an empty editor contains a new line

      var textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;

      if (this.minLength && textLength && textLength < this.minLength) {
        err.minLengthError = {
          given: textLength,
          minLength: this.minLength
        };
        valid = false;
      }

      if (this.maxLength && textLength > this.maxLength) {
        err.maxLengthError = {
          given: textLength,
          maxLength: this.maxLength
        };
        valid = false;
      }

      if (this.required && !textLength) {
        err.requiredError = {
          empty: true
        };
        valid = false;
      }

      return valid ? null : err;
    }
  }, {
    key: "debounce",
    value: function debounce(callback) {
      var _this9 = this;

      var timer;
      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        if (typeof _this9.debounceTime !== 'number') {
          callback.apply(void 0, args);
          return;
        }

        _this9.clearDebounceTimer(timer);

        timer = _this9.doc.defaultView.setTimeout(function () {
          _this9.clearDebounceTimer(timer);

          callback.apply(void 0, args);
        }, _this9.debounceTime);

        _this9.debounceTimers.push(timer);
      };
    }
  }, {
    key: "clearDebounceTimer",
    value: function clearDebounceTimer(timer) {
      this.doc.defaultView.clearTimeout(timer);
      this.debounceTimers = this.debounceTimers.filter(function (debounceTimer) {
        return debounceTimer !== timer;
      });
    }
  }], [{
    key: "normalizeClassNames",
    value: function normalizeClassNames(classes) {
      var classList = classes.trim().split(' ');
      return classList.reduce(function (prev, cur) {
        var trimmed = cur.trim();

        if (trimmed) {
          prev.push(trimmed);
        }

        return prev;
      }, []);
    }
  }]);

  return QuillEditorBase;
}();

QuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) {
  return new (t || QuillEditorBase)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__.DOCUMENT), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](QuillService));
};

QuillEditorBase.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineDirective"]({
  type: QuillEditorBase,
  inputs: {
    required: "required",
    customToolbarPosition: "customToolbarPosition",
    sanitize: "sanitize",
    styles: "styles",
    strict: "strict",
    customOptions: "customOptions",
    customModules: "customModules",
    preserveWhitespace: "preserveWhitespace",
    trimOnValidation: "trimOnValidation",
    compareValues: "compareValues",
    filterNull: "filterNull",
    valueGetter: "valueGetter",
    valueSetter: "valueSetter",
    format: "format",
    theme: "theme",
    modules: "modules",
    debug: "debug",
    readOnly: "readOnly",
    placeholder: "placeholder",
    maxLength: "maxLength",
    minLength: "minLength",
    formats: "formats",
    scrollingContainer: "scrollingContainer",
    bounds: "bounds",
    trackChanges: "trackChanges",
    classes: "classes",
    linkPlaceholder: "linkPlaceholder",
    debounceTime: "debounceTime"
  },
  outputs: {
    onEditorCreated: "onEditorCreated",
    onEditorChanged: "onEditorChanged",
    onContentChanged: "onContentChanged",
    onSelectionChanged: "onSelectionChanged",
    onFocus: "onFocus",
    onBlur: "onBlur"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵNgOnChangesFeature"]]
});

QuillEditorBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef
  }, {
    type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.DOCUMENT]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone
  }, {
    type: QuillService
  }];
};

QuillEditorBase.propDecorators = {
  format: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  theme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  modules: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  debug: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  readOnly: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  maxLength: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  minLength: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  required: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  formats: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  customToolbarPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  sanitize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  styles: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  strict: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  scrollingContainer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  bounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  customOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  customModules: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  trackChanges: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  preserveWhitespace: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  classes: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  trimOnValidation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  linkPlaceholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  compareValues: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  filterNull: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  debounceTime: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  onEditorCreated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }],
  onEditorChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }],
  onContentChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }],
  onSelectionChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }],
  onFocus: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }],
  onBlur: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }],
  valueGetter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  valueSetter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](QuillEditorBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Directive
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.DOCUMENT]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone
    }, {
      type: QuillService
    }];
  }, {
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    customToolbarPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    sanitize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    styles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    strict: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    customOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    customModules: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    preserveWhitespace: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    trimOnValidation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    compareValues: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    filterNull: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    onEditorCreated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    onEditorChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    onContentChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    onSelectionChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    onFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    onBlur: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    valueGetter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    valueSetter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    format: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    modules: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    debug: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    readOnly: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    maxLength: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    minLength: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    formats: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    scrollingContainer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    bounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    trackChanges: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    classes: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    linkPlaceholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    debounceTime: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  });
})();

var QuillEditorComponent = /*#__PURE__*/function (_QuillEditorBase) {
  (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__.default)(QuillEditorComponent, _QuillEditorBase);

  var _super = (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__.default)(QuillEditorComponent);

  function QuillEditorComponent(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {
    (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this, QuillEditorComponent);

    return _super.call(this, elementRef, domSanitizer, doc, platformId, renderer, zone, service);
  }

  return (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__.default)(QuillEditorComponent);
}(QuillEditorBase);

QuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) {
  return new (t || QuillEditorComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__.DOCUMENT), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](QuillService));
};

QuillEditorComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: QuillEditorComponent,
  selectors: [["quill-editor"]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵProvidersFeature"]([{
    multi: true,
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NG_VALUE_ACCESSOR,
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function () {
      return QuillEditorComponent;
    })
  }, {
    multi: true,
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NG_VALIDATORS,
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function () {
      return QuillEditorComponent;
    })
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c1,
  decls: 1,
  vars: 0,
  template: function QuillEditorComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojectionDef"](_c0);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojection"](0);
    }
  },
  encapsulation: 2
});

QuillEditorComponent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef]
    }]
  }, {
    type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.DOCUMENT]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone]
    }]
  }, {
    type: QuillService,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [QuillService]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](QuillEditorComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component,
    args: [{
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
      providers: [{
        multi: true,
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NG_VALUE_ACCESSOR,
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function () {
          return QuillEditorComponent;
        })
      }, {
        multi: true,
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NG_VALIDATORS,
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.forwardRef)(function () {
          return QuillEditorComponent;
        })
      }],
      selector: 'quill-editor',
      template: "\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n"
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef]
      }]
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.DOCUMENT]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone]
      }]
    }, {
      type: QuillService,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [QuillService]
      }]
    }];
  }, null);
})();

var QuillViewHTMLComponent = /*#__PURE__*/function () {
  function QuillViewHTMLComponent(sanitizer, service) {
    (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this, QuillViewHTMLComponent);

    this.sanitizer = sanitizer;
    this.service = service;
    this.content = '';
    this.sanitize = false;
    this.innerHTML = '';
    this.themeClass = 'ql-snow';
  }

  (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__.default)(QuillViewHTMLComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.theme) {
        var theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');
        this.themeClass = "ql-".concat(theme, " ngx-quill-view-html");
      } else if (!this.theme) {
        var _theme = this.service.config.theme ? this.service.config.theme : 'snow';

        this.themeClass = "ql-".concat(_theme, " ngx-quill-view-html");
      }

      if (changes.content) {
        var content = changes.content.currentValue;
        this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);
      }
    }
  }]);

  return QuillViewHTMLComponent;
}();

QuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) {
  return new (t || QuillViewHTMLComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](QuillService));
};

QuillViewHTMLComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: QuillViewHTMLComponent,
  selectors: [["quill-view-html"]],
  inputs: {
    content: "content",
    sanitize: "sanitize",
    theme: "theme"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 2,
  consts: [[1, "ql-container", 3, "ngClass"], [1, "ql-editor", 3, "innerHTML"]],
  template: function QuillViewHTMLComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", ctx.themeClass);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("innerHTML", ctx.innerHTML, _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsanitizeHtml"]);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.NgClass],
  styles: ["\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n"],
  encapsulation: 2
});

QuillViewHTMLComponent.ctorParameters = function () {
  return [{
    type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer]
    }]
  }, {
    type: QuillService
  }];
};

QuillViewHTMLComponent.propDecorators = {
  content: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  theme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  sanitize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](QuillViewHTMLComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component,
    args: [{
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
      selector: 'quill-view-html',
      template: "\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n",
      styles: ["\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n"]
    }]
  }], function () {
    return [{
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer]
      }]
    }, {
      type: QuillService
    }];
  }, {
    content: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    sanitize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  });
})();

var QuillViewComponent = /*#__PURE__*/function () {
  function QuillViewComponent(elementRef, renderer, zone, service, domSanitizer, platformId) {
    var _this10 = this;

    (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this, QuillViewComponent);

    this.elementRef = elementRef;
    this.renderer = renderer;
    this.zone = zone;
    this.service = service;
    this.domSanitizer = domSanitizer;
    this.platformId = platformId;
    this.sanitize = false;
    this.strict = true;
    this.customModules = [];
    this.customOptions = [];
    this.preserveWhitespace = false;
    this.onEditorCreated = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter();

    this.valueSetter = function (quillEditor, value) {
      var format = getFormat(_this10.format, _this10.service.config.format);
      var content = value;

      if (format === 'text') {
        quillEditor.setText(content);
      } else {
        if (format === 'html') {
          if (_this10.sanitize) {
            value = _this10.domSanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__.SecurityContext.HTML, value);
          }

          content = quillEditor.clipboard.convert(value);
        } else if (format === 'json') {
          try {
            content = JSON.parse(value);
          } catch (e) {
            content = [{
              insert: value
            }];
          }
        }

        quillEditor.setContents(content);
      }
    };
  }

  (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__.default)(QuillViewComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.quillEditor) {
        return;
      }

      if (changes.content) {
        this.valueSetter(this.quillEditor, changes.content.currentValue);
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var _this11 = this;

        var Quill, modules, debug, formats, theme;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (!(0,_angular_common__WEBPACK_IMPORTED_MODULE_7__.isPlatformServer)(this.platformId)) {
                _context3.next = 2;
                break;
              }

              return _context3.abrupt("return");

            case 2:
              _context3.next = 4;
              return this.service.getQuill();

            case 4:
              Quill = _context3.sent;
              modules = Object.assign({}, this.modules || this.service.config.modules);
              modules.toolbar = false;
              this.customOptions.forEach(function (customOption) {
                var newCustomOption = Quill.import(customOption.import);
                newCustomOption.whitelist = customOption.whitelist;
                Quill.register(newCustomOption, true);
              });
              this.customModules.forEach(function (_ref3) {
                var implementation = _ref3.implementation,
                    path = _ref3.path;
                Quill.register(path, implementation);
              });
              debug = this.debug;

              if (!debug && debug !== false && this.service.config.debug) {
                debug = this.service.config.debug;
              }

              formats = this.formats;

              if (!formats && formats === undefined) {
                formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;
              }

              theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');
              this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');
              this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');
              this.zone.runOutsideAngular(function () {
                _this11.quillEditor = new Quill(_this11.editorElem, {
                  debug: debug,
                  formats: formats,
                  modules: modules,
                  readOnly: true,
                  strict: _this11.strict,
                  theme: theme
                });
              });
              this.renderer.addClass(this.editorElem, 'ngx-quill-view');

              if (this.content) {
                this.valueSetter(this.quillEditor, this.content);
              } // trigger created in a timeout to avoid changed models after checked


              setTimeout(function () {
                _this11.onEditorCreated.emit(_this11.quillEditor);
              });

            case 20:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
    }
  }]);

  return QuillViewComponent;
}();

QuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) {
  return new (t || QuillViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](QuillService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID));
};

QuillViewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: QuillViewComponent,
  selectors: [["quill-view"]],
  inputs: {
    sanitize: "sanitize",
    strict: "strict",
    customModules: "customModules",
    customOptions: "customOptions",
    preserveWhitespace: "preserveWhitespace",
    format: "format",
    theme: "theme",
    modules: "modules",
    debug: "debug",
    formats: "formats",
    content: "content"
  },
  outputs: {
    onEditorCreated: "onEditorCreated"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function QuillViewComponent_Template(rf, ctx) {},
  styles: ["\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n"],
  encapsulation: 2
});

QuillViewComponent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone
  }, {
    type: QuillService
  }, {
    type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID]
    }]
  }];
};

QuillViewComponent.propDecorators = {
  format: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  theme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  modules: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  debug: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  formats: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  sanitize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  strict: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  content: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  customModules: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  customOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  preserveWhitespace: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
  }],
  onEditorCreated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](QuillViewComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component,
    args: [{
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ViewEncapsulation.None,
      selector: 'quill-view',
      template: "\n",
      styles: ["\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Renderer2
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgZone
    }, {
      type: QuillService
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.DomSanitizer
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_5__.PLATFORM_ID]
      }]
    }];
  }, {
    sanitize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    strict: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    customModules: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    customOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    preserveWhitespace: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    onEditorCreated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Output
    }],
    format: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    modules: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    debug: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    formats: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }],
    content: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.Input
    }]
  });
})();

var QuillModule = /*#__PURE__*/function () {
  function QuillModule() {
    (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this, QuillModule);
  }

  (0,C_Users_m3nbbs_Downloads_Template_vuexylaravel_740_angular_version_full_version_full_version_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__.default)(QuillModule, null, [{
    key: "forRoot",
    value: function forRoot(config) {
      return {
        ngModule: QuillModule,
        providers: [{
          provide: QUILL_CONFIG_TOKEN,
          useValue: config
        }]
      };
    }
  }]);

  return QuillModule;
}();

QuillModule.ɵfac = function QuillModule_Factory(t) {
  return new (t || QuillModule)();
};

QuillModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineNgModule"]({
  type: QuillModule
});
QuillModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjector"]({
  providers: [QuillService],
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule]]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](QuillModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule,
    args: [{
      declarations: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],
      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule],
      providers: [QuillService]
    }]
  }], null, null);
})();

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsetNgModuleScope"](QuillModule, {
    declarations: function declarations() {
      return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule];
    },
    exports: function exports() {
      return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent];
    }
  });
})();
/*
 * Public API Surface of ngx-quill
 */

/**
 * Generated bundle index. Do not edit.
 */


 //# sourceMappingURL=ngx-quill.js.map

/***/ })

}]);
//# sourceMappingURL=default-node_modules_ngx-quill___ivy_ngcc___fesm2015_ngx-quill_js.js.map