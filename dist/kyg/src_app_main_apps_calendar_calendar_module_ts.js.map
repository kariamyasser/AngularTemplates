{"version":3,"sources":["./src/app/main/apps/calendar/calendar-sidebar/calendar-event-sidebar/calendar-event-sidebar.component.ts","./src/app/main/apps/calendar/calendar-sidebar/calendar-event-sidebar/calendar-event-sidebar.component.html","./src/app/main/apps/calendar/calendar-sidebar/calendar-main-sidebar/calendar-main-sidebar.component.html","./src/app/main/apps/calendar/calendar-sidebar/calendar-main-sidebar/calendar-main-sidebar.component.ts","./src/app/main/apps/calendar/calendar.component.ts","./src/app/main/apps/calendar/calendar.component.html","./src/app/main/apps/calendar/calendar.model.ts","./src/app/main/apps/calendar/calendar.module.ts","./src/app/main/apps/calendar/calendar.service.ts"],"names":[],"mappings":"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","file":"src_app_main_apps_calendar_calendar_module_ts.js","sourcesContent":["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { EventRef } from 'app/main/apps/calendar/calendar.model';\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\n\n@Component({\n  selector: 'app-calendar-event-sidebar',\n  templateUrl: './calendar-event-sidebar.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class CalendarEventSidebarComponent implements OnInit {\n  //  Decorator\n  @ViewChild('startDatePicker') startDatePicker;\n  @ViewChild('endDatePicker') endDatePicker;\n\n  // Public\n  public event: EventRef;\n  public isDataEmpty;\n  public selectLabel = [\n    { label: 'Business', bullet: 'primary' },\n    { label: 'Personal', bullet: 'danger' },\n    { label: 'Family', bullet: 'warning' },\n    { label: 'Holiday', bullet: 'success' },\n    { label: 'ETC', bullet: 'info' }\n  ];\n  public selectGuest = [\n    { name: 'Jane Foster', avatar: 'assets/images/avatars/1-small.png' },\n    { name: 'Donna Frank', avatar: 'assets/images/avatars/3-small.png' },\n    { name: 'Gabrielle Robertson', avatar: 'assets/images/avatars/5-small.png' },\n    { name: 'Lori Spears', avatar: 'assets/images/avatars/7-small.png' },\n    { name: 'Sandy Vega', avatar: 'assets/images/avatars/9-small.png' },\n    { name: 'Cheryl May', avatar: 'assets/images/avatars/11-small.png' }\n  ];\n  public startDateOptions = {\n    altInput: true,\n    mode: 'single',\n    altInputClass: 'form-control flat-picker flatpickr-input invoice-edit-input',\n    enableTime: true\n  };\n  public endDateOptions = {\n    altInput: true,\n    mode: 'single',\n    altInputClass: 'form-control flat-picker flatpickr-input invoice-edit-input',\n    enableTime: true\n  };\n\n  /**\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   * @param {CalendarService} _calendarService\n   */\n  constructor(private _coreSidebarService: CoreSidebarService, private _calendarService: CalendarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle Event Sidebar\n   */\n  toggleEventSidebar() {\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\n  }\n\n  /**\n   * Add Event\n   *\n   * @param eventForm\n   */\n  addEvent(eventForm) {\n    if (eventForm.valid) {\n      //! Fix: Temp fix till ng2-flatpicker support ng-modal (Getting NG0100: Expression has changed after it was checked error if we use ng-model with ng2-flatpicker)\n      eventForm.form.value.start = this.startDatePicker.flatpickrElement.nativeElement.children[0].value;\n      eventForm.form.value.end = this.endDatePicker.flatpickrElement.nativeElement.children[0].value;\n\n      this._calendarService.addEvent(eventForm.form.value);\n      this.toggleEventSidebar();\n    }\n  }\n\n  /**\n   * Update Event\n   */\n  updateEvent() {\n    this.toggleEventSidebar();\n    //! Fix: Temp fix till ng2-flatpicker support ng-modal\n    this.event.start = this.startDatePicker.flatpickrElement.nativeElement.children[0].value;\n    this.event.end = this.endDatePicker.flatpickrElement.nativeElement.children[0].value;\n    this._calendarService.postUpdatedEvent(this.event);\n  }\n\n  /**\n   * Delete Event\n   */\n  deleteEvent() {\n    this._calendarService.deleteEvent(this.event);\n    this.toggleEventSidebar();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to current event changes\n    this._calendarService.onCurrentEventChange.subscribe(response => {\n      this.event = response;\n\n      // If Event is available\n      if (Object.keys(response).length > 0) {\n        this.event = response;\n        this.isDataEmpty = false;\n        if (response.id === undefined) {\n          this.isDataEmpty = true;\n        }\n      }\n      // else Create New Event\n      else {\n        this.event = new EventRef();\n\n        // Clear Flatpicker Values\n        setTimeout(() => {\n          this.startDatePicker.flatpickr.clear();\n          this.endDatePicker.flatpickr.clear();\n        });\n        this.isDataEmpty = true;\n      }\n    });\n  }\n}\n","<!-- Calendar Add/Update/Delete event modal-->\n<div class=\"modal-dialog sidebar-lg\">\n  <div class=\"modal-content p-0\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"toggleEventSidebar()\">\n      ×\n    </button>\n    <div class=\"modal-header mb-1\">\n      <h5 class=\"modal-title\">{{ isDataEmpty === true ? 'Add' : 'Update' }} Event</h5>\n    </div>\n    <div class=\"modal-body flex-grow-1 pb-sm-0 pb-3\">\n      <form\n        class=\"event-form needs-validation\"\n        (ngSubmit)=\"(eventForm.form.valid); eventForm.reset()\"\n        #eventForm=\"ngForm\"\n      >\n        <div class=\"form-group\">\n          <label for=\"title\" class=\"form-label\">Title</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Event Title\"\n            required\n            [(ngModel)]=\"event.title\"\n            [class.error]=\"eventForm.submitted && formNameRef.invalid\"\n            #formNameRef=\"ngModel\"\n          />\n          <span *ngIf=\"eventForm.submitted && formNameRef.invalid\" class=\"invalid-form\">\n            <small class=\"form-text text-danger\" *ngIf=\"formNameRef.errors.required\">This field is required!</small>\n          </span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"select-label\" class=\"form-label\">Label</label>\n          <ng-select\n            [items]=\"selectLabel\"\n            name=\"selectlabel\"\n            [(ngModel)]=\"event.calendar\"\n            bindLabel=\"label\"\n            bindValue=\"label\"\n            required\n            [class.error]=\"eventForm.submitted && formLabelRef.invalid\"\n            #formLabelRef=\"ngModel\"\n          >\n            <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\n              <span class=\"bullet bullet-sm mr-50 bullet-{{ item.bullet }}\"></span>\n              {{ item.label }}\n            </ng-template>\n          </ng-select>\n          <span *ngIf=\"eventForm.submitted && formLabelRef.invalid\" class=\"invalid-form\">\n            <small class=\"form-text text-danger\" *ngIf=\"formLabelRef.errors.required\">Label is required!</small>\n          </span>\n        </div>\n        <div class=\"form-group position-relative\">\n          <label for=\"start-date\" class=\"form-label\">Start Date</label>\n          <ng2-flatpickr\n            [config]=\"startDateOptions\"\n            name=\"startDate\"\n            [setDate]=\"event.start\"\n            #startDatePicker\n            required\n            [class.error]=\"eventForm.submitted\"\n          ></ng2-flatpickr>\n        </div>\n        <div class=\"form-group position-relative\">\n          <label for=\"end-date\" class=\"form-label\">End Date</label>\n          <ng2-flatpickr\n            [config]=\"endDateOptions\"\n            name=\"endDate\"\n            [setDate]=\"event.end\"\n            #endDatePicker\n            required\n            [class.error]=\"eventForm.submitted\"\n          ></ng2-flatpickr>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"custom-control custom-switch\">\n            <input\n              type=\"checkbox\"\n              class=\"custom-control-input allDay-switch\"\n              id=\"customSwitch3\"\n              [(ngModel)]=\"event.allDay\"\n              name=\"allDay\"\n            />\n            <label class=\"custom-control-label\" for=\"customSwitch3\">All Day</label>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"event-url\" class=\"form-label\">Event URL</label>\n          <input\n            type=\"url\"\n            [(ngModel)]=\"event.url\"\n            name=\"url\"\n            class=\"form-control\"\n            id=\"event-url\"\n            placeholder=\"https://www.google.com\"\n          />\n        </div>\n        <div class=\"form-group select2-primary\">\n          <label for=\"event-guests\" class=\"form-label\">Add Guests</label>\n          <ng-select\n            [items]=\"selectGuest\"\n            name=\"selectGuest\"\n            [(ngModel)]=\"event.extendedProps.addGuest\"\n            bindLabel=\"name\"\n          >\n            <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\n              <div class=\"media align-items-center\">\n                <img\n                  class=\"d-block rounded-circle mr-50\"\n                  [src]=\"item.avatar\"\n                  height=\"26\"\n                  width=\"26\"\n                  [alt]=\"item.name\"\n                />\n                <div class=\"media-body\">\n                  <p class=\"mb-0\">{{ item.name }}</p>\n                </div>\n              </div>\n            </ng-template>\n          </ng-select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"event-location\" class=\"form-label\">Location</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"event-location\"\n            placeholder=\"Enter Location\"\n            [(ngModel)]=\"event.extendedProps.location\"\n            name=\"location\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label class=\"form-label\">Description</label>\n          <textarea\n            name=\"event-description-editor\"\n            id=\"event-description-editor\"\n            class=\"form-control\"\n            [(ngModel)]=\"event.extendedProps.description\"\n            name=\"description\"\n          ></textarea>\n        </div>\n        <div class=\"form-group d-flex\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary add-event-btn mr-1\"\n            *ngIf=\"isDataEmpty !== false; else addEventRef\"\n            (click)=\"addEvent(eventForm)\"\n            rippleEffect\n          >\n            Add\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-cancel\"\n            data-dismiss=\"modal\"\n            (click)=\"toggleEventSidebar()\"\n            *ngIf=\"isDataEmpty !== false; else deleteEventRef\"\n            rippleEffect\n          >\n            Cancel\n          </button>\n          <ng-template #addEventRef>\n            <button type=\"submit\" class=\"btn btn-primary update-event-btn mr-1\" (click)=\"updateEvent()\" rippleEffect>\n              Update\n            </button>\n          </ng-template>\n          <ng-template #deleteEventRef>\n            <button class=\"btn btn-outline-danger btn-delete-event\" (click)=\"deleteEvent()\" rippleEffect>Delete</button>\n          </ng-template>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<!--/ Calendar Add/Update/Delete event modal-->\n","<!-- Main Sidebar -->\n<div class=\"sidebar-wrapper\">\n  <div class=\"card-body d-flex justify-content-center\">\n    <button class=\"btn btn-primary btn-toggle-sidebar btn-block\" (click)=\"AddEvent()\" rippleEffect>\n      <span class=\"align-middle\">Add Event</span>\n    </button>\n  </div>\n  <div class=\"card-body pb-0\">\n    <h5 class=\"section-label mb-1\">\n      <span class=\"align-middle\">Filter</span>\n    </h5>\n    <div class=\"custom-control custom-checkbox mb-1\">\n      <input\n        type=\"checkbox\"\n        class=\"custom-control-input select-all\"\n        id=\"select-all\"\n        [checked]=\"checkAll\"\n        (change)=\"toggleCheckboxAll($event)\"\n      />\n      <label class=\"custom-control-label\" for=\"select-all\">View All</label>\n    </div>\n    <div class=\"calendar-events-filter\">\n      <div\n        class=\"custom-control  custom-checkbox mb-1 custom-control-{{ calendar.color }}\"\n        *ngFor=\"let calendar of calendarRef\"\n      >\n        <input\n          type=\"checkbox\"\n          (change)=\"checkboxChange($event, calendar.id)\"\n          class=\"custom-control-input input-filter\"\n          id=\"calendar-{{ calendar.id }}\"\n          [checked]=\"calendar.checked\"\n        />\n        <label class=\"custom-control-label\" for=\"calendar-{{ calendar.id }}\">{{ calendar.filter }}</label>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"mt-auto\">\n  <img src=\"assets/images/pages/calendar-illustration.png\" alt=\"Calendar illustration\" class=\"img-fluid\" />\n</div>\n<!--/ Main Sidebar -->\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\n\n@Component({\n  selector: 'app-calendar-main-sidebar',\n  templateUrl: './calendar-main-sidebar.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class CalendarMainSidebarComponent implements OnInit {\n  // Public\n  public calendarRef = [];\n  public tempRef = [];\n  public checkAll = true;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   * @param {CalendarService} _calendarService\n   */\n  constructor(private _coreSidebarService: CoreSidebarService, private _calendarService: CalendarService) {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle Event Sidebar\n   */\n  toggleEventSidebar() {\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\n  }\n\n  /**\n   * Add Event\n   *\n   */\n  AddEvent() {\n    this.toggleEventSidebar();\n    this._coreSidebarService.getSidebarRegistry('calendar-main-sidebar').toggleOpen();\n    this._calendarService.createNewEvent();\n  }\n\n  /**\n   * If all checkbox are checked : returns TRUE\n   */\n  allChecked() {\n    return this.calendarRef.every(v => v.checked === true);\n  }\n\n  /**\n   * Checkbox Change\n   *\n   * @param event\n   * @param id\n   */\n  checkboxChange(event, id) {\n    const index = this.calendarRef.findIndex(r => {\n      if (r.id === id) {\n        return id;\n      }\n    });\n    this.calendarRef[index].checked = event.target.checked;\n    this._calendarService.calendarUpdate(this.calendarRef);\n    this.checkAll = this.allChecked();\n  }\n\n  /**\n   * Toggle All Checkbox\n   *\n   * @param event\n   */\n  toggleCheckboxAll(event) {\n    this.checkAll = event.target.checked;\n    if (this.checkAll) {\n      this.calendarRef.map(res => {\n        res.checked = true;\n      });\n    } else {\n      this.calendarRef.map(res => {\n        res.checked = false;\n      });\n    }\n    this._calendarService.calendarUpdate(this.calendarRef);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to Calendar changes\n    this._calendarService.onCalendarChange.subscribe(res => {\n      this.calendarRef = res;\n    });\n  }\n}\n","import { Component, OnInit, AfterViewInit, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CalendarOptions, EventClickArg } from '@fullcalendar/angular';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { CoreConfigService } from '@core/services/config.service';\n\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\nimport { EventRef } from 'app/main/apps/calendar/calendar.model';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CalendarComponent implements OnInit, AfterViewInit {\n  // Public\n  public slideoutShow = false;\n  public events = [];\n  public event;\n\n  public calendarOptions: CalendarOptions = {\n    headerToolbar: {\n      start: 'sidebarToggle, prev,next, title',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n    },\n    initialView: 'dayGridMonth',\n    initialEvents: this.events,\n    weekends: true,\n    editable: true,\n    eventResizableFromStart: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: 2,\n    navLinks: true,\n    eventClick: this.handleUpdateEventClick.bind(this),\n    eventClassNames: this.eventClass.bind(this),\n    select: this.handleDateSelect.bind(this)\n  };\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   * @param {CalendarService} _calendarService\n   * @param {CoreConfigService} _coreConfigService\n   */\n  constructor(\n    private _coreSidebarService: CoreSidebarService,\n    private _calendarService: CalendarService,\n    private _coreConfigService: CoreConfigService\n  ) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Event Class\n   *\n   * @param s\n   */\n  eventClass(s) {\n    const calendarsColor = {\n      Business: 'primary',\n      Holiday: 'success',\n      Personal: 'danger',\n      Family: 'warning',\n      ETC: 'info'\n    };\n\n    const colorName = calendarsColor[s.event._def.extendedProps.calendar];\n    return `bg-light-${colorName}`;\n  }\n\n  /**\n   * Update Event\n   *\n   * @param eventRef\n   */\n  handleUpdateEventClick(eventRef: EventClickArg) {\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\n    this._calendarService.updateCurrentEvent(eventRef);\n  }\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  /**\n   * Date select Event\n   *\n   * @param eventRef\n   */\n  handleDateSelect(eventRef) {\n    const newEvent = new EventRef();\n    newEvent.start = eventRef.start;\n    this._coreSidebarService.getSidebarRegistry('calendar-event-sidebar').toggleOpen();\n    this._calendarService.onCurrentEventChange.next(newEvent);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe config change\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n      // ! If we have zoomIn route Transition then load calendar after 450ms(Transition will finish in 400ms)\n      if (config.layout.animation === 'zoomIn') {\n        setTimeout(() => {\n          // Subscribe to Event Change\n          this._calendarService.onEventChange.subscribe(res => {\n            this.events = res;\n            this.calendarOptions.events = res;\n          });\n        }, 450);\n      } else {\n        // Subscribe to Event Change\n        this._calendarService.onEventChange.subscribe(res => {\n          this.events = res;\n          this.calendarOptions.events = res;\n        });\n      }\n    });\n\n    this._calendarService.onCurrentEventChange.subscribe(res => {\n      this.event = res;\n    });\n  }\n\n  /**\n   * Calendar's custom button on click toggle sidebar\n   */\n  ngAfterViewInit() {\n    // Store this to _this as we need it on click event to call toggleSidebar\n    let _this = this;\n    this.calendarOptions.customButtons = {\n      sidebarToggle: {\n        text: '',\n        click() {\n          _this.toggleSidebar('calendar-main-sidebar');\n        }\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <div class=\"app-calendar overflow-hidden border\">\n      <div class=\"row no-gutters\">\n        <!-- calendar main sidebar -->\n        <core-sidebar\n          class=\"col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column\"\n          name=\"calendar-main-sidebar\"\n          overlayClass=\"body-content-overlay\"\n          collapsibleSidebar=\"bs-gt-lg\"\n        >\n          <app-calendar-main-sidebar></app-calendar-main-sidebar>\n        </core-sidebar>\n        <!--/ calendar main sidebar -->\n\n        <!-- calendar -->\n        <div class=\"col position-relative\">\n          <div class=\"card shadow-none border-0 mb-0 rounded-0\">\n            <div class=\"card-body pb-0\">\n              <full-calendar [options]=\"calendarOptions\"></full-calendar>\n            </div>\n          </div>\n        </div>\n        <!-- calendar -->\n      </div>\n    </div>\n\n    <!-- calendar event sidebar -->\n    <core-sidebar\n      class=\"modal modal-slide-in fade event-sidebar\"\n      name=\"calendar-event-sidebar\"\n      overlayClass=\"modal-backdrop\"\n      hideOnEsc=\"true\"\n    >\n      <app-calendar-event-sidebar></app-calendar-event-sidebar>\n    </core-sidebar>\n    <!--/ calendar event sidebar -->\n  </div>\n</div>\n","export class EventRef {\n  id? = undefined;\n  url: string;\n  title: string = '';\n  start: string;\n  end: string;\n  allDay = false;\n  calendar: '';\n  extendedProps = {\n    location: '',\n    description: '',\n    addGuest: []\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FullCalendarModule } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CoreSidebarModule } from '@core/components';\n\nimport { CalendarEventSidebarComponent } from 'app/main/apps/calendar/calendar-sidebar/calendar-event-sidebar/calendar-event-sidebar.component';\nimport { CalendarMainSidebarComponent } from 'app/main/apps/calendar/calendar-sidebar/calendar-main-sidebar/calendar-main-sidebar.component';\n\nimport { CalendarComponent } from 'app/main/apps/calendar/calendar.component';\nimport { CalendarService } from 'app/main/apps/calendar/calendar.service';\n\nFullCalendarModule.registerPlugins([dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin]);\n\n// routing\nconst routes: Routes = [\n  {\n    path: '**',\n    component: CalendarComponent,\n    resolve: {\n      data: CalendarService\n    },\n    data: { animation: 'calendar' }\n  }\n];\n\n@NgModule({\n  declarations: [CalendarComponent, CalendarEventSidebarComponent, CalendarMainSidebarComponent],\n  imports: [\n    CommonModule,\n    FullCalendarModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    CoreSidebarModule,\n    FormsModule,\n    Ng2FlatpickrModule,\n    NgSelectModule,\n    NgbModule\n  ],\n  providers: [CalendarService]\n})\nexport class CalendarModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { EventRef } from 'app/main/apps/calendar/calendar.model';\n@Injectable()\nexport class CalendarService implements Resolve<any> {\n  // Public\n  public events;\n  public calendar;\n  public currentEvent;\n  public tempEvents;\n\n  public onEventChange: BehaviorSubject<any>;\n  public onCurrentEventChange: BehaviorSubject<any>;\n  public onCalendarChange: BehaviorSubject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {HttpClient} _httpClient\n   */\n  constructor(private _httpClient: HttpClient) {\n    this.onEventChange = new BehaviorSubject({});\n    this.onCurrentEventChange = new BehaviorSubject({});\n    this.onCalendarChange = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return new Promise((resolve, reject) => {\n      Promise.all([this.getEvents(), this.getCalendar()]).then(res => {\n        resolve(res);\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Events\n   */\n  getEvents(): Promise<any[]> {\n    const url = `api/calendar-events`;\n\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(url).subscribe((response: any) => {\n        this.events = response;\n        this.tempEvents = response;\n        this.onEventChange.next(this.events);\n        resolve(this.events);\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Calendar\n   */\n  getCalendar(): Promise<any[]> {\n    const url = `api/calendar-filter`;\n\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(url).subscribe((response: any) => {\n        this.calendar = response;\n        this.onCalendarChange.next(this.calendar);\n        resolve(this.calendar);\n      }, reject);\n    });\n  }\n\n  /**\n   * Create New Event\n   */\n  createNewEvent() {\n    this.currentEvent = {};\n    this.onCurrentEventChange.next(this.currentEvent);\n  }\n\n  /**\n   * Calendar Update\n   *\n   * @param calendars\n   */\n  calendarUpdate(calendars) {\n    const calendarsChecked = calendars.filter(calendar => {\n      return calendar.checked === true;\n    });\n\n    let calendarRef = [];\n    calendarsChecked.map(res => {\n      calendarRef.push(res.filter);\n    });\n\n    let filteredCalendar = this.tempEvents.filter(event => calendarRef.includes(event.calendar));\n    this.events = filteredCalendar;\n    this.onEventChange.next(this.events);\n  }\n\n  /**\n   * Delete Event\n   *\n   * @param event\n   */\n  deleteEvent(event) {\n    return new Promise((resolve, reject) => {\n      this._httpClient.delete('api/calendar-events/' + event.id).subscribe(response => {\n        this.getEvents();\n        resolve(response);\n      }, reject);\n    });\n  }\n\n  /**\n   * Add Event\n   *\n   * @param eventForm\n   */\n  addEvent(eventForm) {\n    const newEvent = new EventRef();\n    newEvent.url = eventForm.url;\n    newEvent.title = eventForm.title;\n    newEvent.start = eventForm.start;\n    newEvent.end = eventForm.end;\n    newEvent.allDay = eventForm.allDay;\n    newEvent.calendar = eventForm.selectlabel;\n    newEvent.extendedProps.location = eventForm.location;\n    newEvent.extendedProps.description = eventForm.description;\n    newEvent.extendedProps.addGuest = eventForm.addGuest;\n    this.currentEvent = newEvent;\n    this.onCurrentEventChange.next(this.currentEvent);\n    this.postNewEvent();\n  }\n\n  /**\n   * Update Event\n   *\n   * @param eventRef\n   */\n  updateCurrentEvent(eventRef) {\n    const newEvent = new EventRef();\n    newEvent.allDay = eventRef.event.allDay;\n    newEvent.id = parseInt(eventRef.event.id);\n    newEvent.url = eventRef.event.url;\n    newEvent.title = eventRef.event.title;\n    newEvent.start = eventRef.event.start;\n    newEvent.end = eventRef.event.end;\n    newEvent.calendar = eventRef.event.extendedProps.calendar;\n    newEvent.extendedProps.location = eventRef.event.extendedProps.location;\n    newEvent.extendedProps.description = eventRef.event.extendedProps.description;\n    newEvent.extendedProps.addGuest = eventRef.event.extendedProps.addGuest;\n    this.currentEvent = newEvent;\n    this.onCurrentEventChange.next(this.currentEvent);\n  }\n\n  /**\n   * Post New Event\n   */\n  postNewEvent() {\n    return new Promise((resolve, reject) => {\n      this._httpClient.post('api/calendar-events/', this.currentEvent).subscribe(response => {\n        this.getEvents();\n        resolve(response);\n      }, reject);\n    });\n  }\n\n  /**\n   * Post Updated Event\n   *\n   * @param event\n   */\n  postUpdatedEvent(event) {\n    return new Promise((resolve, reject) => {\n      this._httpClient.post('api/calendar-events/' + event.id, { ...event }).subscribe(response => {\n        this.getEvents();\n        resolve(response);\n      }, reject);\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}